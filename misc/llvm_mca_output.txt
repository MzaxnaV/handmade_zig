
[0] Code Region - OutputPlayingSound

Iterations:        100
Instructions:      50700
Total Cycles:      20220
Total uOps:        60800

Dispatch Width:    6
uOps Per Cycle:    3.01
IPC:               2.51
Block RThroughput: 101.3


Cycles with backend pressure increase [ 38.55% ]
Throughput Bottlenecks: 
  Resource Pressure       [ 32.08% ]
  - ICXFPDivider  [ 0.49% ]
  - ICXPort0  [ 21.21% ]
  - ICXPort1  [ 19.23% ]
  - ICXPort2  [ 10.85% ]
  - ICXPort3  [ 10.85% ]
  - ICXPort4  [ 16.76% ]
  - ICXPort5  [ 19.21% ]
  - ICXPort6  [ 22.67% ]
  - ICXPort7  [ 9.36% ]
  Data Dependencies:      [ 26.21% ]
  - Register Dependencies [ 26.21% ]
  - Memory Dependencies   [ 0.00% ]

Critical sequence based on the simulation:

              Instruction                                 Dependency Information
        0.    mov	ecx, dword ptr [rdx + 12]
        1.    lea	rdx, [rcx + 3]
        2.    shr	rdx, 2
        3.    mov	r9, rdx
        4.    shl	r9, 4
 +----< 5.    mov	r8, qword ptr [rsi + 8]
 |      6.    mov	rax, qword ptr [rsi + 16]
 +----> 7.    lea	r10, [rax + r8]                   ## REGISTER dependency:  r8
 +----> 8.    mov	r11d, r10d                        ## REGISTER dependency:  r10
 +----> 9.    and	r11d, 15                          ## REGISTER dependency:  r11d
 |      10.   mov	r15d, 16
 |      11.   mov	r12d, 16
 |      12.   sub	r12, r11
 +----> 13.   test	r11, r11                          ## REGISTER dependency:  r11d
 +----> 14.   cmove	r12, r11                          ## REGISTER dependency:  flags
 |      15.   add	rax, r9
 +----> 16.   add	rax, r12                          ## REGISTER dependency:  r12
 |      17.   add	r12, r10
 +----> 18.   add	r8, rax                           ## REGISTER dependency:  rax
 |      19.   mov	r10d, r8d
 |      20.   and	r10d, 15
 |      21.   sub	r15, r10
 |      22.   test	r10, r10
 |      23.   cmove	r15, r10
 |      24.   add	rax, r9
 |      25.   add	rax, r15
 |      26.   add	r15, r8
 |      27.   mov	qword ptr [rsp + 56], rsi
 |      28.   mov	qword ptr [rsi + 16], rax
 |      29.   vcvtusi2ss	xmm0, xmm0, dword ptr [rdi + 8]
 |      30.   test	rcx, rcx
 |      31.   je	.LBB3_10
 +----> 32.   cmp	rdx, 2                            ## RESOURCE interference:  ICXPort5 [ probability: 99% ]
 |      33.   mov	eax, 1
 +----> 34.   cmovae	rax, rdx                          ## REGISTER dependency:  flags
 |      35.   cmp	ecx, 5
 |      36.   jae	.LBB3_3
 |      37.   xor	ecx, ecx
 |      38.   jmp	.LBB3_8
 +----> 39.   mov	ecx, eax                          ## REGISTER dependency:  rax
 +----> 40.   and	ecx, -2                           ## REGISTER dependency:  ecx
 +----> 41.   lea	r8, [rcx - 2]                     ## REGISTER dependency:  ecx
 +----> 42.   mov	rdx, r8                           ## REGISTER dependency:  r8
 +----> 43.   shr	rdx                               ## REGISTER dependency:  rdx
 |      44.   add	rdx, 1
 +----> 45.   test	r8, r8                            ## RESOURCE interference:  ICXPort0 [ probability: 99% ]
 +----> 46.   je	.LBB3_70                                  ## REGISTER dependency:  flags
 |      47.   mov	r9, rdx
 |      48.   and	r9, -2
 |      49.   mov	r8d, 48
 |      50.   vxorps	xmm1, xmm1, xmm1
 |      51.   vmovaps	xmmword ptr [r12 + r8 - 48], xmm1
 |      52.   vmovaps	xmmword ptr [r15 + r8 - 48], xmm1
 |      53.   vmovaps	xmmword ptr [r12 + r8 - 32], xmm1
 |      54.   vmovaps	xmmword ptr [r15 + r8 - 32], xmm1
 |      55.   vmovaps	xmmword ptr [r12 + r8 - 16], xmm1
 |      56.   vmovaps	xmmword ptr [r15 + r8 - 16], xmm1
 |      57.   vmovaps	xmmword ptr [r12 + r8], xmm1
 |      58.   vmovaps	xmmword ptr [r15 + r8], xmm1
 |      59.   add	r8, 64
 |      60.   add	r9, -2
 |      61.   jne	.LBB3_5
 |      62.   add	r8, -32
 |      63.   test	dl, 1
 |      64.   je	.LBB3_8
 |      65.   vxorps	xmm1, xmm1, xmm1
 |      66.   vmovaps	xmmword ptr [r12 + r8 - 16], xmm1
 |      67.   vmovaps	xmmword ptr [r15 + r8 - 16], xmm1
 |      68.   vmovaps	xmmword ptr [r12 + r8], xmm1
 |      69.   vmovaps	xmmword ptr [r15 + r8], xmm1
 |      70.   test	al, 1
 +----> 71.   je	.LBB3_10                                  ## RESOURCE interference:  ICXPort0 [ probability: 99% ]
 |      72.   shl	rcx, 4
 |      73.   vxorps	xmm1, xmm1, xmm1
 |      74.   vmovaps	xmmword ptr [r12 + rcx], xmm1
 |      75.   vmovaps	xmmword ptr [r15 + rcx], xmm1
 |      76.   mov	rax, qword ptr [r13 + 15202272]
 +----> 77.   test	rax, rax                          ## RESOURCE interference:  ICXPort6 [ probability: 99% ]
 +----> 78.   je	.LBB3_60                                  ## REGISTER dependency:  flags
 |      79.   mov	esi, dword ptr [rdi + 12]
 +----> 80.   test	esi, esi                          ## RESOURCE interference:  ICXPort0 [ probability: 99% ]
 +----> 81.   je	.LBB3_59                                  ## REGISTER dependency:  flags
 |      82.   mov	qword ptr [rsp + 32], rdi
 |      83.   vmovss	xmm6, dword ptr [rip + .LCPI3_0]
 |      84.   vdivss	xmm0, xmm6, xmm0
 |      85.   lea	rcx, [r13 + 15202272]
 |      86.   mov	qword ptr [rsp + 40], rcx
 |      87.   vbroadcastss	xmm7, xmm0
 |      88.   mov	r11b, 1
 |      89.   vpbroadcastd	xmm8, dword ptr [rip + .LCPI3_1]
 |      90.   vpbroadcastd	xmm9, dword ptr [rip + .LCPI3_2]
 |      91.   vxorps	xmm10, xmm10, xmm10
 |      92.   vmovss	xmm11, dword ptr [rip + .LCPI3_3]
 |      93.   mov	rbx, rax
 |      94.   test	esi, esi
 |      95.   jne	.LBB3_15
 |      96.   jmp	.LBB3_13
 |      97.   mov	rax, qword ptr [rax]
 |      98.   test	rax, rax
 |      99.   jne	.LBB3_59
 |      100.  jmp	.LBB3_60
 |      101.  lea	rcx, [rax + 80]
 |      102.  xor	edx, edx
 |      103.  jmp	.LBB3_58
 |      104.  lea	rcx, [rax + 136]
 |      105.  mov	edx, 1
 |      106.  jmp	.LBB3_58
 |      107.  lea	rcx, [rax + 192]
 +----> 108.  mov	edx, 2                            ## RESOURCE interference:  ICXPort0 [ probability: 1% ]
 +----> 109.  imul	rdx, rdx, 56                      ## REGISTER dependency:  edx
 |      110.  mov	byte ptr [rcx], 1
 +----> 111.  mov	r8, qword ptr [rax + rdx + 48]    ## REGISTER dependency:  rdx
 |      112.  add	dword ptr [rax + rdx + 56], 1
 |      113.  lea	r9, [rax + rdx]
 |      114.  add	r9, 32
 |      115.  mov	qword ptr [rax + rdx + 64], r9
 |      116.  mov	qword ptr [rax + rdx + 72], r8
 |      117.  mov	rcx, qword ptr [rax + rdx + 40]
 |      118.  add	rcx, r8
 |      119.  mov	r10d, ecx
 |      120.  and	r10d, 7
 |      121.  mov	r11d, 8
 |      122.  sub	r11, r10
 |      123.  test	r10, r10
 |      124.  cmove	r11, r10
 |      125.  lea	r8, [r8 + r11 + 32]
 |      126.  mov	qword ptr [rax + rdx + 48], r8
 |      127.  mov	qword ptr [r11 + rcx], rbp
 |      128.  mov	eax, dword ptr [rbx + 36]
 |      129.  mov	dword ptr [r11 + rcx + 24], eax
 |      130.  mov	qword ptr [r11 + rcx + 8], r9
 |      131.  mov	rax, qword ptr [rbp + 24]
 |      132.  mov	rdx, qword ptr [rbp + 16]
 |      133.  add	rdx, rax
 |      134.  mov	r8d, edx
 |      135.  and	r8d, 7
 |      136.  mov	r9d, 8
 |      137.  sub	r9, r8
 |      138.  test	r8, r8
 |      139.  cmove	r9, r8
 |      140.  lea	r8, [r11 + rcx]
 |      141.  add	rax, r9
 |      142.  add	rax, 24
 |      143.  add	r9, rdx
 |      144.  mov	qword ptr [rbp + 24], rax
 |      145.  mov	qword ptr [r11 + rcx + 16], r9
 |      146.  mov	byte ptr [r11 + rcx + 28], 2
 |      147.  mov	rax, qword ptr [rbp]
 |      148.  mov	rcx, qword ptr [rax + 288]
 |      149.  lea	rdx, [rip + handmade_asset.LoadSoundWork]
 |      150.  call	qword ptr [rip + handmade_data.PlatformAddEntry]
 |      151.  mov	r11b, 1
 |      152.  mov	rax, qword ptr [rbx]
 |      153.  test	rax, rax
 |      154.  jne	.LBB3_54
 |      155.  jmp	.LBB3_60
 |      156.  mov	rdi, qword ptr [rsp + 32]
 +----> 157.  mov	rax, qword ptr [rbx]              ## RESOURCE interference:  ICXPort2 [ probability: 99% ]
 |      158.  test	rax, rax
 |      159.  je	.LBB3_60
 |      160.  mov	esi, dword ptr [rdi + 12]
 |      161.  mov	qword ptr [rsp + 40], rbx
 +----> 162.  mov	rbx, rax                          ## REGISTER dependency:  rax
 |      163.  test	esi, esi
 |      164.  jne	.LBB3_15
 |      165.  jmp	.LBB3_13
 |      166.  sub	esi, ecx
 |      167.  je	.LBB3_13
 |      168.  mov	rcx, qword ptr [rbp + 88]
 +----> 169.  mov	eax, dword ptr [rbx + 36]         ## REGISTER dependency:  rbx
 +----> 170.  mov	rdx, rax                          ## REGISTER dependency:  eax
 +----> 171.  shl	rdx, 4                            ## REGISTER dependency:  rdx
 |      172.  mov	rdi, qword ptr [rcx + rdx]
 |      173.  test	rdi, rdi
 |      174.  je	.LBB3_42
 |      175.  mov	rdx, qword ptr [rbp + 72]
 |      176.  lea	rax, [rax + 2*rax]
 |      177.  lea	r14, [rdx + 8*rax]
 |      178.  add	r14, 16
 |      179.  mov	edx, dword ptr [rdx + 8*rax + 16]
 |      180.  test	rdx, rdx
 |      181.  je	.LBB3_28
 |      182.  shl	rdx, 4
 |      183.  xor	eax, eax
 |      184.  lock		cmpxchg	byte ptr [rcx + rdx + 8], r11b
 |      185.  jne	.LBB3_23
 |      186.  mov	rax, qword ptr [rbp]
 |      187.  cmp	byte ptr [rax + 80], 1
 |      188.  jne	.LBB3_24
 |      189.  cmp	byte ptr [rax + 136], 1
 |      190.  jne	.LBB3_25
 |      191.  cmp	byte ptr [rax + 192], 1
 |      192.  jne	.LBB3_26
 |      193.  cmp	byte ptr [rax + 248], 0
 |      194.  jne	.LBB3_28
 |      195.  lea	rcx, [rax + 248]
 |      196.  mov	edx, 3
 |      197.  jmp	.LBB3_27
 |      198.  mov	eax, dword ptr [r14]
 |      199.  mov	rcx, qword ptr [rbp + 88]
 |      200.  shl	rax, 4
 |      201.  mov	byte ptr [rcx + rax + 8], 0
 |      202.  jmp	.LBB3_28
 |      203.  lea	rcx, [rax + 80]
 |      204.  xor	edx, edx
 |      205.  jmp	.LBB3_27
 |      206.  lea	rcx, [rax + 136]
 |      207.  mov	edx, 1
 |      208.  jmp	.LBB3_27
 |      209.  lea	rcx, [rax + 192]
 +----> 210.  mov	edx, 2                            ## RESOURCE interference:  ICXPort6 [ probability: 99% ]
 +----> 211.  imul	rdx, rdx, 56                      ## REGISTER dependency:  edx
 |      212.  mov	byte ptr [rcx], 1
 +----> 213.  mov	r8, qword ptr [rax + rdx + 48]    ## REGISTER dependency:  rdx
 |      214.  add	dword ptr [rax + rdx + 56], 1
 |      215.  lea	r9, [rax + rdx]
 |      216.  add	r9, 32
 |      217.  mov	qword ptr [rax + rdx + 64], r9
 |      218.  mov	qword ptr [rax + rdx + 72], r8
 |      219.  mov	rcx, qword ptr [rax + rdx + 40]
 +----> 220.  add	rcx, r8                           ## REGISTER dependency:  r8
 +----> 221.  mov	r10d, ecx                         ## REGISTER dependency:  rcx
 +----> 222.  and	r10d, 7                           ## REGISTER dependency:  r10d
 |      223.  mov	r11d, 8
 |      224.  sub	r11, r10
 +----> 225.  test	r10, r10                          ## REGISTER dependency:  r10d
 |      226.  cmove	r11, r10
 |      227.  lea	r8, [r8 + r11 + 32]
 |      228.  mov	qword ptr [rax + rdx + 48], r8
 |      229.  mov	qword ptr [r11 + rcx], rbp
 |      230.  mov	eax, dword ptr [r14]
 |      231.  mov	dword ptr [r11 + rcx + 24], eax
 |      232.  mov	qword ptr [r11 + rcx + 8], r9
 |      233.  mov	rax, qword ptr [rbp + 24]
 |      234.  mov	rdx, qword ptr [rbp + 16]
 |      235.  add	rdx, rax
 |      236.  mov	r8d, edx
 |      237.  and	r8d, 7
 |      238.  mov	r9d, 8
 |      239.  sub	r9, r8
 |      240.  test	r8, r8
 |      241.  cmove	r9, r8
 |      242.  lea	r8, [r11 + rcx]
 |      243.  add	rax, r9
 |      244.  add	rax, 24
 |      245.  add	r9, rdx
 |      246.  mov	qword ptr [rbp + 24], rax
 |      247.  mov	qword ptr [r11 + rcx + 16], r9
 |      248.  mov	byte ptr [r11 + rcx + 28], 2
 |      249.  mov	rax, qword ptr [rbp]
 |      250.  mov	rcx, qword ptr [rax + 288]
 |      251.  lea	rdx, [rip + handmade_asset.LoadSoundWork]
 |      252.  call	qword ptr [rip + handmade_data.PlatformAddEntry]
 |      253.  mov	r11b, 1
 |      254.  vmovsd	xmm1, qword ptr [rbx + 8]
 |      255.  vmovsd	xmm0, qword ptr [rbx + 16]
 |      256.  vmulps	xmm2, xmm7, xmm0
 |      257.  vmovd	xmm0, dword ptr [rbx + 40]
 |      258.  mov	eax, dword ptr [rdi + 16]
 |      259.  vmovdqa	xmm3, xmm9
 +----> 260.  vpternlogd	xmm3, xmm0, xmm8, 248             ## RESOURCE interference:  ICXPort5 [ probability: 99% ]
 +----> 261.  vaddss	xmm3, xmm0, xmm3                  ## REGISTER dependency:  xmm3
 +----> 262.  vroundss	xmm3, xmm3, xmm3, 11              ## REGISTER dependency:  xmm3
 |      263.  vcvttss2usi	ecx, xmm3
 |      264.  sub	eax, ecx
 |      265.  vcvtusi2ss	xmm4, xmm17, eax
 |      266.  vmovss	xmm3, dword ptr [rbx + 32]
 |      267.  vdivss	xmm4, xmm4, xmm3
 |      268.  vmovdqa	xmm5, xmm9
 |      269.  vpternlogd	xmm5, xmm4, xmm8, 248
 |      270.  vaddss	xmm4, xmm4, xmm5
 |      271.  vroundss	xmm4, xmm4, xmm4, 11
 |      272.  vcvttss2usi	r8d, xmm4
 |      273.  cmp	esi, r8d
 |      274.  cmovb	r8d, esi
 +----> 275.  vucomiss	xmm2, xmm10                       ## RESOURCE interference:  ICXPort0 [ probability: 99% ]
 |      276.  jne	.LBB3_29
 |      277.  jnp	.LBB3_31
 |      278.  vmovss	xmm4, dword ptr [rbx + 24]
 |      279.  vsubss	xmm4, xmm4, xmm1
 +----> 280.  vdivss	xmm4, xmm4, xmm2                  ## RESOURCE interference:  ICXPort0 [ probability: 99% ]
 |      281.  vaddss	xmm4, xmm11, xmm4
 |      282.  vcvttss2usi	ecx, xmm4
 |      283.  cmp	r8d, ecx
 |      284.  seta	al
 |      285.  cmovae	r8d, ecx
 |      286.  vmovshdup	xmm4, xmm2
 |      287.  vucomiss	xmm4, xmm10
 |      288.  jne	.LBB3_30
 |      289.  jnp	.LBB3_32
 |      290.  vmovss	xmm5, dword ptr [rbx + 28]
 |      291.  vmovshdup	xmm16, xmm1
 |      292.  vsubss	xmm5, xmm5, xmm16
 +----> 293.  vdivss	xmm4, xmm5, xmm4                  ## RESOURCE interference:  ICXFPDivider [ probability: 99% ]
 +----> 294.  vaddss	xmm4, xmm11, xmm4                 ## REGISTER dependency:  xmm4
 +----> 295.  vcvttss2usi	ecx, xmm4                 ## REGISTER dependency:  xmm4
 +----> 296.  cmp	r8d, ecx                          ## REGISTER dependency:  ecx
 |      297.  seta	dl
 +----> 298.  cmovae	r8d, ecx                          ## REGISTER dependency:  flags
 |      299.  mov	ecx, r8d
 +----> 300.  test	r8d, r8d                          ## REGISTER dependency:  r8d
 +----> 301.  jne	.LBB3_33                          ## REGISTER dependency:  flags
 |      302.  jmp	.LBB3_35
 |      303.  xor	eax, eax
 |      304.  vmovshdup	xmm4, xmm2
 |      305.  vucomiss	xmm4, xmm10
 |      306.  jne	.LBB3_30
 |      307.  jp	.LBB3_30
 |      308.  xor	edx, edx
 |      309.  mov	ecx, r8d
 +----> 310.  test	r8d, r8d                          ## RESOURCE interference:  ICXPort6 [ probability: 100% ]
 +----> 311.  je	.LBB3_35                                  ## REGISTER dependency:  flags
        312.  xor	r8d, r8d
        313.  vroundss	xmm4, xmm0, xmm0, 9
        314.  vcvttss2si	r9d, xmm4
        315.  vcvtusi2ss	xmm4, xmm17, r9d
        316.  mov	r10, qword ptr [rdi]
        317.  vsubss	xmm4, xmm0, xmm4
        318.  vmovd	xmm5, dword ptr [r10 + 2*r9]
        319.  vpmovsxwd	xmm5, xmm5
        320.  vcvtdq2ps	xmm5, xmm5
        321.  vsubss	xmm16, xmm6, xmm4
        322.  vinsertps	xmm4, xmm16, xmm4, 16
        323.  vmulps	xmm4, xmm4, xmm5
        324.  vmovshdup	xmm5, xmm4
        325.  vmulss	xmm16, xmm1, dword ptr [r13 + 15202288]
        326.  vaddss	xmm4, xmm4, xmm5
        327.  vmulss	xmm5, xmm16, xmm4
        328.  vaddss	xmm5, xmm5, dword ptr [r12 + 4*r8]
        329.  vmovss	dword ptr [r12 + 4*r8], xmm5
        330.  vmovshdup	xmm5, xmm1
        331.  vmulss	xmm5, xmm5, dword ptr [r13 + 15202292]
        332.  vmulss	xmm4, xmm5, xmm4
        333.  vaddss	xmm4, xmm4, dword ptr [r15 + 4*r8]
        334.  vmovss	dword ptr [r15 + 4*r8], xmm4
        335.  vaddps	xmm1, xmm2, xmm1
        336.  vaddss	xmm0, xmm3, xmm0
        337.  add	r8, 1
        338.  cmp	rcx, r8
        339.  jne	.LBB3_34
        340.  vmovlps	qword ptr [rbx + 8], xmm1
        341.  test	al, al
        342.  je	.LBB3_36
        343.  vmovss	xmm1, dword ptr [rbx + 24]
        344.  vmovss	dword ptr [rbx + 8], xmm1
        345.  mov	dword ptr [rbx + 16], 0
        346.  test	dl, dl
        347.  jne	.LBB3_39
        348.  vmovss	dword ptr [rbx + 40], xmm0
        349.  vcvttss2usi	eax, xmm0
        350.  cmp	dword ptr [rdi + 16], eax
        351.  jne	.LBB3_14
        352.  jmp	.LBB3_40
        353.  test	dl, dl
        354.  je	.LBB3_37
        355.  vmovss	xmm1, dword ptr [rbx + 28]
        356.  vmovss	dword ptr [rbx + 12], xmm1
        357.  mov	dword ptr [rbx + 20], 0
        358.  vmovss	dword ptr [rbx + 40], xmm0
        359.  vcvttss2usi	eax, xmm0
        360.  cmp	dword ptr [rdi + 16], eax
        361.  jne	.LBB3_14
        362.  mov	eax, dword ptr [r14]
        363.  test	eax, eax
        364.  je	.LBB3_50
        365.  mov	dword ptr [rbx + 36], eax
        366.  mov	dword ptr [rbx + 40], 0
        367.  jmp	.LBB3_14
        368.  test	rax, rax
        369.  je	.LBB3_13
        370.  xor	eax, eax
        371.  lock		cmpxchg	byte ptr [rcx + rdx + 8], r11b
        372.  mov	rdi, qword ptr [rsp + 32]
        373.  jne	.LBB3_52
        374.  mov	rax, qword ptr [rbp]
        375.  cmp	byte ptr [rax + 80], 1
        376.  jne	.LBB3_55
        377.  cmp	byte ptr [rax + 136], 1
        378.  jne	.LBB3_56
        379.  cmp	byte ptr [rax + 192], 1
        380.  jne	.LBB3_57
        381.  cmp	byte ptr [rax + 248], 0
        382.  jne	.LBB3_53
        383.  lea	rcx, [rax + 248]
        384.  mov	edx, 3
        385.  jmp	.LBB3_58
        386.  mov	rax, qword ptr [rbx]
        387.  mov	rcx, qword ptr [rsp + 40]
        388.  mov	qword ptr [rcx], rax
        389.  mov	rax, qword ptr [r13 + 15202280]
        390.  mov	qword ptr [rbx], rax
        391.  mov	qword ptr [r13 + 15202280], rbx
        392.  mov	rbx, rcx
        393.  jmp	.LBB3_13
        394.  mov	eax, dword ptr [rbx + 36]
        395.  mov	rcx, qword ptr [rbp + 88]
        396.  shl	rax, 4
        397.  mov	byte ptr [rcx + rax + 8], 0
        398.  mov	rax, qword ptr [rbx]
        399.  test	rax, rax
        400.  jne	.LBB3_54
        401.  mov	eax, dword ptr [rdi + 12]
        402.  test	rax, rax
        403.  je	.LBB3_80
        404.  mov	rcx, qword ptr [rdi]
        405.  cmp	eax, 8
        406.  jae	.LBB3_63
        407.  xor	edx, edx
        408.  jmp	.LBB3_75
        409.  lea	rdx, [rcx + 4*rax]
        410.  lea	r8, [r12 + 4*rax]
        411.  cmp	rcx, r8
        412.  setb	r10b
        413.  cmp	rdx, r12
        414.  seta	r11b
        415.  lea	r8, [r15 + 4*rax]
        416.  cmp	rcx, r8
        417.  setb	r8b
        418.  cmp	rdx, r15
        419.  seta	r9b
        420.  xor	edx, edx
        421.  test	r10b, r11b
        422.  jne	.LBB3_75
        423.  and	r8b, r9b
        424.  jne	.LBB3_75
        425.  cmp	eax, 16
        426.  jae	.LBB3_71
        427.  xor	edx, edx
        428.  mov	r8, rdx
        429.  mov	edx, eax
        430.  and	edx, -8
        431.  vbroadcastss	ymm0, dword ptr [rip + .LCPI3_3]
        432.  vaddps	ymm1, ymm0, ymmword ptr [r12 + 4*r8]
        433.  vcvttps2dq	ymm1, ymm1
        434.  vpmovdw	xmm1, ymm1
        435.  vaddps	ymm2, ymm0, ymmword ptr [r15 + 4*r8]
        436.  vcvttps2dq	ymm2, ymm2
        437.  vpmovdw	xmm2, ymm2
        438.  vpunpcklwd	xmm3, xmm1, xmm2
        439.  vpunpckhwd	xmm1, xmm1, xmm2
        440.  vmovdqu	xmmword ptr [rcx + 4*r8 + 16], xmm1
        441.  vmovdqu	xmmword ptr [rcx + 4*r8], xmm3
        442.  add	r8, 8
        443.  cmp	rdx, r8
        444.  jne	.LBB3_68
        445.  cmp	rdx, rax
        446.  jne	.LBB3_75
        447.  jmp	.LBB3_80
        448.  mov	r8d, 16
        449.  test	dl, 1
        450.  jne	.LBB3_7
        451.  jmp	.LBB3_8
        452.  lea	rdx, [4*rax]
        453.  and	rdx, -64
        454.  xor	r8d, r8d
        455.  vbroadcastss	zmm0, dword ptr [rip + .LCPI3_3]
        456.  vmovdqa64	zmm1, zmmword ptr [rip + .LCPI3_4]
        457.  vaddps	zmm2, zmm0, zmmword ptr [r12 + r8]
        458.  vcvttps2dq	zmm2, zmm2
        459.  vpmovdw	ymm2, zmm2
        460.  vaddps	zmm3, zmm0, zmmword ptr [r15 + r8]
        461.  vcvttps2dq	zmm3, zmm3
        462.  vpmovdw	ymm3, zmm3
        463.  vinserti64x4	zmm3, zmm3, ymm3, 1
        464.  vinserti64x4	zmm2, zmm2, ymm2, 1
        465.  vpermt2w	zmm2, zmm1, zmm3
        466.  vmovdqu64	zmmword ptr [rcx + r8], zmm2
        467.  add	r8, 64
        468.  cmp	rdx, r8
        469.  jne	.LBB3_72
        470.  mov	edx, eax
        471.  and	edx, -16
        472.  cmp	rdx, rax
        473.  je	.LBB3_80
        474.  test	al, 8
        475.  jne	.LBB3_67
        476.  mov	r8, rdx
        477.  not	r8
        478.  test	al, 1
        479.  je	.LBB3_77
        480.  vmovss	xmm0, dword ptr [rip + .LCPI3_3]
        481.  vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx]
        482.  vcvttss2si	r9d, xmm1
        483.  mov	word ptr [rcx + 4*rdx], r9w
        484.  vaddss	xmm0, xmm0, dword ptr [r15 + 4*rdx]
        485.  vcvttss2si	r9d, xmm0
        486.  mov	word ptr [rcx + 4*rdx + 2], r9w
        487.  or	rdx, 1
        488.  add	r8, rax
        489.  je	.LBB3_80
        490.  add	r15, 4
        491.  vmovss	xmm0, dword ptr [rip + .LCPI3_3]
        492.  vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx]
        493.  vcvttss2si	r8d, xmm1
        494.  mov	word ptr [rcx + 4*rdx], r8w
        495.  vaddss	xmm1, xmm0, dword ptr [r15 + 4*rdx - 4]
        496.  vcvttss2si	r8d, xmm1
        497.  mov	word ptr [rcx + 4*rdx + 2], r8w
        498.  vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx + 4]
        499.  vcvttss2si	r8d, xmm1
        500.  mov	word ptr [rcx + 4*rdx + 4], r8w
        501.  vaddss	xmm1, xmm0, dword ptr [r15 + 4*rdx]
        502.  vcvttss2si	r8d, xmm1
        503.  mov	word ptr [rcx + 4*rdx + 6], r8w
        504.  add	rdx, 2
        505.  cmp	rax, rdx
        506.  jne	.LBB3_79


Instruction Info:
[1]: #uOps
[2]: Latency
[3]: RThroughput
[4]: MayLoad
[5]: MayStore
[6]: HasSideEffects (U)

[1]    [2]    [3]    [4]    [5]    [6]    Instructions:
 1      5     0.50    *                   mov	ecx, dword ptr [rdx + 12]
 1      1     0.50                        lea	rdx, [rcx + 3]
 1      1     0.50                        shr	rdx, 2
 1      1     0.25                        mov	r9, rdx
 1      1     0.50                        shl	r9, 4
 1      5     0.50    *                   mov	r8, qword ptr [rsi + 8]
 1      5     0.50    *                   mov	rax, qword ptr [rsi + 16]
 1      1     0.50                        lea	r10, [rax + r8]
 1      1     0.25                        mov	r11d, r10d
 1      1     0.25                        and	r11d, 15
 1      1     0.25                        mov	r15d, 16
 1      1     0.25                        mov	r12d, 16
 1      1     0.25                        sub	r12, r11
 1      1     0.25                        test	r11, r11
 1      1     0.50                        cmove	r12, r11
 1      1     0.25                        add	rax, r9
 1      1     0.25                        add	rax, r12
 1      1     0.25                        add	r12, r10
 1      1     0.25                        add	r8, rax
 1      1     0.25                        mov	r10d, r8d
 1      1     0.25                        and	r10d, 15
 1      1     0.25                        sub	r15, r10
 1      1     0.25                        test	r10, r10
 1      1     0.50                        cmove	r15, r10
 1      1     0.25                        add	rax, r9
 1      1     0.25                        add	rax, r15
 1      1     0.25                        add	r15, r8
 1      1     1.00           *            mov	qword ptr [rsp + 56], rsi
 1      1     1.00           *            mov	qword ptr [rsi + 16], rax
 2      9     1.00    *                   vcvtusi2ss	xmm0, xmm0, dword ptr [rdi + 8]
 1      1     0.25                        test	rcx, rcx
 1      1     0.50                        je	.LBB3_10
 1      1     0.25                        cmp	rdx, 2
 1      1     0.25                        mov	eax, 1
 1      1     0.50                        cmovae	rax, rdx
 1      1     0.25                        cmp	ecx, 5
 1      1     0.50                        jae	.LBB3_3
 1      0     0.17                        xor	ecx, ecx
 1      1     0.50                        jmp	.LBB3_8
 1      1     0.25                        mov	ecx, eax
 1      1     0.25                        and	ecx, -2
 1      1     0.50                        lea	r8, [rcx - 2]
 1      1     0.25                        mov	rdx, r8
 1      1     0.50                        shr	rdx
 1      1     0.25                        add	rdx, 1
 1      1     0.25                        test	r8, r8
 1      1     0.50                        je	.LBB3_70
 1      1     0.25                        mov	r9, rdx
 1      1     0.25                        and	r9, -2
 1      1     0.25                        mov	r8d, 48
 1      0     0.17                        vxorps	xmm1, xmm1, xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r12 + r8 - 48], xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r15 + r8 - 48], xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r12 + r8 - 32], xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r15 + r8 - 32], xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r12 + r8 - 16], xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r15 + r8 - 16], xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r12 + r8], xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r15 + r8], xmm1
 1      1     0.25                        add	r8, 64
 1      1     0.25                        add	r9, -2
 1      1     0.50                        jne	.LBB3_5
 1      1     0.25                        add	r8, -32
 1      1     0.25                        test	dl, 1
 1      1     0.50                        je	.LBB3_8
 1      0     0.17                        vxorps	xmm1, xmm1, xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r12 + r8 - 16], xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r15 + r8 - 16], xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r12 + r8], xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r15 + r8], xmm1
 1      1     0.25                        test	al, 1
 1      1     0.50                        je	.LBB3_10
 1      1     0.50                        shl	rcx, 4
 1      0     0.17                        vxorps	xmm1, xmm1, xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r12 + rcx], xmm1
 2      1     1.00           *            vmovaps	xmmword ptr [r15 + rcx], xmm1
 1      5     0.50    *                   mov	rax, qword ptr [r13 + 15202272]
 1      1     0.25                        test	rax, rax
 1      1     0.50                        je	.LBB3_60
 1      5     0.50    *                   mov	esi, dword ptr [rdi + 12]
 1      1     0.25                        test	esi, esi
 1      1     0.50                        je	.LBB3_59
 1      1     1.00           *            mov	qword ptr [rsp + 32], rdi
 1      5     0.50    *                   vmovss	xmm6, dword ptr [rip + .LCPI3_0]
 1      11    3.00                        vdivss	xmm0, xmm6, xmm0
 1      1     0.50                        lea	rcx, [r13 + 15202272]
 1      1     1.00           *            mov	qword ptr [rsp + 40], rcx
 1      1     0.50                        vbroadcastss	xmm7, xmm0
 1      1     0.25                        mov	r11b, 1
 1      6     0.50    *                   vpbroadcastd	xmm8, dword ptr [rip + .LCPI3_1]
 1      6     0.50    *                   vpbroadcastd	xmm9, dword ptr [rip + .LCPI3_2]
 1      0     0.17                        vxorps	xmm10, xmm10, xmm10
 1      5     0.50    *                   vmovss	xmm11, dword ptr [rip + .LCPI3_3]
 1      1     0.25                        mov	rbx, rax
 1      1     0.25                        test	esi, esi
 1      1     0.50                        jne	.LBB3_15
 1      1     0.50                        jmp	.LBB3_13
 1      5     0.50    *                   mov	rax, qword ptr [rax]
 1      1     0.25                        test	rax, rax
 1      1     0.50                        jne	.LBB3_59
 1      1     0.50                        jmp	.LBB3_60
 1      1     0.50                        lea	rcx, [rax + 80]
 1      0     0.17                        xor	edx, edx
 1      1     0.50                        jmp	.LBB3_58
 1      1     0.50                        lea	rcx, [rax + 136]
 1      1     0.25                        mov	edx, 1
 1      1     0.50                        jmp	.LBB3_58
 1      1     0.50                        lea	rcx, [rax + 192]
 1      1     0.25                        mov	edx, 2
 1      3     1.00                        imul	rdx, rdx, 56
 1      1     1.00           *            mov	byte ptr [rcx], 1
 1      5     0.50    *                   mov	r8, qword ptr [rax + rdx + 48]
 3      7     1.00    *      *            add	dword ptr [rax + rdx + 56], 1
 1      1     0.50                        lea	r9, [rax + rdx]
 1      1     0.25                        add	r9, 32
 1      1     1.00           *            mov	qword ptr [rax + rdx + 64], r9
 1      1     1.00           *            mov	qword ptr [rax + rdx + 72], r8
 1      5     0.50    *                   mov	rcx, qword ptr [rax + rdx + 40]
 1      1     0.25                        add	rcx, r8
 1      1     0.25                        mov	r10d, ecx
 1      1     0.25                        and	r10d, 7
 1      1     0.25                        mov	r11d, 8
 1      1     0.25                        sub	r11, r10
 1      1     0.25                        test	r10, r10
 1      1     0.50                        cmove	r11, r10
 1      1     0.50                        lea	r8, [r8 + r11 + 32]
 1      1     1.00           *            mov	qword ptr [rax + rdx + 48], r8
 1      1     1.00           *            mov	qword ptr [r11 + rcx], rbp
 1      5     0.50    *                   mov	eax, dword ptr [rbx + 36]
 1      1     1.00           *            mov	dword ptr [r11 + rcx + 24], eax
 1      1     1.00           *            mov	qword ptr [r11 + rcx + 8], r9
 1      5     0.50    *                   mov	rax, qword ptr [rbp + 24]
 1      5     0.50    *                   mov	rdx, qword ptr [rbp + 16]
 1      1     0.25                        add	rdx, rax
 1      1     0.25                        mov	r8d, edx
 1      1     0.25                        and	r8d, 7
 1      1     0.25                        mov	r9d, 8
 1      1     0.25                        sub	r9, r8
 1      1     0.25                        test	r8, r8
 1      1     0.50                        cmove	r9, r8
 1      1     0.50                        lea	r8, [r11 + rcx]
 1      1     0.25                        add	rax, r9
 1      1     0.25                        add	rax, 24
 1      1     0.25                        add	r9, rdx
 1      1     1.00           *            mov	qword ptr [rbp + 24], rax
 1      1     1.00           *            mov	qword ptr [r11 + rcx + 16], r9
 1      1     1.00           *            mov	byte ptr [r11 + rcx + 28], 2
 1      5     0.50    *                   mov	rax, qword ptr [rbp]
 1      5     0.50    *                   mov	rcx, qword ptr [rax + 288]
 1      1     0.50                        lea	rdx, [rip + handmade_asset.LoadSoundWork]
 5      7     1.00    *                   call	qword ptr [rip + handmade_data.PlatformAddEntry]
 1      1     0.25                        mov	r11b, 1
 1      5     0.50    *                   mov	rax, qword ptr [rbx]
 1      1     0.25                        test	rax, rax
 1      1     0.50                        jne	.LBB3_54
 1      1     0.50                        jmp	.LBB3_60
 1      5     0.50    *                   mov	rdi, qword ptr [rsp + 32]
 1      5     0.50    *                   mov	rax, qword ptr [rbx]
 1      1     0.25                        test	rax, rax
 1      1     0.50                        je	.LBB3_60
 1      5     0.50    *                   mov	esi, dword ptr [rdi + 12]
 1      1     1.00           *            mov	qword ptr [rsp + 40], rbx
 1      1     0.25                        mov	rbx, rax
 1      1     0.25                        test	esi, esi
 1      1     0.50                        jne	.LBB3_15
 1      1     0.50                        jmp	.LBB3_13
 1      1     0.25                        sub	esi, ecx
 1      1     0.50                        je	.LBB3_13
 1      5     0.50    *                   mov	rcx, qword ptr [rbp + 88]
 1      5     0.50    *                   mov	eax, dword ptr [rbx + 36]
 1      1     0.25                        mov	rdx, rax
 1      1     0.50                        shl	rdx, 4
 1      5     0.50    *                   mov	rdi, qword ptr [rcx + rdx]
 1      1     0.25                        test	rdi, rdi
 1      1     0.50                        je	.LBB3_42
 1      5     0.50    *                   mov	rdx, qword ptr [rbp + 72]
 1      1     0.50                        lea	rax, [rax + 2*rax]
 1      1     0.50                        lea	r14, [rdx + 8*rax]
 1      1     0.25                        add	r14, 16
 1      5     0.50    *                   mov	edx, dword ptr [rdx + 8*rax + 16]
 1      1     0.25                        test	rdx, rdx
 1      1     0.50                        je	.LBB3_28
 1      1     0.50                        shl	rdx, 4
 1      0     0.17                        xor	eax, eax
 6      8     1.00    *      *            lock		cmpxchg	byte ptr [rcx + rdx + 8], r11b
 1      1     0.50                        jne	.LBB3_23
 1      5     0.50    *                   mov	rax, qword ptr [rbp]
 2      6     0.50    *                   cmp	byte ptr [rax + 80], 1
 1      1     0.50                        jne	.LBB3_24
 2      6     0.50    *                   cmp	byte ptr [rax + 136], 1
 1      1     0.50                        jne	.LBB3_25
 2      6     0.50    *                   cmp	byte ptr [rax + 192], 1
 1      1     0.50                        jne	.LBB3_26
 2      6     0.50    *                   cmp	byte ptr [rax + 248], 0
 1      1     0.50                        jne	.LBB3_28
 1      1     0.50                        lea	rcx, [rax + 248]
 1      1     0.25                        mov	edx, 3
 1      1     0.50                        jmp	.LBB3_27
 1      5     0.50    *                   mov	eax, dword ptr [r14]
 1      5     0.50    *                   mov	rcx, qword ptr [rbp + 88]
 1      1     0.50                        shl	rax, 4
 1      1     1.00           *            mov	byte ptr [rcx + rax + 8], 0
 1      1     0.50                        jmp	.LBB3_28
 1      1     0.50                        lea	rcx, [rax + 80]
 1      0     0.17                        xor	edx, edx
 1      1     0.50                        jmp	.LBB3_27
 1      1     0.50                        lea	rcx, [rax + 136]
 1      1     0.25                        mov	edx, 1
 1      1     0.50                        jmp	.LBB3_27
 1      1     0.50                        lea	rcx, [rax + 192]
 1      1     0.25                        mov	edx, 2
 1      3     1.00                        imul	rdx, rdx, 56
 1      1     1.00           *            mov	byte ptr [rcx], 1
 1      5     0.50    *                   mov	r8, qword ptr [rax + rdx + 48]
 3      7     1.00    *      *            add	dword ptr [rax + rdx + 56], 1
 1      1     0.50                        lea	r9, [rax + rdx]
 1      1     0.25                        add	r9, 32
 1      1     1.00           *            mov	qword ptr [rax + rdx + 64], r9
 1      1     1.00           *            mov	qword ptr [rax + rdx + 72], r8
 1      5     0.50    *                   mov	rcx, qword ptr [rax + rdx + 40]
 1      1     0.25                        add	rcx, r8
 1      1     0.25                        mov	r10d, ecx
 1      1     0.25                        and	r10d, 7
 1      1     0.25                        mov	r11d, 8
 1      1     0.25                        sub	r11, r10
 1      1     0.25                        test	r10, r10
 1      1     0.50                        cmove	r11, r10
 1      1     0.50                        lea	r8, [r8 + r11 + 32]
 1      1     1.00           *            mov	qword ptr [rax + rdx + 48], r8
 1      1     1.00           *            mov	qword ptr [r11 + rcx], rbp
 1      5     0.50    *                   mov	eax, dword ptr [r14]
 1      1     1.00           *            mov	dword ptr [r11 + rcx + 24], eax
 1      1     1.00           *            mov	qword ptr [r11 + rcx + 8], r9
 1      5     0.50    *                   mov	rax, qword ptr [rbp + 24]
 1      5     0.50    *                   mov	rdx, qword ptr [rbp + 16]
 1      1     0.25                        add	rdx, rax
 1      1     0.25                        mov	r8d, edx
 1      1     0.25                        and	r8d, 7
 1      1     0.25                        mov	r9d, 8
 1      1     0.25                        sub	r9, r8
 1      1     0.25                        test	r8, r8
 1      1     0.50                        cmove	r9, r8
 1      1     0.50                        lea	r8, [r11 + rcx]
 1      1     0.25                        add	rax, r9
 1      1     0.25                        add	rax, 24
 1      1     0.25                        add	r9, rdx
 1      1     1.00           *            mov	qword ptr [rbp + 24], rax
 1      1     1.00           *            mov	qword ptr [r11 + rcx + 16], r9
 1      1     1.00           *            mov	byte ptr [r11 + rcx + 28], 2
 1      5     0.50    *                   mov	rax, qword ptr [rbp]
 1      5     0.50    *                   mov	rcx, qword ptr [rax + 288]
 1      1     0.50                        lea	rdx, [rip + handmade_asset.LoadSoundWork]
 5      7     1.00    *                   call	qword ptr [rip + handmade_data.PlatformAddEntry]
 1      1     0.25                        mov	r11b, 1
 1      5     0.50    *                   vmovsd	xmm1, qword ptr [rbx + 8]
 1      5     0.50    *                   vmovsd	xmm0, qword ptr [rbx + 16]
 1      4     0.50                        vmulps	xmm2, xmm7, xmm0
 1      5     0.50    *                   vmovd	xmm0, dword ptr [rbx + 40]
 1      5     0.50    *                   mov	eax, dword ptr [rdi + 16]
 1      1     0.33                        vmovdqa	xmm3, xmm9
 1      1     0.33                        vpternlogd	xmm3, xmm0, xmm8, 248
 1      4     0.50                        vaddss	xmm3, xmm0, xmm3
 2      8     1.00                        vroundss	xmm3, xmm3, xmm3, 11
 2      6     1.00                        vcvttss2usi	ecx, xmm3
 1      1     0.25                        sub	eax, ecx
 2      5     1.00                        vcvtusi2ss	xmm4, xmm17, eax
 1      5     0.50    *                   vmovss	xmm3, dword ptr [rbx + 32]
 1      11    3.00                        vdivss	xmm4, xmm4, xmm3
 1      1     0.33                        vmovdqa	xmm5, xmm9
 1      1     0.33                        vpternlogd	xmm5, xmm4, xmm8, 248
 1      4     0.50                        vaddss	xmm4, xmm4, xmm5
 2      8     1.00                        vroundss	xmm4, xmm4, xmm4, 11
 2      6     1.00                        vcvttss2usi	r8d, xmm4
 1      1     0.25                        cmp	esi, r8d
 1      1     0.50                        cmovb	r8d, esi
 1      2     1.00                        vucomiss	xmm2, xmm10
 1      1     0.50                        jne	.LBB3_29
 1      1     0.50                        jnp	.LBB3_31
 1      5     0.50    *                   vmovss	xmm4, dword ptr [rbx + 24]
 1      4     0.50                        vsubss	xmm4, xmm4, xmm1
 1      11    3.00                        vdivss	xmm4, xmm4, xmm2
 1      4     0.50                        vaddss	xmm4, xmm11, xmm4
 2      6     1.00                        vcvttss2usi	ecx, xmm4
 1      1     0.25                        cmp	r8d, ecx
 2      2     1.00                        seta	al
 1      1     0.50                        cmovae	r8d, ecx
 1      1     0.50                        vmovshdup	xmm4, xmm2
 1      2     1.00                        vucomiss	xmm4, xmm10
 1      1     0.50                        jne	.LBB3_30
 1      1     0.50                        jnp	.LBB3_32
 1      5     0.50    *                   vmovss	xmm5, dword ptr [rbx + 28]
 1      1     0.50                        vmovshdup	xmm16, xmm1
 1      4     0.50                        vsubss	xmm5, xmm5, xmm16
 1      11    3.00                        vdivss	xmm4, xmm5, xmm4
 1      4     0.50                        vaddss	xmm4, xmm11, xmm4
 2      6     1.00                        vcvttss2usi	ecx, xmm4
 1      1     0.25                        cmp	r8d, ecx
 2      2     1.00                        seta	dl
 1      1     0.50                        cmovae	r8d, ecx
 1      1     0.25                        mov	ecx, r8d
 1      1     0.25                        test	r8d, r8d
 1      1     0.50                        jne	.LBB3_33
 1      1     0.50                        jmp	.LBB3_35
 1      0     0.17                        xor	eax, eax
 1      1     0.50                        vmovshdup	xmm4, xmm2
 1      2     1.00                        vucomiss	xmm4, xmm10
 1      1     0.50                        jne	.LBB3_30
 1      1     0.50                        jp	.LBB3_30
 1      0     0.17                        xor	edx, edx
 1      1     0.25                        mov	ecx, r8d
 1      1     0.25                        test	r8d, r8d
 1      1     0.50                        je	.LBB3_35
 1      0     0.17                        xor	r8d, r8d
 2      8     1.00                        vroundss	xmm4, xmm0, xmm0, 9
 2      6     1.00                        vcvttss2si	r9d, xmm4
 2      5     1.00                        vcvtusi2ss	xmm4, xmm17, r9d
 1      5     0.50    *                   mov	r10, qword ptr [rdi]
 1      4     0.50                        vsubss	xmm4, xmm0, xmm4
 1      5     0.50    *                   vmovd	xmm5, dword ptr [r10 + 2*r9]
 1      1     0.50                        vpmovsxwd	xmm5, xmm5
 1      4     0.50                        vcvtdq2ps	xmm5, xmm5
 1      4     0.50                        vsubss	xmm16, xmm6, xmm4
 1      1     1.00                        vinsertps	xmm4, xmm16, xmm4, 16
 1      4     0.50                        vmulps	xmm4, xmm4, xmm5
 1      1     0.50                        vmovshdup	xmm5, xmm4
 2      9     0.50    *                   vmulss	xmm16, xmm1, dword ptr [r13 + 15202288]
 1      4     0.50                        vaddss	xmm4, xmm4, xmm5
 1      4     0.50                        vmulss	xmm5, xmm16, xmm4
 2      9     0.50    *                   vaddss	xmm5, xmm5, dword ptr [r12 + 4*r8]
 2      1     1.00           *            vmovss	dword ptr [r12 + 4*r8], xmm5
 1      1     0.50                        vmovshdup	xmm5, xmm1
 2      9     0.50    *                   vmulss	xmm5, xmm5, dword ptr [r13 + 15202292]
 1      4     0.50                        vmulss	xmm4, xmm5, xmm4
 2      9     0.50    *                   vaddss	xmm4, xmm4, dword ptr [r15 + 4*r8]
 2      1     1.00           *            vmovss	dword ptr [r15 + 4*r8], xmm4
 1      4     0.50                        vaddps	xmm1, xmm2, xmm1
 1      4     0.50                        vaddss	xmm0, xmm3, xmm0
 1      1     0.25                        add	r8, 1
 1      1     0.25                        cmp	rcx, r8
 1      1     0.50                        jne	.LBB3_34
 2      1     1.00           *            vmovlps	qword ptr [rbx + 8], xmm1
 1      1     0.25                        test	al, al
 1      1     0.50                        je	.LBB3_36
 1      5     0.50    *                   vmovss	xmm1, dword ptr [rbx + 24]
 2      1     1.00           *            vmovss	dword ptr [rbx + 8], xmm1
 1      1     1.00           *            mov	dword ptr [rbx + 16], 0
 1      1     0.25                        test	dl, dl
 1      1     0.50                        jne	.LBB3_39
 2      1     1.00           *            vmovss	dword ptr [rbx + 40], xmm0
 2      6     1.00                        vcvttss2usi	eax, xmm0
 2      6     0.50    *                   cmp	dword ptr [rdi + 16], eax
 1      1     0.50                        jne	.LBB3_14
 1      1     0.50                        jmp	.LBB3_40
 1      1     0.25                        test	dl, dl
 1      1     0.50                        je	.LBB3_37
 1      5     0.50    *                   vmovss	xmm1, dword ptr [rbx + 28]
 2      1     1.00           *            vmovss	dword ptr [rbx + 12], xmm1
 1      1     1.00           *            mov	dword ptr [rbx + 20], 0
 2      1     1.00           *            vmovss	dword ptr [rbx + 40], xmm0
 2      6     1.00                        vcvttss2usi	eax, xmm0
 2      6     0.50    *                   cmp	dword ptr [rdi + 16], eax
 1      1     0.50                        jne	.LBB3_14
 1      5     0.50    *                   mov	eax, dword ptr [r14]
 1      1     0.25                        test	eax, eax
 1      1     0.50                        je	.LBB3_50
 1      1     1.00           *            mov	dword ptr [rbx + 36], eax
 1      1     1.00           *            mov	dword ptr [rbx + 40], 0
 1      1     0.50                        jmp	.LBB3_14
 1      1     0.25                        test	rax, rax
 1      1     0.50                        je	.LBB3_13
 1      0     0.17                        xor	eax, eax
 6      8     1.00    *      *            lock		cmpxchg	byte ptr [rcx + rdx + 8], r11b
 1      5     0.50    *                   mov	rdi, qword ptr [rsp + 32]
 1      1     0.50                        jne	.LBB3_52
 1      5     0.50    *                   mov	rax, qword ptr [rbp]
 2      6     0.50    *                   cmp	byte ptr [rax + 80], 1
 1      1     0.50                        jne	.LBB3_55
 2      6     0.50    *                   cmp	byte ptr [rax + 136], 1
 1      1     0.50                        jne	.LBB3_56
 2      6     0.50    *                   cmp	byte ptr [rax + 192], 1
 1      1     0.50                        jne	.LBB3_57
 2      6     0.50    *                   cmp	byte ptr [rax + 248], 0
 1      1     0.50                        jne	.LBB3_53
 1      1     0.50                        lea	rcx, [rax + 248]
 1      1     0.25                        mov	edx, 3
 1      1     0.50                        jmp	.LBB3_58
 1      5     0.50    *                   mov	rax, qword ptr [rbx]
 1      5     0.50    *                   mov	rcx, qword ptr [rsp + 40]
 1      1     1.00           *            mov	qword ptr [rcx], rax
 1      5     0.50    *                   mov	rax, qword ptr [r13 + 15202280]
 1      1     1.00           *            mov	qword ptr [rbx], rax
 1      1     1.00           *            mov	qword ptr [r13 + 15202280], rbx
 1      1     0.25                        mov	rbx, rcx
 1      1     0.50                        jmp	.LBB3_13
 1      5     0.50    *                   mov	eax, dword ptr [rbx + 36]
 1      5     0.50    *                   mov	rcx, qword ptr [rbp + 88]
 1      1     0.50                        shl	rax, 4
 1      1     1.00           *            mov	byte ptr [rcx + rax + 8], 0
 1      5     0.50    *                   mov	rax, qword ptr [rbx]
 1      1     0.25                        test	rax, rax
 1      1     0.50                        jne	.LBB3_54
 1      5     0.50    *                   mov	eax, dword ptr [rdi + 12]
 1      1     0.25                        test	rax, rax
 1      1     0.50                        je	.LBB3_80
 1      5     0.50    *                   mov	rcx, qword ptr [rdi]
 1      1     0.25                        cmp	eax, 8
 1      1     0.50                        jae	.LBB3_63
 1      0     0.17                        xor	edx, edx
 1      1     0.50                        jmp	.LBB3_75
 1      1     0.50                        lea	rdx, [rcx + 4*rax]
 1      1     0.50                        lea	r8, [r12 + 4*rax]
 1      1     0.25                        cmp	rcx, r8
 1      1     0.50                        setb	r10b
 1      1     0.25                        cmp	rdx, r12
 2      2     1.00                        seta	r11b
 1      1     0.50                        lea	r8, [r15 + 4*rax]
 1      1     0.25                        cmp	rcx, r8
 1      1     0.50                        setb	r8b
 1      1     0.25                        cmp	rdx, r15
 2      2     1.00                        seta	r9b
 1      0     0.17                        xor	edx, edx
 1      1     0.25                        test	r10b, r11b
 1      1     0.50                        jne	.LBB3_75
 1      1     0.25                        and	r8b, r9b
 1      1     0.50                        jne	.LBB3_75
 1      1     0.25                        cmp	eax, 16
 1      1     0.50                        jae	.LBB3_71
 1      0     0.17                        xor	edx, edx
 1      1     0.25                        mov	r8, rdx
 1      1     0.25                        mov	edx, eax
 1      1     0.25                        and	edx, -8
 1      7     0.50    *                   vbroadcastss	ymm0, dword ptr [rip + .LCPI3_3]
 2      11    0.50    *                   vaddps	ymm1, ymm0, ymmword ptr [r12 + 4*r8]
 1      3     0.50                        vcvttps2dq	ymm1, ymm1
 2      4     2.00                        vpmovdw	xmm1, ymm1
 2      11    0.50    *                   vaddps	ymm2, ymm0, ymmword ptr [r15 + 4*r8]
 1      3     0.50                        vcvttps2dq	ymm2, ymm2
 2      4     2.00                        vpmovdw	xmm2, ymm2
 1      1     0.50                        vpunpcklwd	xmm3, xmm1, xmm2
 1      1     0.50                        vpunpckhwd	xmm1, xmm1, xmm2
 2      1     1.00           *            vmovdqu	xmmword ptr [rcx + 4*r8 + 16], xmm1
 2      1     1.00           *            vmovdqu	xmmword ptr [rcx + 4*r8], xmm3
 1      1     0.25                        add	r8, 8
 1      1     0.25                        cmp	rdx, r8
 1      1     0.50                        jne	.LBB3_68
 1      1     0.25                        cmp	rdx, rax
 1      1     0.50                        jne	.LBB3_75
 1      1     0.50                        jmp	.LBB3_80
 1      1     0.25                        mov	r8d, 16
 1      1     0.25                        test	dl, 1
 1      1     0.50                        jne	.LBB3_7
 1      1     0.50                        jmp	.LBB3_8
 1      1     0.50                        lea	rdx, [4*rax]
 1      1     0.25                        and	rdx, -64
 1      0     0.17                        xor	r8d, r8d
 2      8     0.50    *                   vbroadcastss	zmm0, dword ptr [rip + .LCPI3_3]
 2      8     0.50    *                   vmovdqa64	zmm1, zmmword ptr [rip + .LCPI3_4]
 2      11    0.50    *                   vaddps	zmm2, zmm0, zmmword ptr [r12 + r8]
 1      4     0.50                        vcvttps2dq	zmm2, zmm2
 2      4     2.00                        vpmovdw	ymm2, zmm2
 2      11    0.50    *                   vaddps	zmm3, zmm0, zmmword ptr [r15 + r8]
 1      4     0.50                        vcvttps2dq	zmm3, zmm3
 2      4     2.00                        vpmovdw	ymm3, zmm3
 1      3     1.00                        vinserti64x4	zmm3, zmm3, ymm3, 1
 1      3     1.00                        vinserti64x4	zmm2, zmm2, ymm2, 1
 3      7     2.00                        vpermt2w	zmm2, zmm1, zmm3
 2      1     1.00           *            vmovdqu64	zmmword ptr [rcx + r8], zmm2
 1      1     0.25                        add	r8, 64
 1      1     0.25                        cmp	rdx, r8
 1      1     0.50                        jne	.LBB3_72
 1      1     0.25                        mov	edx, eax
 1      1     0.25                        and	edx, -16
 1      1     0.25                        cmp	rdx, rax
 1      1     0.50                        je	.LBB3_80
 1      1     0.25                        test	al, 8
 1      1     0.50                        jne	.LBB3_67
 1      1     0.25                        mov	r8, rdx
 1      1     0.25                        not	r8
 1      1     0.25                        test	al, 1
 1      1     0.50                        je	.LBB3_77
 1      5     0.50    *                   vmovss	xmm0, dword ptr [rip + .LCPI3_3]
 2      9     0.50    *                   vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx]
 2      6     1.00                        vcvttss2si	r9d, xmm1
 1      1     1.00           *            mov	word ptr [rcx + 4*rdx], r9w
 2      9     0.50    *                   vaddss	xmm0, xmm0, dword ptr [r15 + 4*rdx]
 2      6     1.00                        vcvttss2si	r9d, xmm0
 1      1     1.00           *            mov	word ptr [rcx + 4*rdx + 2], r9w
 1      1     0.25                        or	rdx, 1
 1      1     0.25                        add	r8, rax
 1      1     0.50                        je	.LBB3_80
 1      1     0.25                        add	r15, 4
 1      5     0.50    *                   vmovss	xmm0, dword ptr [rip + .LCPI3_3]
 2      9     0.50    *                   vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx]
 2      6     1.00                        vcvttss2si	r8d, xmm1
 1      1     1.00           *            mov	word ptr [rcx + 4*rdx], r8w
 2      9     0.50    *                   vaddss	xmm1, xmm0, dword ptr [r15 + 4*rdx - 4]
 2      6     1.00                        vcvttss2si	r8d, xmm1
 1      1     1.00           *            mov	word ptr [rcx + 4*rdx + 2], r8w
 2      9     0.50    *                   vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx + 4]
 2      6     1.00                        vcvttss2si	r8d, xmm1
 1      1     1.00           *            mov	word ptr [rcx + 4*rdx + 4], r8w
 2      9     0.50    *                   vaddss	xmm1, xmm0, dword ptr [r15 + 4*rdx]
 2      6     1.00                        vcvttss2si	r8d, xmm1
 1      1     1.00           *            mov	word ptr [rcx + 4*rdx + 6], r8w
 1      1     0.25                        add	rdx, 2
 1      1     0.25                        cmp	rax, rdx
 1      1     0.50                        jne	.LBB3_79


Dynamic Dispatch Stall Cycles:
RAT     - Register unavailable:                      0
RCU     - Retire tokens unavailable:                 9089  (45.0%)
SCHEDQ  - Scheduler full:                            1980  (9.8%)
LQ      - Load queue full:                           0
SQ      - Store queue full:                          0
GROUP   - Static restrictions on the dispatch group: 0
USH     - Uncategorised Structural Hazard:           0


Dispatch Logic - number of cycles where we saw N micro opcodes dispatched:
[# dispatched], [# cycles]
 0,              9026  (44.6%)
 1,              99  (0.5%)
 2,              200  (1.0%)
 3,              198  (1.0%)
 4,              1193  (5.9%)
 5,              2089  (10.3%)
 6,              7415  (36.7%)


Schedulers - number of cycles where we saw N micro opcodes issued:
[# issued], [# cycles]
 0,          5905  (29.2%)
 1,          1111  (5.5%)
 2,          1106  (5.5%)
 3,          2205  (10.9%)
 4,          3598  (17.8%)
 5,          3396  (16.8%)
 6,          1601  (7.9%)
 7,          799  (4.0%)
 8,          299  (1.5%)
 9,          101  (0.5%)
 10,          99  (0.5%)

Scheduler's queue usage:
[1] Resource name.
[2] Average number of used buffer entries.
[3] Maximum number of used buffer entries.
[4] Total number of buffer entries.

 [1]            [2]        [3]        [4]
ICXPortAny       32         60         60


Retire Control Unit - number of cycles where we saw N instructions retired:
[# retired], [# cycles]
 0,           14799  (73.2%)
 1,           2308  (11.4%)
 2,           505  (2.5%)
 3,           604  (3.0%)
 4,           302  (1.5%)
 5,           301  (1.5%)
 6,           1  (0.0%)
 7,           100  (0.5%)
 8,           201  (1.0%)
 9,           100  (0.5%)
 16,          100  (0.5%)
 17,          200  (1.0%)
 20,          1  (0.0%)
 21,          100  (0.5%)
 23,          99  (0.5%)
 24,          100  (0.5%)
 31,          99  (0.5%)
 32,          100  (0.5%)
 91,          1  (0.0%)
 102,          100  (0.5%)
 114,          99  (0.5%)

Total ROB Entries:                224
Max Used ROB Entries:             224  ( 100.0% )
Average Used ROB Entries per cy:  182  ( 81.3% )


Register File statistics:
Total number of mappings created:    41200
Max number of mappings used:         158


Resources:
[0]   - ICXDivider
[1]   - ICXFPDivider
[2]   - ICXPort0
[3]   - ICXPort1
[4]   - ICXPort2
[5]   - ICXPort3
[6]   - ICXPort4
[7]   - ICXPort5
[8]   - ICXPort6
[9]   - ICXPort7
[10]  - ICXPort8
[11]  - ICXPort9


Resource pressure per iteration:
[0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]   
 -     12.00  107.00 108.02 57.99  59.00  70.00  89.04  95.94  47.01   -      -     

Resource pressure by instruction:
[0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]   Instructions:
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	ecx, dword ptr [rdx + 12]
 -      -      -     1.00    -      -      -      -      -      -      -      -     lea	rdx, [rcx + 3]
 -      -     1.00    -      -      -      -      -      -      -      -      -     shr	rdx, 2
 -      -      -      -      -      -      -     1.00    -      -      -      -     mov	r9, rdx
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     shl	r9, 4
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	r8, qword ptr [rsi + 8]
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	rax, qword ptr [rsi + 16]
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     lea	r10, [rax + r8]
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     mov	r11d, r10d
 -      -      -      -      -      -      -     1.00    -      -      -      -     and	r11d, 15
 -      -      -      -      -      -      -     0.99   0.01    -      -      -     mov	r15d, 16
 -      -     0.99    -      -      -      -     0.01    -      -      -      -     mov	r12d, 16
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     sub	r12, r11
 -      -      -     0.01    -      -      -      -     0.99    -      -      -     test	r11, r11
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     cmove	r12, r11
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     add	rax, r9
 -      -      -      -      -      -      -     0.01   0.99    -      -      -     add	rax, r12
 -      -      -     0.01    -      -      -      -     0.99    -      -      -     add	r12, r10
 -      -      -      -      -      -      -     1.00    -      -      -      -     add	r8, rax
 -      -      -     0.99    -      -      -      -     0.01    -      -      -     mov	r10d, r8d
 -      -      -      -      -      -      -     1.00    -      -      -      -     and	r10d, 15
 -      -     0.01    -      -      -      -     0.99    -      -      -      -     sub	r15, r10
 -      -      -     0.99    -      -      -      -     0.01    -      -      -     test	r10, r10
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     cmove	r15, r10
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     add	rax, r9
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     add	rax, r15
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     add	r15, r8
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	qword ptr [rsp + 56], rsi
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	qword ptr [rsi + 16], rax
 -      -      -     1.00   1.00    -      -      -      -      -      -      -     vcvtusi2ss	xmm0, xmm0, dword ptr [rdi + 8]
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     test	rcx, rcx
 -      -      -      -      -      -      -      -     1.00    -      -      -     je	.LBB3_10
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     cmp	rdx, 2
 -      -      -      -      -      -      -      -     1.00    -      -      -     mov	eax, 1
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     cmovae	rax, rdx
 -      -      -     0.99    -      -      -      -     0.01    -      -      -     cmp	ecx, 5
 -      -      -      -      -      -      -      -     1.00    -      -      -     jae	.LBB3_3
 -      -      -      -      -      -      -      -      -      -      -      -     xor	ecx, ecx
 -      -      -      -      -      -      -      -     1.00    -      -      -     jmp	.LBB3_8
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     mov	ecx, eax
 -      -     1.00    -      -      -      -      -      -      -      -      -     and	ecx, -2
 -      -      -     1.00    -      -      -      -      -      -      -      -     lea	r8, [rcx - 2]
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     mov	rdx, r8
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     shr	rdx
 -      -     0.01    -      -      -      -     0.99    -      -      -      -     add	rdx, 1
 -      -      -      -      -      -      -     0.99   0.01    -      -      -     test	r8, r8
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     je	.LBB3_70
 -      -      -      -      -      -      -     1.00    -      -      -      -     mov	r9, rdx
 -      -      -      -      -      -      -     1.00    -      -      -      -     and	r9, -2
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     mov	r8d, 48
 -      -      -      -      -      -      -      -      -      -      -      -     vxorps	xmm1, xmm1, xmm1
 -      -      -      -      -     0.99   1.00    -      -     0.01    -      -     vmovaps	xmmword ptr [r12 + r8 - 48], xmm1
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovaps	xmmword ptr [r15 + r8 - 48], xmm1
 -      -      -      -     0.01    -     1.00    -      -     0.99    -      -     vmovaps	xmmword ptr [r12 + r8 - 32], xmm1
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovaps	xmmword ptr [r15 + r8 - 32], xmm1
 -      -      -      -      -     1.00   1.00    -      -      -      -      -     vmovaps	xmmword ptr [r12 + r8 - 16], xmm1
 -      -      -      -     1.00    -     1.00    -      -      -      -      -     vmovaps	xmmword ptr [r15 + r8 - 16], xmm1
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovaps	xmmword ptr [r12 + r8], xmm1
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovaps	xmmword ptr [r15 + r8], xmm1
 -      -      -      -      -      -      -      -     1.00    -      -      -     add	r8, 64
 -      -      -      -      -      -      -     1.00    -      -      -      -     add	r9, -2
 -      -     1.00    -      -      -      -      -      -      -      -      -     jne	.LBB3_5
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     add	r8, -32
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	dl, 1
 -      -     1.00    -      -      -      -      -      -      -      -      -     je	.LBB3_8
 -      -      -      -      -      -      -      -      -      -      -      -     vxorps	xmm1, xmm1, xmm1
 -      -      -      -      -     0.99   1.00    -      -     0.01    -      -     vmovaps	xmmword ptr [r12 + r8 - 16], xmm1
 -      -      -      -     0.01    -     1.00    -      -     0.99    -      -     vmovaps	xmmword ptr [r15 + r8 - 16], xmm1
 -      -      -      -      -     0.99   1.00    -      -     0.01    -      -     vmovaps	xmmword ptr [r12 + r8], xmm1
 -      -      -      -     1.00    -     1.00    -      -      -      -      -     vmovaps	xmmword ptr [r15 + r8], xmm1
 -      -      -     0.01    -      -      -      -     0.99    -      -      -     test	al, 1
 -      -      -      -      -      -      -      -     1.00    -      -      -     je	.LBB3_10
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     shl	rcx, 4
 -      -      -      -      -      -      -      -      -      -      -      -     vxorps	xmm1, xmm1, xmm1
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovaps	xmmword ptr [r12 + rcx], xmm1
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovaps	xmmword ptr [r15 + rcx], xmm1
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	rax, qword ptr [r13 + 15202272]
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	rax, rax
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     je	.LBB3_60
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	esi, dword ptr [rdi + 12]
 -      -      -      -      -      -      -     0.01   0.99    -      -      -     test	esi, esi
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     je	.LBB3_59
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	qword ptr [rsp + 32], rdi
 -      -      -      -      -     1.00    -      -      -      -      -      -     vmovss	xmm6, dword ptr [rip + .LCPI3_0]
 -     3.00   1.00    -      -      -      -      -      -      -      -      -     vdivss	xmm0, xmm6, xmm0
 -      -      -     1.00    -      -      -      -      -      -      -      -     lea	rcx, [r13 + 15202272]
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	qword ptr [rsp + 40], rcx
 -      -      -      -      -      -      -     1.00    -      -      -      -     vbroadcastss	xmm7, xmm0
 -      -      -     0.99    -      -      -      -     0.01    -      -      -     mov	r11b, 1
 -      -      -      -     1.00    -      -      -      -      -      -      -     vpbroadcastd	xmm8, dword ptr [rip + .LCPI3_1]
 -      -      -      -      -     1.00    -      -      -      -      -      -     vpbroadcastd	xmm9, dword ptr [rip + .LCPI3_2]
 -      -      -      -      -      -      -      -      -      -      -      -     vxorps	xmm10, xmm10, xmm10
 -      -      -      -     1.00    -      -      -      -      -      -      -     vmovss	xmm11, dword ptr [rip + .LCPI3_3]
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     mov	rbx, rax
 -      -      -     0.01    -      -      -     0.99    -      -      -      -     test	esi, esi
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     jne	.LBB3_15
 -      -      -      -      -      -      -      -     1.00    -      -      -     jmp	.LBB3_13
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	rax, qword ptr [rax]
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     test	rax, rax
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     jne	.LBB3_59
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     jmp	.LBB3_60
 -      -      -     0.01    -      -      -     0.99    -      -      -      -     lea	rcx, [rax + 80]
 -      -      -      -      -      -      -      -      -      -      -      -     xor	edx, edx
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     jmp	.LBB3_58
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     lea	rcx, [rax + 136]
 -      -      -      -      -      -      -     1.00    -      -      -      -     mov	edx, 1
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     jmp	.LBB3_58
 -      -      -     1.00    -      -      -      -      -      -      -      -     lea	rcx, [rax + 192]
 -      -      -     0.01    -      -      -     0.99    -      -      -      -     mov	edx, 2
 -      -      -     1.00    -      -      -      -      -      -      -      -     imul	rdx, rdx, 56
 -      -      -      -      -     0.01   1.00    -      -     0.99    -      -     mov	byte ptr [rcx], 1
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	r8, qword ptr [rax + rdx + 48]
 -      -      -      -     0.01   0.99   1.00   0.99   0.01   1.00    -      -     add	dword ptr [rax + rdx + 56], 1
 -      -      -      -      -      -      -     1.00    -      -      -      -     lea	r9, [rax + rdx]
 -      -      -     0.01    -      -      -      -     0.99    -      -      -     add	r9, 32
 -      -      -      -     0.01    -     1.00    -      -     0.99    -      -     mov	qword ptr [rax + rdx + 64], r9
 -      -      -      -      -     0.99   1.00    -      -     0.01    -      -     mov	qword ptr [rax + rdx + 72], r8
 -      -      -      -     0.01   0.99    -      -      -      -      -      -     mov	rcx, qword ptr [rax + rdx + 40]
 -      -      -     1.00    -      -      -      -      -      -      -      -     add	rcx, r8
 -      -     0.01    -      -      -      -     0.99    -      -      -      -     mov	r10d, ecx
 -      -      -      -      -      -      -     0.01   0.99    -      -      -     and	r10d, 7
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     mov	r11d, 8
 -      -      -      -      -      -      -     0.99   0.01    -      -      -     sub	r11, r10
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	r10, r10
 -      -      -      -      -      -      -      -     1.00    -      -      -     cmove	r11, r10
 -      -      -      -      -      -      -     1.00    -      -      -      -     lea	r8, [r8 + r11 + 32]
 -      -      -      -     0.01    -     1.00    -      -     0.99    -      -     mov	qword ptr [rax + rdx + 48], r8
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	qword ptr [r11 + rcx], rbp
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	eax, dword ptr [rbx + 36]
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	dword ptr [r11 + rcx + 24], eax
 -      -      -      -      -     0.01   1.00    -      -     0.99    -      -     mov	qword ptr [r11 + rcx + 8], r9
 -      -      -      -     0.01   0.99    -      -      -      -      -      -     mov	rax, qword ptr [rbp + 24]
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	rdx, qword ptr [rbp + 16]
 -      -      -      -      -      -      -      -     1.00    -      -      -     add	rdx, rax
 -      -      -     1.00    -      -      -      -      -      -      -      -     mov	r8d, edx
 -      -     0.01    -      -      -      -     0.99    -      -      -      -     and	r8d, 7
 -      -      -      -      -      -      -      -     1.00    -      -      -     mov	r9d, 8
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     sub	r9, r8
 -      -      -     0.01    -      -      -      -     0.99    -      -      -     test	r8, r8
 -      -     1.00    -      -      -      -      -      -      -      -      -     cmove	r9, r8
 -      -      -     1.00    -      -      -      -      -      -      -      -     lea	r8, [r11 + rcx]
 -      -      -     0.99    -      -      -      -     0.01    -      -      -     add	rax, r9
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     add	rax, 24
 -      -      -      -      -      -      -     0.01   0.99    -      -      -     add	r9, rdx
 -      -      -      -     0.99    -     1.00    -      -     0.01    -      -     mov	qword ptr [rbp + 24], rax
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	qword ptr [r11 + rcx + 16], r9
 -      -      -      -     1.00    -     1.00    -      -      -      -      -     mov	byte ptr [r11 + rcx + 28], 2
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	rax, qword ptr [rbp]
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	rcx, qword ptr [rax + 288]
 -      -      -      -      -      -      -     1.00    -      -      -      -     lea	rdx, [rip + handmade_asset.LoadSoundWork]
 -      -     0.01    -     1.00    -     1.00   0.99   1.00   1.00    -      -     call	qword ptr [rip + handmade_data.PlatformAddEntry]
 -      -     1.00    -      -      -      -      -      -      -      -      -     mov	r11b, 1
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	rax, qword ptr [rbx]
 -      -     0.01    -      -      -      -     0.99    -      -      -      -     test	rax, rax
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     jne	.LBB3_54
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     jmp	.LBB3_60
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	rdi, qword ptr [rsp + 32]
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	rax, qword ptr [rbx]
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	rax, rax
 -      -     1.00    -      -      -      -      -      -      -      -      -     je	.LBB3_60
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	esi, dword ptr [rdi + 12]
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	qword ptr [rsp + 40], rbx
 -      -     0.99    -      -      -      -     0.01    -      -      -      -     mov	rbx, rax
 -      -      -      -      -      -      -     1.00    -      -      -      -     test	esi, esi
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_15
 -      -     1.00    -      -      -      -      -      -      -      -      -     jmp	.LBB3_13
 -      -      -     1.00    -      -      -      -      -      -      -      -     sub	esi, ecx
 -      -     1.00    -      -      -      -      -      -      -      -      -     je	.LBB3_13
 -      -      -      -     0.01   0.99    -      -      -      -      -      -     mov	rcx, qword ptr [rbp + 88]
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	eax, dword ptr [rbx + 36]
 -      -      -     0.99    -      -      -      -     0.01    -      -      -     mov	rdx, rax
 -      -      -      -      -      -      -      -     1.00    -      -      -     shl	rdx, 4
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	rdi, qword ptr [rcx + rdx]
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	rdi, rdi
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     je	.LBB3_42
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	rdx, qword ptr [rbp + 72]
 -      -      -      -      -      -      -     1.00    -      -      -      -     lea	rax, [rax + 2*rax]
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     lea	r14, [rdx + 8*rax]
 -      -      -      -      -      -      -     0.01   0.99    -      -      -     add	r14, 16
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	edx, dword ptr [rdx + 8*rax + 16]
 -      -      -     0.01    -      -      -      -     0.99    -      -      -     test	rdx, rdx
 -      -      -      -      -      -      -      -     1.00    -      -      -     je	.LBB3_28
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     shl	rdx, 4
 -      -      -      -      -      -      -      -      -      -      -      -     xor	eax, eax
 -      -     0.02    -     0.99   1.00   1.00   1.00   1.98   0.01    -      -     lock		cmpxchg	byte ptr [rcx + rdx + 8], r11b
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     jne	.LBB3_23
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	rax, qword ptr [rbp]
 -      -      -      -     0.01   0.99    -     1.00    -      -      -      -     cmp	byte ptr [rax + 80], 1
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     jne	.LBB3_24
 -      -      -      -     0.99   0.01    -      -     1.00    -      -      -     cmp	byte ptr [rax + 136], 1
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_25
 -      -      -      -     0.01   0.99    -     1.00    -      -      -      -     cmp	byte ptr [rax + 192], 1
 -      -     1.00    -      -      -      -      -      -      -      -      -     jne	.LBB3_26
 -      -      -     1.00   0.99   0.01    -      -      -      -      -      -     cmp	byte ptr [rax + 248], 0
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     jne	.LBB3_28
 -      -      -     0.01    -      -      -     0.99    -      -      -      -     lea	rcx, [rax + 248]
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     mov	edx, 3
 -      -      -      -      -      -      -      -     1.00    -      -      -     jmp	.LBB3_27
 -      -      -      -     0.01   0.99    -      -      -      -      -      -     mov	eax, dword ptr [r14]
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	rcx, qword ptr [rbp + 88]
 -      -     1.00    -      -      -      -      -      -      -      -      -     shl	rax, 4
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	byte ptr [rcx + rax + 8], 0
 -      -     1.00    -      -      -      -      -      -      -      -      -     jmp	.LBB3_28
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     lea	rcx, [rax + 80]
 -      -      -      -      -      -      -      -      -      -      -      -     xor	edx, edx
 -      -      -      -      -      -      -      -     1.00    -      -      -     jmp	.LBB3_27
 -      -      -     0.01    -      -      -     0.99    -      -      -      -     lea	rcx, [rax + 136]
 -      -     0.01    -      -      -      -     0.99    -      -      -      -     mov	edx, 1
 -      -     1.00    -      -      -      -      -      -      -      -      -     jmp	.LBB3_27
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     lea	rcx, [rax + 192]
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     mov	edx, 2
 -      -      -     1.00    -      -      -      -      -      -      -      -     imul	rdx, rdx, 56
 -      -      -      -      -     0.99   1.00    -      -     0.01    -      -     mov	byte ptr [rcx], 1
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	r8, qword ptr [rax + rdx + 48]
 -      -     0.01    -     1.00    -     1.00    -     0.99   1.00    -      -     add	dword ptr [rax + rdx + 56], 1
 -      -      -     0.01    -      -      -     0.99    -      -      -      -     lea	r9, [rax + rdx]
 -      -      -      -      -      -      -      -     1.00    -      -      -     add	r9, 32
 -      -      -      -     0.99    -     1.00    -      -     0.01    -      -     mov	qword ptr [rax + rdx + 64], r9
 -      -      -      -     0.01    -     1.00    -      -     0.99    -      -     mov	qword ptr [rax + rdx + 72], r8
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	rcx, qword ptr [rax + rdx + 40]
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     add	rcx, r8
 -      -      -     0.01    -      -      -     0.99    -      -      -      -     mov	r10d, ecx
 -      -      -     0.99    -      -      -      -     0.01    -      -      -     and	r10d, 7
 -      -     1.00    -      -      -      -      -      -      -      -      -     mov	r11d, 8
 -      -      -      -      -      -      -      -     1.00    -      -      -     sub	r11, r10
 -      -      -      -      -      -      -     1.00    -      -      -      -     test	r10, r10
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     cmove	r11, r10
 -      -      -     1.00    -      -      -      -      -      -      -      -     lea	r8, [r8 + r11 + 32]
 -      -      -      -     0.99    -     1.00    -      -     0.01    -      -     mov	qword ptr [rax + rdx + 48], r8
 -      -      -      -     0.01    -     1.00    -      -     0.99    -      -     mov	qword ptr [r11 + rcx], rbp
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	eax, dword ptr [r14]
 -      -      -      -     0.99    -     1.00    -      -     0.01    -      -     mov	dword ptr [r11 + rcx + 24], eax
 -      -      -      -     0.01    -     1.00    -      -     0.99    -      -     mov	qword ptr [r11 + rcx + 8], r9
 -      -      -      -     0.01   0.99    -      -      -      -      -      -     mov	rax, qword ptr [rbp + 24]
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     mov	rdx, qword ptr [rbp + 16]
 -      -     0.99    -      -      -      -     0.01    -      -      -      -     add	rdx, rax
 -      -     0.01    -      -      -      -     0.99    -      -      -      -     mov	r8d, edx
 -      -      -      -      -      -      -      -     1.00    -      -      -     and	r8d, 7
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     mov	r9d, 8
 -      -      -      -      -      -      -     1.00    -      -      -      -     sub	r9, r8
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	r8, r8
 -      -      -      -      -      -      -      -     1.00    -      -      -     cmove	r9, r8
 -      -      -      -      -      -      -     1.00    -      -      -      -     lea	r8, [r11 + rcx]
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     add	rax, r9
 -      -     0.99    -      -      -      -     0.01    -      -      -      -     add	rax, 24
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     add	r9, rdx
 -      -      -      -      -     0.99   1.00    -      -     0.01    -      -     mov	qword ptr [rbp + 24], rax
 -      -      -      -     1.00    -     1.00    -      -      -      -      -     mov	qword ptr [r11 + rcx + 16], r9
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	byte ptr [r11 + rcx + 28], 2
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	rax, qword ptr [rbp]
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	rcx, qword ptr [rax + 288]
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     lea	rdx, [rip + handmade_asset.LoadSoundWork]
 -      -      -     0.01   0.99   1.00   1.00   0.99   1.00   0.01    -      -     call	qword ptr [rip + handmade_data.PlatformAddEntry]
 -      -      -      -      -      -      -     1.00    -      -      -      -     mov	r11b, 1
 -      -      -      -     1.00    -      -      -      -      -      -      -     vmovsd	xmm1, qword ptr [rbx + 8]
 -      -      -      -      -     1.00    -      -      -      -      -      -     vmovsd	xmm0, qword ptr [rbx + 16]
 -      -      -     1.00    -      -      -      -      -      -      -      -     vmulps	xmm2, xmm7, xmm0
 -      -      -      -     1.00    -      -      -      -      -      -      -     vmovd	xmm0, dword ptr [rbx + 40]
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	eax, dword ptr [rdi + 16]
 -      -      -     1.00    -      -      -      -      -      -      -      -     vmovdqa	xmm3, xmm9
 -      -     0.99    -      -      -      -     0.01    -      -      -      -     vpternlogd	xmm3, xmm0, xmm8, 248
 -      -      -     1.00    -      -      -      -      -      -      -      -     vaddss	xmm3, xmm0, xmm3
 -      -     1.98   0.02    -      -      -      -      -      -      -      -     vroundss	xmm3, xmm3, xmm3, 11
 -      -      -     2.00    -      -      -      -      -      -      -      -     vcvttss2usi	ecx, xmm3
 -      -      -      -      -      -      -     1.00    -      -      -      -     sub	eax, ecx
 -      -     0.99   0.01    -      -      -     1.00    -      -      -      -     vcvtusi2ss	xmm4, xmm17, eax
 -      -      -      -     0.01   0.99    -      -      -      -      -      -     vmovss	xmm3, dword ptr [rbx + 32]
 -     3.00   1.00    -      -      -      -      -      -      -      -      -     vdivss	xmm4, xmm4, xmm3
 -      -     1.00    -      -      -      -      -      -      -      -      -     vmovdqa	xmm5, xmm9
 -      -     0.99    -      -      -      -     0.01    -      -      -      -     vpternlogd	xmm5, xmm4, xmm8, 248
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vaddss	xmm4, xmm4, xmm5
 -      -      -     2.00    -      -      -      -      -      -      -      -     vroundss	xmm4, xmm4, xmm4, 11
 -      -      -     2.00    -      -      -      -      -      -      -      -     vcvttss2usi	r8d, xmm4
 -      -      -      -      -      -      -      -     1.00    -      -      -     cmp	esi, r8d
 -      -      -      -      -      -      -      -     1.00    -      -      -     cmovb	r8d, esi
 -      -     1.00    -      -      -      -      -      -      -      -      -     vucomiss	xmm2, xmm10
 -      -     1.00    -      -      -      -      -      -      -      -      -     jne	.LBB3_29
 -      -      -      -      -      -      -      -     1.00    -      -      -     jnp	.LBB3_31
 -      -      -      -      -     1.00    -      -      -      -      -      -     vmovss	xmm4, dword ptr [rbx + 24]
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vsubss	xmm4, xmm4, xmm1
 -     3.00   1.00    -      -      -      -      -      -      -      -      -     vdivss	xmm4, xmm4, xmm2
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vaddss	xmm4, xmm11, xmm4
 -      -     0.02   1.98    -      -      -      -      -      -      -      -     vcvttss2usi	ecx, xmm4
 -      -      -      -      -      -      -     1.00    -      -      -      -     cmp	r8d, ecx
 -      -      -      -      -      -      -      -     2.00    -      -      -     seta	al
 -      -     1.00    -      -      -      -      -      -      -      -      -     cmovae	r8d, ecx
 -      -      -      -      -      -      -     1.00    -      -      -      -     vmovshdup	xmm4, xmm2
 -      -     1.00    -      -      -      -      -      -      -      -      -     vucomiss	xmm4, xmm10
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     jne	.LBB3_30
 -      -     0.99    -      -      -      -      -     0.01    -      -      -     jnp	.LBB3_32
 -      -      -      -      -     1.00    -      -      -      -      -      -     vmovss	xmm5, dword ptr [rbx + 28]
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     vmovshdup	xmm16, xmm1
 -      -      -     1.00    -      -      -      -      -      -      -      -     vsubss	xmm5, xmm5, xmm16
 -     3.00   1.00    -      -      -      -      -      -      -      -      -     vdivss	xmm4, xmm5, xmm4
 -      -      -     1.00    -      -      -      -      -      -      -      -     vaddss	xmm4, xmm11, xmm4
 -      -      -     2.00    -      -      -      -      -      -      -      -     vcvttss2usi	ecx, xmm4
 -      -      -     1.00    -      -      -      -      -      -      -      -     cmp	r8d, ecx
 -      -      -      -      -      -      -      -     2.00    -      -      -     seta	dl
 -      -     1.00    -      -      -      -      -      -      -      -      -     cmovae	r8d, ecx
 -      -      -      -      -      -      -     1.00    -      -      -      -     mov	ecx, r8d
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	r8d, r8d
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_33
 -      -     0.01    -      -      -      -      -     0.99    -      -      -     jmp	.LBB3_35
 -      -      -      -      -      -      -      -      -      -      -      -     xor	eax, eax
 -      -      -      -      -      -      -     1.00    -      -      -      -     vmovshdup	xmm4, xmm2
 -      -     1.00    -      -      -      -      -      -      -      -      -     vucomiss	xmm4, xmm10
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_30
 -      -     1.00    -      -      -      -      -      -      -      -      -     jp	.LBB3_30
 -      -      -      -      -      -      -      -      -      -      -      -     xor	edx, edx
 -      -     1.00    -      -      -      -      -      -      -      -      -     mov	ecx, r8d
 -      -      -      -      -      -      -     1.00    -      -      -      -     test	r8d, r8d
 -      -     1.00    -      -      -      -      -      -      -      -      -     je	.LBB3_35
 -      -      -      -      -      -      -      -      -      -      -      -     xor	r8d, r8d
 -      -     1.98   0.02    -      -      -      -      -      -      -      -     vroundss	xmm4, xmm0, xmm0, 9
 -      -      -     2.00    -      -      -      -      -      -      -      -     vcvttss2si	r9d, xmm4
 -      -      -     1.00    -      -      -     1.00    -      -      -      -     vcvtusi2ss	xmm4, xmm17, r9d
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	r10, qword ptr [rdi]
 -      -     1.00    -      -      -      -      -      -      -      -      -     vsubss	xmm4, xmm0, xmm4
 -      -      -      -      -     1.00    -      -      -      -      -      -     vmovd	xmm5, dword ptr [r10 + 2*r9]
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpmovsxwd	xmm5, xmm5
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm5, xmm5
 -      -     1.00    -      -      -      -      -      -      -      -      -     vsubss	xmm16, xmm6, xmm4
 -      -      -      -      -      -      -     1.00    -      -      -      -     vinsertps	xmm4, xmm16, xmm4, 16
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vmulps	xmm4, xmm4, xmm5
 -      -      -      -      -      -      -     1.00    -      -      -      -     vmovshdup	xmm5, xmm4
 -      -     0.01   0.99    -     1.00    -      -      -      -      -      -     vmulss	xmm16, xmm1, dword ptr [r13 + 15202288]
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vaddss	xmm4, xmm4, xmm5
 -      -      -     1.00    -      -      -      -      -      -      -      -     vmulss	xmm5, xmm16, xmm4
 -      -     1.00    -     1.00    -      -      -      -      -      -      -     vaddss	xmm5, xmm5, dword ptr [r12 + 4*r8]
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovss	dword ptr [r12 + 4*r8], xmm5
 -      -      -      -      -      -      -     1.00    -      -      -      -     vmovshdup	xmm5, xmm1
 -      -      -     1.00    -     1.00    -      -      -      -      -      -     vmulss	xmm5, xmm5, dword ptr [r13 + 15202292]
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vmulss	xmm4, xmm5, xmm4
 -      -     1.00    -      -     1.00    -      -      -      -      -      -     vaddss	xmm4, xmm4, dword ptr [r15 + 4*r8]
 -      -      -      -     0.01    -     1.00    -      -     0.99    -      -     vmovss	dword ptr [r15 + 4*r8], xmm4
 -      -      -     1.00    -      -      -      -      -      -      -      -     vaddps	xmm1, xmm2, xmm1
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vaddss	xmm0, xmm3, xmm0
 -      -      -     1.00    -      -      -      -      -      -      -      -     add	r8, 1
 -      -      -      -      -      -      -     1.00    -      -      -      -     cmp	rcx, r8
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_34
 -      -      -      -      -     0.99   1.00    -      -     0.01    -      -     vmovlps	qword ptr [rbx + 8], xmm1
 -      -      -      -      -      -      -      -     1.00    -      -      -     test	al, al
 -      -     1.00    -      -      -      -      -      -      -      -      -     je	.LBB3_36
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     vmovss	xmm1, dword ptr [rbx + 24]
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovss	dword ptr [rbx + 8], xmm1
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	dword ptr [rbx + 16], 0
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	dl, dl
 -      -     1.00    -      -      -      -      -      -      -      -      -     jne	.LBB3_39
 -      -      -      -     1.00    -     1.00    -      -      -      -      -     vmovss	dword ptr [rbx + 40], xmm0
 -      -      -     2.00    -      -      -      -      -      -      -      -     vcvttss2usi	eax, xmm0
 -      -      -      -     1.00    -      -     1.00    -      -      -      -     cmp	dword ptr [rdi + 16], eax
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_14
 -      -      -      -      -      -      -      -     1.00    -      -      -     jmp	.LBB3_40
 -      -     1.00    -      -      -      -      -      -      -      -      -     test	dl, dl
 -      -      -      -      -      -      -      -     1.00    -      -      -     je	.LBB3_37
 -      -      -      -      -     1.00    -      -      -      -      -      -     vmovss	xmm1, dword ptr [rbx + 28]
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovss	dword ptr [rbx + 12], xmm1
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	dword ptr [rbx + 20], 0
 -      -      -      -      -     1.00   1.00    -      -      -      -      -     vmovss	dword ptr [rbx + 40], xmm0
 -      -      -     2.00    -      -      -      -      -      -      -      -     vcvttss2usi	eax, xmm0
 -      -      -      -      -     1.00    -     1.00    -      -      -      -     cmp	dword ptr [rdi + 16], eax
 -      -     1.00    -      -      -      -      -      -      -      -      -     jne	.LBB3_14
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	eax, dword ptr [r14]
 -      -      -      -      -      -      -     1.00    -      -      -      -     test	eax, eax
 -      -     1.00    -      -      -      -      -      -      -      -      -     je	.LBB3_50
 -      -      -      -     1.00    -     1.00    -      -      -      -      -     mov	dword ptr [rbx + 36], eax
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	dword ptr [rbx + 40], 0
 -      -     1.00    -      -      -      -      -      -      -      -      -     jmp	.LBB3_14
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	rax, rax
 -      -      -      -      -      -      -      -     1.00    -      -      -     je	.LBB3_13
 -      -      -      -      -      -      -      -      -      -      -      -     xor	eax, eax
 -      -      -     1.00   1.00    -     1.00    -     2.00   1.00    -      -     lock		cmpxchg	byte ptr [rcx + rdx + 8], r11b
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	rdi, qword ptr [rsp + 32]
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_52
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	rax, qword ptr [rbp]
 -      -      -      -      -     1.00    -     1.00    -      -      -      -     cmp	byte ptr [rax + 80], 1
 -      -     1.00    -      -      -      -      -      -      -      -      -     jne	.LBB3_55
 -      -      -     1.00   1.00    -      -      -      -      -      -      -     cmp	byte ptr [rax + 136], 1
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_56
 -      -     1.00    -      -     1.00    -      -      -      -      -      -     cmp	byte ptr [rax + 192], 1
 -      -     1.00    -      -      -      -      -      -      -      -      -     jne	.LBB3_57
 -      -      -      -     1.00    -      -      -     1.00    -      -      -     cmp	byte ptr [rax + 248], 0
 -      -     1.00    -      -      -      -      -      -      -      -      -     jne	.LBB3_53
 -      -      -      -      -      -      -     1.00    -      -      -      -     lea	rcx, [rax + 248]
 -      -      -      -      -      -      -     1.00    -      -      -      -     mov	edx, 3
 -      -      -      -      -      -      -      -     1.00    -      -      -     jmp	.LBB3_58
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	rax, qword ptr [rbx]
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	rcx, qword ptr [rsp + 40]
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	qword ptr [rcx], rax
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	rax, qword ptr [r13 + 15202280]
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	qword ptr [rbx], rax
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	qword ptr [r13 + 15202280], rbx
 -      -      -     1.00    -      -      -      -      -      -      -      -     mov	rbx, rcx
 -      -     1.00    -      -      -      -      -      -      -      -      -     jmp	.LBB3_13
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	eax, dword ptr [rbx + 36]
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	rcx, qword ptr [rbp + 88]
 -      -      -      -      -      -      -      -     1.00    -      -      -     shl	rax, 4
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	byte ptr [rcx + rax + 8], 0
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	rax, qword ptr [rbx]
 -      -     1.00    -      -      -      -      -      -      -      -      -     test	rax, rax
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_54
 -      -      -      -     1.00    -      -      -      -      -      -      -     mov	eax, dword ptr [rdi + 12]
 -      -      -      -      -      -      -     1.00    -      -      -      -     test	rax, rax
 -      -      -      -      -      -      -      -     1.00    -      -      -     je	.LBB3_80
 -      -      -      -      -     1.00    -      -      -      -      -      -     mov	rcx, qword ptr [rdi]
 -      -      -     1.00    -      -      -      -      -      -      -      -     cmp	eax, 8
 -      -     1.00    -      -      -      -      -      -      -      -      -     jae	.LBB3_63
 -      -      -      -      -      -      -      -      -      -      -      -     xor	edx, edx
 -      -     1.00    -      -      -      -      -      -      -      -      -     jmp	.LBB3_75
 -      -      -      -      -      -      -     1.00    -      -      -      -     lea	rdx, [rcx + 4*rax]
 -      -      -     1.00    -      -      -      -      -      -      -      -     lea	r8, [r12 + 4*rax]
 -      -      -      -      -      -      -     1.00    -      -      -      -     cmp	rcx, r8
 -      -     1.00    -      -      -      -      -      -      -      -      -     setb	r10b
 -      -      -     1.00    -      -      -      -      -      -      -      -     cmp	rdx, r12
 -      -      -      -      -      -      -      -     2.00    -      -      -     seta	r11b
 -      -      -      -      -      -      -     1.00    -      -      -      -     lea	r8, [r15 + 4*rax]
 -      -     1.00    -      -      -      -      -      -      -      -      -     cmp	rcx, r8
 -      -     1.00    -      -      -      -      -      -      -      -      -     setb	r8b
 -      -      -     1.00    -      -      -      -      -      -      -      -     cmp	rdx, r15
 -      -      -      -      -      -      -      -     2.00    -      -      -     seta	r9b
 -      -      -      -      -      -      -      -      -      -      -      -     xor	edx, edx
 -      -     1.00    -      -      -      -      -      -      -      -      -     test	r10b, r11b
 -      -     1.00    -      -      -      -      -      -      -      -      -     jne	.LBB3_75
 -      -     1.00    -      -      -      -      -      -      -      -      -     and	r8b, r9b
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_75
 -      -      -      -      -      -      -     1.00    -      -      -      -     cmp	eax, 16
 -      -      -      -      -      -      -      -     1.00    -      -      -     jae	.LBB3_71
 -      -      -      -      -      -      -      -      -      -      -      -     xor	edx, edx
 -      -      -      -      -      -      -      -     1.00    -      -      -     mov	r8, rdx
 -      -      -     1.00    -      -      -      -      -      -      -      -     mov	edx, eax
 -      -      -      -      -      -      -     1.00    -      -      -      -     and	edx, -8
 -      -      -      -     1.00    -      -      -      -      -      -      -     vbroadcastss	ymm0, dword ptr [rip + .LCPI3_3]
 -      -      -     1.00    -     1.00    -      -      -      -      -      -     vaddps	ymm1, ymm0, ymmword ptr [r12 + 4*r8]
 -      -      -     1.00    -      -      -      -      -      -      -      -     vcvttps2dq	ymm1, ymm1
 -      -      -      -      -      -      -     2.00    -      -      -      -     vpmovdw	xmm1, ymm1
 -      -      -     1.00   1.00    -      -      -      -      -      -      -     vaddps	ymm2, ymm0, ymmword ptr [r15 + 4*r8]
 -      -      -     1.00    -      -      -      -      -      -      -      -     vcvttps2dq	ymm2, ymm2
 -      -      -      -      -      -      -     2.00    -      -      -      -     vpmovdw	xmm2, ymm2
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpunpcklwd	xmm3, xmm1, xmm2
 -      -      -     1.00    -      -      -      -      -      -      -      -     vpunpckhwd	xmm1, xmm1, xmm2
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovdqu	xmmword ptr [rcx + 4*r8 + 16], xmm1
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovdqu	xmmword ptr [rcx + 4*r8], xmm3
 -      -      -     1.00    -      -      -      -      -      -      -      -     add	r8, 8
 -      -      -      -      -      -      -     1.00    -      -      -      -     cmp	rdx, r8
 -      -     1.00    -      -      -      -      -      -      -      -      -     jne	.LBB3_68
 -      -      -     1.00    -      -      -      -      -      -      -      -     cmp	rdx, rax
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_75
 -      -     1.00    -      -      -      -      -      -      -      -      -     jmp	.LBB3_80
 -      -      -      -      -      -      -     1.00    -      -      -      -     mov	r8d, 16
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	dl, 1
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_7
 -      -     1.00    -      -      -      -      -      -      -      -      -     jmp	.LBB3_8
 -      -      -      -      -      -      -     1.00    -      -      -      -     lea	rdx, [4*rax]
 -      -      -      -      -      -      -     1.00    -      -      -      -     and	rdx, -64
 -      -      -      -      -      -      -      -      -      -      -      -     xor	r8d, r8d
 -      -      -     1.00    -     1.00    -      -      -      -      -      -     vbroadcastss	zmm0, dword ptr [rip + .LCPI3_3]
 -      -      -      -      -     1.00    -     1.00    -      -      -      -     vmovdqa64	zmm1, zmmword ptr [rip + .LCPI3_4]
 -      -      -      -     1.00    -      -     1.00    -      -      -      -     vaddps	zmm2, zmm0, zmmword ptr [r12 + r8]
 -      -      -      -      -      -      -     1.00    -      -      -      -     vcvttps2dq	zmm2, zmm2
 -      -      -      -      -      -      -     2.00    -      -      -      -     vpmovdw	ymm2, zmm2
 -      -     1.00    -     1.00    -      -      -      -      -      -      -     vaddps	zmm3, zmm0, zmmword ptr [r15 + r8]
 -      -      -      -      -      -      -     1.00    -      -      -      -     vcvttps2dq	zmm3, zmm3
 -      -      -      -      -      -      -     2.00    -      -      -      -     vpmovdw	ymm3, zmm3
 -      -      -      -      -      -      -     1.00    -      -      -      -     vinserti64x4	zmm3, zmm3, ymm3, 1
 -      -      -      -      -      -      -     1.00    -      -      -      -     vinserti64x4	zmm2, zmm2, ymm2, 1
 -      -     0.99   0.01    -      -      -     2.00    -      -      -      -     vpermt2w	zmm2, zmm1, zmm3
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovdqu64	zmmword ptr [rcx + r8], zmm2
 -      -      -     1.00    -      -      -      -      -      -      -      -     add	r8, 64
 -      -      -      -      -      -      -      -     1.00    -      -      -     cmp	rdx, r8
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_72
 -      -      -     1.00    -      -      -      -      -      -      -      -     mov	edx, eax
 -      -     1.00    -      -      -      -      -      -      -      -      -     and	edx, -16
 -      -     1.00    -      -      -      -      -      -      -      -      -     cmp	rdx, rax
 -      -      -      -      -      -      -      -     1.00    -      -      -     je	.LBB3_80
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	al, 8
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_67
 -      -      -     1.00    -      -      -      -      -      -      -      -     mov	r8, rdx
 -      -     1.00    -      -      -      -      -      -      -      -      -     not	r8
 -      -      -     1.00    -      -      -      -      -      -      -      -     test	al, 1
 -      -      -      -      -      -      -      -     1.00    -      -      -     je	.LBB3_77
 -      -      -      -     1.00    -      -      -      -      -      -      -     vmovss	xmm0, dword ptr [rip + .LCPI3_3]
 -      -      -     1.00    -     1.00    -      -      -      -      -      -     vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx]
 -      -     2.00    -      -      -      -      -      -      -      -      -     vcvttss2si	r9d, xmm1
 -      -      -      -      -     0.01   1.00    -      -     0.99    -      -     mov	word ptr [rcx + 4*rdx], r9w
 -      -      -     1.00   0.01   0.99    -      -      -      -      -      -     vaddss	xmm0, xmm0, dword ptr [r15 + 4*rdx]
 -      -      -     2.00    -      -      -      -      -      -      -      -     vcvttss2si	r9d, xmm0
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     mov	word ptr [rcx + 4*rdx + 2], r9w
 -      -     1.00    -      -      -      -      -      -      -      -      -     or	rdx, 1
 -      -      -      -      -      -      -     1.00    -      -      -      -     add	r8, rax
 -      -      -      -      -      -      -      -     1.00    -      -      -     je	.LBB3_80
 -      -     1.00    -      -      -      -      -      -      -      -      -     add	r15, 4
 -      -      -      -      -     1.00    -      -      -      -      -      -     vmovss	xmm0, dword ptr [rip + .LCPI3_3]
 -      -     1.00    -      -     1.00    -      -      -      -      -      -     vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx]
 -      -     2.00    -      -      -      -      -      -      -      -      -     vcvttss2si	r8d, xmm1
 -      -      -      -      -     1.00   1.00    -      -      -      -      -     mov	word ptr [rcx + 4*rdx], r8w
 -      -      -     1.00   0.01   0.99    -      -      -      -      -      -     vaddss	xmm1, xmm0, dword ptr [r15 + 4*rdx - 4]
 -      -      -     2.00    -      -      -      -      -      -      -      -     vcvttss2si	r8d, xmm1
 -      -      -      -     0.01    -     1.00    -      -     0.99    -      -     mov	word ptr [rcx + 4*rdx + 2], r8w
 -      -     1.00    -     0.99   0.01    -      -      -      -      -      -     vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx + 4]
 -      -     2.00    -      -      -      -      -      -      -      -      -     vcvttss2si	r8d, xmm1
 -      -      -      -      -     0.99   1.00    -      -     0.01    -      -     mov	word ptr [rcx + 4*rdx + 4], r8w
 -      -      -     1.00   0.01   0.99    -      -      -      -      -      -     vaddss	xmm1, xmm0, dword ptr [r15 + 4*rdx]
 -      -      -     2.00    -      -      -      -      -      -      -      -     vcvttss2si	r8d, xmm1
 -      -      -      -      -     0.01   1.00    -      -     0.99    -      -     mov	word ptr [rcx + 4*rdx + 6], r8w
 -      -      -      -      -      -      -     1.00    -      -      -      -     add	rdx, 2
 -      -      -      -      -      -      -      -     1.00    -      -      -     cmp	rax, rdx
 -      -      -      -      -      -      -      -     1.00    -      -      -     jne	.LBB3_79


Timeline view:
                    0123456789          0123456789          0123456789          012345678
Index     0123456789          0123456789          0123456789          0123456789         

[0,0]     DeeeeeER  .    .    .    .    .    .    .    .    .    .    .    .    .    .  .   mov	ecx, dword ptr [rdx + 12]
[0,1]     D=====eER .    .    .    .    .    .    .    .    .    .    .    .    .    .  .   lea	rdx, [rcx + 3]
[0,2]     D======eER.    .    .    .    .    .    .    .    .    .    .    .    .    .  .   shr	rdx, 2
[0,3]     D=======eER    .    .    .    .    .    .    .    .    .    .    .    .    .  .   mov	r9, rdx
[0,4]     D========eER   .    .    .    .    .    .    .    .    .    .    .    .    .  .   shl	r9, 4
[0,5]     DeeeeeE----R   .    .    .    .    .    .    .    .    .    .    .    .    .  .   mov	r8, qword ptr [rsi + 8]
[0,6]     .DeeeeeE---R   .    .    .    .    .    .    .    .    .    .    .    .    .  .   mov	rax, qword ptr [rsi + 16]
[0,7]     .D=====eE--R   .    .    .    .    .    .    .    .    .    .    .    .    .  .   lea	r10, [rax + r8]
[0,8]     .D======eE-R   .    .    .    .    .    .    .    .    .    .    .    .    .  .   mov	r11d, r10d
[0,9]     .D=======eER   .    .    .    .    .    .    .    .    .    .    .    .    .  .   and	r11d, 15
[0,10]    .DeE-------R   .    .    .    .    .    .    .    .    .    .    .    .    .  .   mov	r15d, 16
[0,11]    .DeE-------R   .    .    .    .    .    .    .    .    .    .    .    .    .  .   mov	r12d, 16
[0,12]    . D=======eER  .    .    .    .    .    .    .    .    .    .    .    .    .  .   sub	r12, r11
[0,13]    . D=======eER  .    .    .    .    .    .    .    .    .    .    .    .    .  .   test	r11, r11
[0,14]    . D========eER .    .    .    .    .    .    .    .    .    .    .    .    .  .   cmove	r12, r11
[0,15]    . D=======eE-R .    .    .    .    .    .    .    .    .    .    .    .    .  .   add	rax, r9
[0,16]    . D=========eER.    .    .    .    .    .    .    .    .    .    .    .    .  .   add	rax, r12
[0,17]    . D=========eER.    .    .    .    .    .    .    .    .    .    .    .    .  .   add	r12, r10
[0,18]    .  D=========eER    .    .    .    .    .    .    .    .    .    .    .    .  .   add	r8, rax
[0,19]    .  D==========eER   .    .    .    .    .    .    .    .    .    .    .    .  .   mov	r10d, r8d
[0,20]    .  D===========eER  .    .    .    .    .    .    .    .    .    .    .    .  .   and	r10d, 15
[0,21]    .  D============eER .    .    .    .    .    .    .    .    .    .    .    .  .   sub	r15, r10
[0,22]    .  D============eER .    .    .    .    .    .    .    .    .    .    .    .  .   test	r10, r10
[0,23]    .  D=============eER.    .    .    .    .    .    .    .    .    .    .    .  .   cmove	r15, r10
[0,24]    .   D========eE----R.    .    .    .    .    .    .    .    .    .    .    .  .   add	rax, r9
[0,25]    .   D=============eER    .    .    .    .    .    .    .    .    .    .    .  .   add	rax, r15
[0,26]    .   D=============eER    .    .    .    .    .    .    .    .    .    .    .  .   add	r15, r8
[0,27]    .   DeE-------------R    .    .    .    .    .    .    .    .    .    .    .  .   mov	qword ptr [rsp + 56], rsi
[0,28]    .   D==============eER   .    .    .    .    .    .    .    .    .    .    .  .   mov	qword ptr [rsi + 16], rax
[0,29]    .    D=eeeeeeeeeE----R   .    .    .    .    .    .    .    .    .    .    .  .   vcvtusi2ss	xmm0, xmm0, dword ptr [rdi + 8]
[0,30]    .    DeE-------------R   .    .    .    .    .    .    .    .    .    .    .  .   test	rcx, rcx
[0,31]    .    D=eE------------R   .    .    .    .    .    .    .    .    .    .    .  .   je	.LBB3_10
[0,32]    .    D==eE-----------R   .    .    .    .    .    .    .    .    .    .    .  .   cmp	rdx, 2
[0,33]    .    DeE-------------R   .    .    .    .    .    .    .    .    .    .    .  .   mov	eax, 1
[0,34]    .    .D==eE----------R   .    .    .    .    .    .    .    .    .    .    .  .   cmovae	rax, rdx
[0,35]    .    .D=eE-----------R   .    .    .    .    .    .    .    .    .    .    .  .   cmp	ecx, 5
[0,36]    .    .D===eE---------R   .    .    .    .    .    .    .    .    .    .    .  .   jae	.LBB3_3
[0,37]    .    .D--------------R   .    .    .    .    .    .    .    .    .    .    .  .   xor	ecx, ecx
[0,38]    .    .D====eE--------R   .    .    .    .    .    .    .    .    .    .    .  .   jmp	.LBB3_8
[0,39]    .    .D====eE--------R   .    .    .    .    .    .    .    .    .    .    .  .   mov	ecx, eax
[0,40]    .    . D====eE-------R   .    .    .    .    .    .    .    .    .    .    .  .   and	ecx, -2
[0,41]    .    . D======eE-----R   .    .    .    .    .    .    .    .    .    .    .  .   lea	r8, [rcx - 2]
[0,42]    .    . D=======eE----R   .    .    .    .    .    .    .    .    .    .    .  .   mov	rdx, r8
[0,43]    .    . D=========eE--R   .    .    .    .    .    .    .    .    .    .    .  .   shr	rdx
[0,44]    .    . D==========eE-R   .    .    .    .    .    .    .    .    .    .    .  .   add	rdx, 1
[0,45]    .    . D=======eE----R   .    .    .    .    .    .    .    .    .    .    .  .   test	r8, r8
[0,46]    .    .  D=========eE-R   .    .    .    .    .    .    .    .    .    .    .  .   je	.LBB3_70
[0,47]    .    .  D==========eER   .    .    .    .    .    .    .    .    .    .    .  .   mov	r9, rdx
[0,48]    .    .  D===========eER  .    .    .    .    .    .    .    .    .    .    .  .   and	r9, -2
[0,49]    .    .  DeE-----------R  .    .    .    .    .    .    .    .    .    .    .  .   mov	r8d, 48
[0,50]    .    .  D-------------R  .    .    .    .    .    .    .    .    .    .    .  .   vxorps	xmm1, xmm1, xmm1
[0,51]    .    .   D==========eER  .    .    .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r12 + r8 - 48], xmm1
[0,52]    .    .   D===========eER .    .    .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r15 + r8 - 48], xmm1
[0,53]    .    .   D============eER.    .    .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r12 + r8 - 32], xmm1
[0,54]    .    .    D============eER    .    .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r15 + r8 - 32], xmm1
[0,55]    .    .    D=============eER   .    .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r12 + r8 - 16], xmm1
[0,56]    .    .    D==============eER  .    .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r15 + r8 - 16], xmm1
[0,57]    .    .    .D==============eER .    .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r12 + r8], xmm1
[0,58]    .    .    .D===============eER.    .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r15 + r8], xmm1
[0,59]    .    .    .DeE---------------R.    .    .    .    .    .    .    .    .    .  .   add	r8, 64
[0,60]    .    .    .D=========eE------R.    .    .    .    .    .    .    .    .    .  .   add	r9, -2
[0,61]    .    .    . D=========eE-----R.    .    .    .    .    .    .    .    .    .  .   jne	.LBB3_5
[0,62]    .    .    . DeE--------------R.    .    .    .    .    .    .    .    .    .  .   add	r8, -32
[0,63]    .    .    . D======eE--------R.    .    .    .    .    .    .    .    .    .  .   test	dl, 1
[0,64]    .    .    . D=======eE-------R.    .    .    .    .    .    .    .    .    .  .   je	.LBB3_8
[0,65]    .    .    . D----------------R.    .    .    .    .    .    .    .    .    .  .   vxorps	xmm1, xmm1, xmm1
[0,66]    .    .    .  D==============eER    .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r12 + r8 - 16], xmm1
[0,67]    .    .    .  D===============eER   .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r15 + r8 - 16], xmm1
[0,68]    .    .    .  D================eER  .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r12 + r8], xmm1
[0,69]    .    .    .   D================eER .    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r15 + r8], xmm1
[0,70]    .    .    .   DeE----------------R .    .    .    .    .    .    .    .    .  .   test	al, 1
[0,71]    .    .    .   D====eE------------R .    .    .    .    .    .    .    .    .  .   je	.LBB3_10
[0,72]    .    .    .   D====eE------------R .    .    .    .    .    .    .    .    .  .   shl	rcx, 4
[0,73]    .    .    .   D------------------R .    .    .    .    .    .    .    .    .  .   vxorps	xmm1, xmm1, xmm1
[0,74]    .    .    .    D================eER.    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r12 + rcx], xmm1
[0,75]    .    .    .    D=================eER    .    .    .    .    .    .    .    .  .   vmovaps	xmmword ptr [r15 + rcx], xmm1
[0,76]    .    .    .    DeeeeeE-------------R    .    .    .    .    .    .    .    .  .   mov	rax, qword ptr [r13 + 15202272]
[0,77]    .    .    .    D=====eE------------R    .    .    .    .    .    .    .    .  .   test	rax, rax
[0,78]    .    .    .    .D=====eE-----------R    .    .    .    .    .    .    .    .  .   je	.LBB3_60
[0,79]    .    .    .    .DeeeeeE------------R    .    .    .    .    .    .    .    .  .   mov	esi, dword ptr [rdi + 12]
[0,80]    .    .    .    .D=====eE-----------R    .    .    .    .    .    .    .    .  .   test	esi, esi
[0,81]    .    .    .    .D======eE----------R    .    .    .    .    .    .    .    .  .   je	.LBB3_59
[0,82]    .    .    .    .D=================eER   .    .    .    .    .    .    .    .  .   mov	qword ptr [rsp + 32], rdi
[0,83]    .    .    .    .DeeeeeE-------------R   .    .    .    .    .    .    .    .  .   vmovss	xmm6, dword ptr [rip + .LCPI3_0]
[0,84]    .    .    .    . D======eeeeeeeeeeeER   .    .    .    .    .    .    .    .  .   vdivss	xmm0, xmm6, xmm0
[0,85]    .    .    .    . D==eE--------------R   .    .    .    .    .    .    .    .  .   lea	rcx, [r13 + 15202272]
[0,86]    .    .    .    . D=================eER  .    .    .    .    .    .    .    .  .   mov	qword ptr [rsp + 40], rcx
[0,87]    .    .    .    . D=================eER  .    .    .    .    .    .    .    .  .   vbroadcastss	xmm7, xmm0
[0,88]    .    .    .    . D==eE---------------R  .    .    .    .    .    .    .    .  .   mov	r11b, 1
[0,89]    .    .    .    . DeeeeeeE------------R  .    .    .    .    .    .    .    .  .   vpbroadcastd	xmm8, dword ptr [rip + .LCPI3_1]
[0,90]    .    .    .    .  DeeeeeeE-----------R  .    .    .    .    .    .    .    .  .   vpbroadcastd	xmm9, dword ptr [rip + .LCPI3_2]
[0,91]    .    .    .    .  D------------------R  .    .    .    .    .    .    .    .  .   vxorps	xmm10, xmm10, xmm10
[0,92]    .    .    .    .  DeeeeeE------------R  .    .    .    .    .    .    .    .  .   vmovss	xmm11, dword ptr [rip + .LCPI3_3]
[0,93]    .    .    .    .  D==eE--------------R  .    .    .    .    .    .    .    .  .   mov	rbx, rax
[0,94]    .    .    .    .  D===eE-------------R  .    .    .    .    .    .    .    .  .   test	esi, esi
[0,95]    .    .    .    .  D====eE------------R  .    .    .    .    .    .    .    .  .   jne	.LBB3_15
[0,96]    .    .    .    .   D=eE--------------R  .    .    .    .    .    .    .    .  .   jmp	.LBB3_13
[0,97]    .    .    .    .   D=eeeeeE----------R  .    .    .    .    .    .    .    .  .   mov	rax, qword ptr [rax]
[0,98]    .    .    .    .   D======eE---------R  .    .    .    .    .    .    .    .  .   test	rax, rax
[0,99]    .    .    .    .   D=======eE--------R  .    .    .    .    .    .    .    .  .   jne	.LBB3_59
[0,100]   .    .    .    .   D====eE-----------R  .    .    .    .    .    .    .    .  .   jmp	.LBB3_60
[0,101]   .    .    .    .   D======eE---------R  .    .    .    .    .    .    .    .  .   lea	rcx, [rax + 80]
[0,102]   .    .    .    .    D----------------R  .    .    .    .    .    .    .    .  .   xor	edx, edx
[0,103]   .    .    .    .    D====eE----------R  .    .    .    .    .    .    .    .  .   jmp	.LBB3_58
[0,104]   .    .    .    .    D======eE--------R  .    .    .    .    .    .    .    .  .   lea	rcx, [rax + 136]
[0,105]   .    .    .    .    D==eE------------R  .    .    .    .    .    .    .    .  .   mov	edx, 1
[0,106]   .    .    .    .    D====eE----------R  .    .    .    .    .    .    .    .  .   jmp	.LBB3_58
[0,107]   .    .    .    .    D======eE--------R  .    .    .    .    .    .    .    .  .   lea	rcx, [rax + 192]
[0,108]   .    .    .    .    .D=eE------------R  .    .    .    .    .    .    .    .  .   mov	edx, 2
[0,109]   .    .    .    .    .D==eeeE---------R  .    .    .    .    .    .    .    .  .   imul	rdx, rdx, 56
[0,110]   .    .    .    .    .D==============eER .    .    .    .    .    .    .    .  .   mov	byte ptr [rcx], 1
[0,111]   .    .    .    .    .D=====eeeeeE-----R .    .    .    .    .    .    .    .  .   mov	r8, qword ptr [rax + rdx + 48]
[0,112]   .    .    .    .    . D==============eeeeeeeER    .    .    .    .    .    .  .   add	dword ptr [rax + rdx + 56], 1
[0,113]   .    .    .    .    . D=====eE---------------R    .    .    .    .    .    .  .   lea	r9, [rax + rdx]
[0,114]   .    .    .    .    . D======eE--------------R    .    .    .    .    .    .  .   add	r9, 32
[0,115]   .    .    .    .    . D===============eE-----R    .    .    .    .    .    .  .   mov	qword ptr [rax + rdx + 64], r9
[0,116]   .    .    .    .    .  D===============eE----R    .    .    .    .    .    .  .   mov	qword ptr [rax + rdx + 72], r8
[0,117]   .    .    .    .    .  D===eeeeeE------------R    .    .    .    .    .    .  .   mov	rcx, qword ptr [rax + rdx + 40]
[0,118]   .    .    .    .    .  D========eE-----------R    .    .    .    .    .    .  .   add	rcx, r8
[0,119]   .    .    .    .    .  D=========eE----------R    .    .    .    .    .    .  .   mov	r10d, ecx
[0,120]   .    .    .    .    .  D==========eE---------R    .    .    .    .    .    .  .   and	r10d, 7
[0,121]   .    .    .    .    .  DeE-------------------R    .    .    .    .    .    .  .   mov	r11d, 8
[0,122]   .    .    .    .    .   D==========eE--------R    .    .    .    .    .    .  .   sub	r11, r10
[0,123]   .    .    .    .    .   D==========eE--------R    .    .    .    .    .    .  .   test	r10, r10
[0,124]   .    .    .    .    .   D===========eE-------R    .    .    .    .    .    .  .   cmove	r11, r10
[0,125]   .    .    .    .    .   D============eE------R    .    .    .    .    .    .  .   lea	r8, [r8 + r11 + 32]
[0,126]   .    .    .    .    .   D===============eE---R    .    .    .    .    .    .  .   mov	qword ptr [rax + rdx + 48], r8
[0,127]   .    .    .    .    .   D================eE--R    .    .    .    .    .    .  .   mov	qword ptr [r11 + rcx], rbp
[0,128]   .    .    .    .    .    DeeeeeE-------------R    .    .    .    .    .    .  .   mov	eax, dword ptr [rbx + 36]
[0,129]   .    .    .    .    .    D================eE-R    .    .    .    .    .    .  .   mov	dword ptr [r11 + rcx + 24], eax
[0,130]   .    .    .    .    .    D=================eER    .    .    .    .    .    .  .   mov	qword ptr [r11 + rcx + 8], r9
[0,131]   .    .    .    .    .    DeeeeeE-------------R    .    .    .    .    .    .  .   mov	rax, qword ptr [rbp + 24]
[0,132]   .    .    .    .    .    D==eeeeeE-----------R    .    .    .    .    .    .  .   mov	rdx, qword ptr [rbp + 16]
[0,133]   .    .    .    .    .    D=======eE----------R    .    .    .    .    .    .  .   add	rdx, rax
[0,134]   .    .    .    .    .    .D=======eE---------R    .    .    .    .    .    .  .   mov	r8d, edx
[0,135]   .    .    .    .    .    .D========eE--------R    .    .    .    .    .    .  .   and	r8d, 7
[0,136]   .    .    .    .    .    .DeE----------------R    .    .    .    .    .    .  .   mov	r9d, 8
[0,137]   .    .    .    .    .    .D=========eE-------R    .    .    .    .    .    .  .   sub	r9, r8
[0,138]   .    .    .    .    .    .D=========eE-------R    .    .    .    .    .    .  .   test	r8, r8
[0,139]   .    .    .    .    .    .D==========eE------R    .    .    .    .    .    .  .   cmove	r9, r8
[0,140]   .    .    .    .    .    . D=========eE------R    .    .    .    .    .    .  .   lea	r8, [r11 + rcx]
[0,141]   .    .    .    .    .    . D==========eE-----R    .    .    .    .    .    .  .   add	rax, r9
[0,142]   .    .    .    .    .    . D===========eE----R    .    .    .    .    .    .  .   add	rax, 24
[0,143]   .    .    .    .    .    . D==========eE-----R    .    .    .    .    .    .  .   add	r9, rdx
[0,144]   .    .    .    .    .    . D================eER   .    .    .    .    .    .  .   mov	qword ptr [rbp + 24], rax
[0,145]   .    .    .    .    .    . D=================eER  .    .    .    .    .    .  .   mov	qword ptr [r11 + rcx + 16], r9
[0,146]   .    .    .    .    .    .  D=================eER .    .    .    .    .    .  .   mov	byte ptr [r11 + rcx + 28], 2
[0,147]   .    .    .    .    .    .  DeeeeeE-------------R .    .    .    .    .    .  .   mov	rax, qword ptr [rbp]
[0,148]   .    .    .    .    .    .  D=====eeeeeE--------R .    .    .    .    .    .  .   mov	rcx, qword ptr [rax + 288]
[0,149]   .    .    .    .    .    .  DeE-----------------R .    .    .    .    .    .  .   lea	rdx, [rip + handmade_asset.LoadSoundWork]
Truncated display due to cycle limit


Average Wait times (based on the timeline view):
[0]: Executions
[1]: Average time spent waiting in a scheduler's queue
[2]: Average time spent waiting in a scheduler's queue while ready
[3]: Average time elapsed from WB until retire stage

      [0]    [1]    [2]    [3]
0.     10    2.8    0.1    23.4      mov	ecx, dword ptr [rdx + 12]
1.     10    7.8    0.0    22.5      lea	rdx, [rcx + 3]
2.     10    8.8    0.0    21.6      shr	rdx, 2
3.     10    9.8    0.0    20.7      mov	r9, rdx
4.     10    10.8   0.0    19.8      shl	r9, 4
5.     10    1.0    1.0    25.6      mov	r8, qword ptr [rsi + 8]
6.     10    1.0    1.0    24.6      mov	rax, qword ptr [rsi + 16]
7.     10    6.0    0.0    23.6      lea	r10, [rax + r8]
8.     10    7.0    0.0    22.6      mov	r11d, r10d
9.     10    8.0    0.0    21.6      and	r11d, 15
10.    10    2.8    2.8    26.8      mov	r15d, 16
11.    10    3.7    3.7    25.9      mov	r12d, 16
12.    10    8.0    0.0    20.7      sub	r12, r11
13.    10    8.0    0.0    20.7      test	r11, r11
14.    10    9.9    0.9    18.9      cmove	r12, r11
15.    10    11.6   1.8    17.2      add	rax, r9
16.    10    12.7   0.0    16.2      add	rax, r12
17.    10    10.9   0.0    18.0      add	r12, r10
18.    10    12.7   0.0    15.3      add	r8, rax
19.    10    13.7   0.0    14.4      mov	r10d, r8d
20.    10    14.7   0.0    13.5      and	r10d, 15
21.    10    15.7   0.0    12.6      sub	r15, r10
22.    10    15.7   0.0    12.6      test	r10, r10
23.    10    16.7   0.0    11.7      cmove	r15, r10
24.    10    11.7   0.0    15.7      add	rax, r9
25.    10    16.7   0.0    10.8      add	rax, r15
26.    10    16.7   0.0    10.8      add	r15, r8
27.    10    27.1   1.0    1.3       mov	qword ptr [rsp + 56], rsi
28.    10    29.4   0.9    0.0       mov	qword ptr [rsi + 16], rax
29.    10    1.1    1.1    19.3      vcvtusi2ss	xmm0, xmm0, dword ptr [rdi + 8]
30.    10    2.8    0.0    25.6      test	rcx, rcx
31.    10    3.8    0.0    24.6      je	.LBB3_10
32.    10    10.2   5.4    18.2      cmp	rdx, 2
33.    10    1.0    1.0    27.4      mov	eax, 1
34.    10    10.2   0.0    17.2      cmovae	rax, rdx
35.    10    2.9    1.1    24.5      cmp	ecx, 5
36.    10    10.3   6.4    17.1      jae	.LBB3_3
37.    10    0.0    0.0    28.4      xor	ecx, ecx
38.    10    1.4    1.4    26.0      jmp	.LBB3_8
39.    10    11.3   0.1    16.1      mov	ecx, eax
40.    10    11.3   0.0    15.1      and	ecx, -2
41.    10    12.4   0.1    14.0      lea	r8, [rcx - 2]
42.    10    13.4   0.0    13.0      mov	rdx, r8
43.    10    14.5   0.1    11.9      shr	rdx
44.    10    15.5   0.0    10.9      add	rdx, 1
45.    10    14.3   0.9    12.1      test	r8, r8
46.    10    14.5   0.2    10.9      je	.LBB3_70
47.    10    15.5   0.0    9.9       mov	r9, rdx
48.    10    16.5   0.0    9.0       and	r9, -2
49.    10    9.1    9.1    16.4      mov	r8d, 48
50.    10    0.0    0.0    26.5      vxorps	xmm1, xmm1, xmm1
51.    10    25.4   1.0    0.0       vmovaps	xmmword ptr [r12 + r8 - 48], xmm1
52.    10    26.4   1.0    0.0       vmovaps	xmmword ptr [r15 + r8 - 48], xmm1
53.    10    27.4   1.0    0.0       vmovaps	xmmword ptr [r12 + r8 - 32], xmm1
54.    10    27.4   1.0    0.0       vmovaps	xmmword ptr [r15 + r8 - 32], xmm1
55.    10    28.4   1.0    0.0       vmovaps	xmmword ptr [r12 + r8 - 16], xmm1
56.    10    29.4   1.0    0.0       vmovaps	xmmword ptr [r15 + r8 - 16], xmm1
57.    10    29.4   1.0    0.0       vmovaps	xmmword ptr [r12 + r8], xmm1
58.    10    30.4   1.0    0.0       vmovaps	xmmword ptr [r15 + r8], xmm1
59.    10    7.3    0.1    23.1      add	r8, 64
60.    10    14.5   0.0    15.9      add	r9, -2
61.    10    14.5   0.0    14.9      jne	.LBB3_5
62.    10    9.1    1.8    20.3      add	r8, -32
63.    10    11.5   0.0    17.9      test	dl, 1
64.    10    12.5   0.0    16.9      je	.LBB3_8
65.    10    0.0    0.0    30.4      vxorps	xmm1, xmm1, xmm1
66.    10    29.4   1.0    0.0       vmovaps	xmmword ptr [r12 + r8 - 16], xmm1
67.    10    30.4   1.0    0.0       vmovaps	xmmword ptr [r15 + r8 - 16], xmm1
68.    10    31.4   1.0    0.0       vmovaps	xmmword ptr [r12 + r8], xmm1
69.    10    31.4   1.0    0.0       vmovaps	xmmword ptr [r15 + r8], xmm1
70.    10    3.7    0.1    27.7      test	al, 1
71.    10    8.6    3.9    22.8      je	.LBB3_10
72.    10    7.7    2.3    23.7      shl	rcx, 4
73.    10    0.0    0.0    32.4      vxorps	xmm1, xmm1, xmm1
74.    10    31.4   1.0    0.0       vmovaps	xmmword ptr [r12 + rcx], xmm1
75.    10    32.4   1.0    0.0       vmovaps	xmmword ptr [r15 + rcx], xmm1
76.    10    1.0    1.0    27.4      mov	rax, qword ptr [r13 + 15202272]
77.    10    7.8    1.8    24.6      test	rax, rax
78.    10    7.8    0.0    23.6      je	.LBB3_60
79.    10    1.0    1.0    26.4      mov	esi, dword ptr [rdi + 12]
80.    10    7.8    1.8    23.6      test	esi, esi
81.    10    8.8    0.0    22.6      je	.LBB3_59
82.    10    32.4   1.0    0.0       mov	qword ptr [rsp + 32], rdi
83.    10    1.0    1.0    26.5      vmovss	xmm6, dword ptr [rip + .LCPI3_0]
84.    10    8.8    2.9    12.6      vdivss	xmm0, xmm6, xmm0
85.    10    7.5    7.5    23.9      lea	rcx, [r13 + 15202272]
86.    10    32.4   1.0    0.0       mov	qword ptr [rsp + 40], rcx
87.    10    19.8   0.0    12.6      vbroadcastss	xmm7, xmm0
88.    10    7.5    7.5    24.0      mov	r11b, 1
89.    10    1.0    1.0    25.5      vpbroadcastd	xmm8, dword ptr [rip + .LCPI3_1]
90.    10    1.0    1.0    25.4      vpbroadcastd	xmm9, dword ptr [rip + .LCPI3_2]
91.    10    0.0    0.0    32.4      vxorps	xmm10, xmm10, xmm10
92.    10    1.9    1.9    25.5      vmovss	xmm11, dword ptr [rip + .LCPI3_3]
93.    10    7.5    4.5    23.9      mov	rbx, rax
94.    10    7.6    4.5    22.9      test	esi, esi
95.    10    8.6    0.0    21.9      jne	.LBB3_15
96.    10    7.4    7.4    23.0      jmp	.LBB3_13
97.    10    2.0    0.0    24.4      mov	rax, qword ptr [rax]
98.    10    7.9    0.9    22.5      test	rax, rax
99.    10    8.9    0.0    21.5      jne	.LBB3_59
100.   10    8.6    8.6    20.9      jmp	.LBB3_60
101.   10    7.9    1.8    21.6      lea	rcx, [rax + 80]
102.   10    0.0    0.0    30.4      xor	edx, edx
103.   10    8.6    8.6    20.8      jmp	.LBB3_58
104.   10    7.9    1.9    21.5      lea	rcx, [rax + 136]
105.   10    7.5    7.5    21.0      mov	edx, 1
106.   10    8.6    8.6    19.9      jmp	.LBB3_58
107.   10    7.9    2.8    20.6      lea	rcx, [rax + 192]
108.   10    8.3    8.3    20.1      mov	edx, 2
109.   10    8.4    0.0    17.1      imul	rdx, rdx, 56
110.   10    28.5   1.0    0.0       mov	byte ptr [rcx], 1
111.   10    11.4   0.0    13.1      mov	r8, qword ptr [rax + rdx + 48]
112.   10    29.4   1.0    0.0       add	dword ptr [rax + rdx + 56], 1
113.   10    10.5   0.1    24.0      lea	r9, [rax + rdx]
114.   10    11.5   0.0    23.0      add	r9, 32
115.   10    29.5   1.0    5.0       mov	qword ptr [rax + rdx + 64], r9
116.   10    30.4   1.0    4.0       mov	qword ptr [rax + rdx + 72], r8
117.   10    9.4    0.0    20.1      mov	rcx, qword ptr [rax + rdx + 40]
118.   10    14.4   0.0    19.1      add	rcx, r8
119.   10    15.4   0.0    18.1      mov	r10d, ecx
120.   10    16.4   0.0    17.1      and	r10d, 7
121.   10    4.6    4.6    28.0      mov	r11d, 8
122.   10    16.4   0.0    16.1      sub	r11, r10
123.   10    16.4   0.0    16.1      test	r10, r10
124.   10    17.4   0.0    15.1      cmove	r11, r10
125.   10    17.5   0.0    14.1      lea	r8, [r8 + r11 + 32]
126.   10    28.6   1.0    3.0       mov	qword ptr [rax + rdx + 48], r8
127.   10    29.6   1.0    2.0       mov	qword ptr [r11 + rcx], rbp
128.   10    1.0    0.1    26.5      mov	eax, dword ptr [rbx + 36]
129.   10    29.6   1.0    1.0       mov	dword ptr [r11 + rcx + 24], eax
130.   10    30.6   1.0    0.0       mov	qword ptr [r11 + rcx + 8], r9
131.   10    1.0    1.0    25.6      mov	rax, qword ptr [rbp + 24]
132.   10    1.2    1.2    25.4      mov	rdx, qword ptr [rbp + 16]
133.   10    6.2    0.0    24.4      add	rdx, rax
134.   10    7.1    0.0    23.4      mov	r8d, edx
135.   10    7.2    0.0    22.4      and	r8d, 7
136.   10    1.9    1.9    27.7      mov	r9d, 8
137.   10    8.2    0.0    21.4      sub	r9, r8
138.   10    8.2    0.0    21.4      test	r8, r8
139.   10    9.2    0.0    20.4      cmove	r9, r8
140.   10    15.4   0.0    14.1      lea	r8, [r11 + rcx]
141.   10    9.2    0.0    19.4      add	rax, r9
142.   10    10.2   0.0    18.4      add	rax, 24
143.   10    9.2    0.0    19.4      add	r9, rdx
144.   10    29.6   1.0    0.0       mov	qword ptr [rbp + 24], rax
145.   10    30.6   1.0    0.0       mov	qword ptr [r11 + rcx + 16], r9
146.   10    31.5   1.0    0.0       mov	byte ptr [r11 + rcx + 28], 2
147.   10    1.0    1.0    25.6      mov	rax, qword ptr [rbp]
148.   10    6.0    0.0    20.6      mov	rcx, qword ptr [rax + 288]
149.   10    1.0    1.0    29.6      lea	rdx, [rip + handmade_asset.LoadSoundWork]
150.   10    30.6   30.6   0.0       call	qword ptr [rip + handmade_data.PlatformAddEntry]
151.   10    1.0    1.0    128.6     mov	r11b, 1
152.   10    1.0    1.0    123.6     mov	rax, qword ptr [rbx]
153.   10    6.0    0.0    122.6     test	rax, rax
154.   10    7.1    0.1    121.5     jne	.LBB3_54
155.   10    1.0    1.0    127.6     jmp	.LBB3_60
156.   10    1.1    1.1    123.5     mov	rdi, qword ptr [rsp + 32]
157.   10    2.9    2.9    121.7     mov	rax, qword ptr [rbx]
158.   10    7.0    0.1    120.6     test	rax, rax
159.   10    8.0    0.0    119.6     je	.LBB3_60
160.   10    5.1    0.0    118.5     mov	esi, dword ptr [rdi + 12]
161.   10    29.6   1.0    98.0      mov	qword ptr [rsp + 40], rbx
162.   10    7.1    0.2    120.5     mov	rbx, rax
163.   10    9.2    0.0    117.5     test	esi, esi
164.   10    10.1   0.0    116.5     jne	.LBB3_15
165.   10    1.1    1.1    125.5     jmp	.LBB3_13
166.   10    9.1    0.0    117.5     sub	esi, ecx
167.   10    10.1   0.0    116.5     je	.LBB3_13
168.   10    1.9    1.9    119.8     mov	rcx, qword ptr [rbp + 88]
169.   10    6.2    0.0    115.5     mov	eax, dword ptr [rbx + 36]
170.   10    11.1   0.0    114.5     mov	rdx, rax
171.   10    12.1   0.0    113.5     shl	rdx, 4
172.   10    13.1   0.0    108.5     mov	rdi, qword ptr [rcx + rdx]
173.   10    17.2   0.0    107.5     test	rdi, rdi
174.   10    18.2   0.0    106.5     je	.LBB3_42
175.   10    1.0    1.0    119.7     mov	rdx, qword ptr [rbp + 72]
176.   10    10.1   0.0    114.5     lea	rax, [rax + 2*rax]
177.   10    10.2   0.0    113.5     lea	r14, [rdx + 8*rax]
178.   10    11.2   0.0    112.5     add	r14, 16
179.   10    10.2   0.0    109.5     mov	edx, dword ptr [rdx + 8*rax + 16]
180.   10    15.2   0.0    108.5     test	rdx, rdx
181.   10    16.2   0.0    107.5     je	.LBB3_28
182.   10    14.2   0.0    108.5     shl	rdx, 4
183.   10    0.0    0.0    123.7     xor	eax, eax
184.   10    25.0   0.9    89.7      lock		cmpxchg	byte ptr [rcx + rdx + 8], r11b
185.   10    32.0   0.0    88.7      jne	.LBB3_23
186.   10    1.9    1.9    114.8     mov	rax, qword ptr [rbp]
187.   10    7.8    0.9    107.9     cmp	byte ptr [rax + 80], 1
188.   10    13.8   0.0    106.9     jne	.LBB3_24
189.   10    7.8    1.9    106.9     cmp	byte ptr [rax + 136], 1
190.   10    13.8   0.0    105.9     jne	.LBB3_25
191.   10    7.8    1.9    106.9     cmp	byte ptr [rax + 192], 1
192.   10    14.7   0.9    105.0     jne	.LBB3_26
193.   10    7.8    2.9    105.9     cmp	byte ptr [rax + 248], 0
194.   10    13.8   0.0    104.9     jne	.LBB3_28
195.   10    4.9    0.0    113.8     lea	rcx, [rax + 248]
196.   10    1.0    1.0    117.7     mov	edx, 3
197.   10    2.8    2.8    115.9     jmp	.LBB3_27
198.   10    7.1    0.9    106.6     mov	eax, dword ptr [r14]
199.   10    1.0    1.0    112.7     mov	rcx, qword ptr [rbp + 88]
200.   10    12.2   0.1    105.5     shl	rax, 4
201.   10    22.2   0.9    95.5      mov	byte ptr [rcx + rax + 8], 0
202.   10    1.9    1.9    115.8     jmp	.LBB3_28
203.   10    13.2   0.0    104.5     lea	rcx, [rax + 80]
204.   10    0.0    0.0    117.7     xor	edx, edx
205.   10    1.9    1.9    114.8     jmp	.LBB3_27
206.   10    12.2   0.0    104.5     lea	rcx, [rax + 136]
207.   10    1.0    1.0    115.7     mov	edx, 1
208.   10    2.1    2.1    114.6     jmp	.LBB3_27
209.   10    13.2   1.0    103.5     lea	rcx, [rax + 192]
210.   10    2.0    2.0    113.7     mov	edx, 2
211.   10    3.1    0.1    110.6     imul	rdx, rdx, 56
212.   10    21.3   0.9    94.4      mov	byte ptr [rcx], 1
213.   10    11.2   0.0    100.5     mov	r8, qword ptr [rax + rdx + 48]
214.   10    21.3   1.0    87.4      add	dword ptr [rax + rdx + 56], 1
215.   10    11.2   1.0    103.5     lea	r9, [rax + rdx]
216.   10    12.2   0.0    102.5     add	r9, 32
217.   10    22.3   1.0    92.4      mov	qword ptr [rax + rdx + 64], r9
218.   10    22.3   0.9    91.4      mov	qword ptr [rax + rdx + 72], r8
219.   10    9.2    0.0    100.5     mov	rcx, qword ptr [rax + rdx + 40]
220.   10    14.2   0.0    99.5      add	rcx, r8
221.   10    15.2   0.0    98.5      mov	r10d, ecx
222.   10    16.2   0.0    97.5      and	r10d, 7
223.   10    1.0    1.0    112.7     mov	r11d, 8
224.   10    16.2   0.0    96.5      sub	r11, r10
225.   10    16.2   0.0    96.5      test	r10, r10
226.   10    17.2   0.0    95.5      cmove	r11, r10
227.   10    18.2   0.0    94.5      lea	r8, [r8 + r11 + 32]
228.   10    22.8   0.9    89.9      mov	qword ptr [rax + rdx + 48], r8
229.   10    23.8   1.0    88.9      mov	qword ptr [r11 + rcx], rbp
230.   10    2.0    1.8    105.7     mov	eax, dword ptr [r14]
231.   10    23.8   1.0    87.9      mov	dword ptr [r11 + rcx + 24], eax
232.   10    24.8   1.0    86.9      mov	qword ptr [r11 + rcx + 8], r9
233.   10    2.1    2.1    105.6     mov	rax, qword ptr [rbp + 24]
234.   10    3.0    3.0    104.7     mov	rdx, qword ptr [rbp + 16]
235.   10    8.0    0.0    103.7     add	rdx, rax
236.   10    8.0    0.0    102.7     mov	r8d, edx
237.   10    9.0    0.0    101.7     and	r8d, 7
238.   10    1.0    1.0    109.7     mov	r9d, 8
239.   10    10.0   0.0    100.7     sub	r9, r8
240.   10    10.0   0.0    100.7     test	r8, r8
241.   10    11.0   0.0    99.7      cmove	r9, r8
242.   10    15.2   0.0    94.5      lea	r8, [r11 + rcx]
243.   10    11.0   0.0    98.7      add	rax, r9
244.   10    12.0   0.0    97.7      add	rax, 24
245.   10    11.0   0.0    98.7      add	r9, rdx
246.   10    23.8   1.0    85.9      mov	qword ptr [rbp + 24], rax
247.   10    23.9   1.0    84.9      mov	qword ptr [r11 + rcx + 16], r9
248.   10    24.8   1.0    83.9      mov	byte ptr [r11 + rcx + 28], 2
249.   10    1.0    1.0    103.7     mov	rax, qword ptr [rbp]
250.   10    6.1    0.1    98.6      mov	rcx, qword ptr [rax + 288]
251.   10    1.0    1.0    106.8     lea	rdx, [rip + handmade_asset.LoadSoundWork]
252.   10    22.9   22.9   0.0       call	qword ptr [rip + handmade_data.PlatformAddEntry]
253.   10    1.0    1.0    120.0     mov	r11b, 1
254.   10    1.0    1.0    115.9     vmovsd	xmm1, qword ptr [rbx + 8]
255.   10    2.9    2.9    114.0     vmovsd	xmm0, qword ptr [rbx + 16]
256.   10    9.7    1.8    108.2     vmulps	xmm2, xmm7, xmm0
257.   10    2.9    2.9    114.0     vmovd	xmm0, dword ptr [rbx + 40]
258.   10    3.9    3.8    113.0     mov	eax, dword ptr [rdi + 16]
259.   10    2.9    2.9    117.1     vmovdqa	xmm3, xmm9
260.   10    8.7    1.8    111.2     vpternlogd	xmm3, xmm0, xmm8, 248
261.   10    9.7    0.0    107.2     vaddss	xmm3, xmm0, xmm3
262.   10    13.7   0.0    99.2      vroundss	xmm3, xmm3, xmm3, 11
263.   10    20.8   0.0    93.2      vcvttss2usi	ecx, xmm3
264.   10    26.7   0.0    92.2      sub	eax, ecx
265.   10    27.7   0.0    87.2      vcvtusi2ss	xmm4, xmm17, eax
266.   10    3.0    3.0    111.9     vmovss	xmm3, dword ptr [rbx + 32]
267.   10    31.8   0.0    76.2      vdivss	xmm4, xmm4, xmm3
268.   10    1.2    1.2    116.8     vmovdqa	xmm5, xmm9
269.   10    42.7   0.0    75.2      vpternlogd	xmm5, xmm4, xmm8, 248
270.   10    43.7   0.0    71.2      vaddss	xmm4, xmm4, xmm5
271.   10    47.7   0.0    63.2      vroundss	xmm4, xmm4, xmm4, 11
272.   10    54.8   0.0    57.2      vcvttss2usi	r8d, xmm4
273.   10    60.7   0.0    56.2      cmp	esi, r8d
274.   10    61.7   0.0    55.2      cmovb	r8d, esi
275.   10    12.4   2.7    103.5     vucomiss	xmm2, xmm10
276.   10    14.4   0.0    102.5     jne	.LBB3_29
277.   10    14.5   1.0    101.5     jnp	.LBB3_31
278.   10    1.1    1.1    110.9     vmovss	xmm4, dword ptr [rbx + 24]
279.   10    6.9    0.9    106.0     vsubss	xmm4, xmm4, xmm1
280.   10    12.7   1.8    93.2      vdivss	xmm4, xmm4, xmm2
281.   10    23.7   0.0    89.2      vaddss	xmm4, xmm11, xmm4
282.   10    26.8   0.0    83.2      vcvttss2usi	ecx, xmm4
283.   10    60.8   0.0    54.2      cmp	r8d, ecx
284.   10    61.7   0.0    52.2      seta	al
285.   10    61.7   0.0    53.2      cmovae	r8d, ecx
286.   10    6.8    0.0    107.2     vmovshdup	xmm4, xmm2
287.   10    12.3   4.5    100.7     vucomiss	xmm4, xmm10
288.   10    14.3   0.0    99.7      jne	.LBB3_30
289.   10    14.3   0.1    99.6      jnp	.LBB3_32
290.   10    1.0    1.0    108.9     vmovss	xmm5, dword ptr [rbx + 28]
291.   10    5.5    5.5    108.4     vmovshdup	xmm16, xmm1
292.   10    6.2    0.2    103.8     vsubss	xmm5, xmm5, xmm16
293.   10    12.9   2.7    90.1      vdivss	xmm4, xmm5, xmm4
294.   10    23.9   0.0    86.1      vaddss	xmm4, xmm11, xmm4
295.   10    27.8   0.0    80.1      vcvttss2usi	ecx, xmm4
296.   10    60.7   0.0    52.2      cmp	r8d, ecx
297.   10    60.8   0.0    50.2      seta	dl
298.   10    60.8   0.0    51.2      cmovae	r8d, ecx
299.   10    61.7   0.0    50.2      mov	ecx, r8d
300.   10    61.7   0.0    50.2      test	r8d, r8d
301.   10    62.7   0.0    49.2      jne	.LBB3_33
302.   10    2.8    2.8    108.2     jmp	.LBB3_35
303.   10    0.0    0.0    112.0     xor	eax, eax
304.   10    4.9    1.1    106.1     vmovshdup	xmm4, xmm2
305.   10    12.3   6.5    97.6      vucomiss	xmm4, xmm10
306.   10    14.3   0.0    96.6      jne	.LBB3_30
307.   10    14.3   0.0    96.6      jp	.LBB3_30
308.   10    0.0    0.0    111.0     xor	edx, edx
309.   10    59.8   0.0    50.2      mov	ecx, r8d
310.   10    60.8   1.0    49.2      test	r8d, r8d
311.   10    61.7   0.0    48.2      je	.LBB3_35
312.   10    0.0    0.0    110.9     xor	r8d, r8d
313.   10    1.4    1.4    100.6     vroundss	xmm4, xmm0, xmm0, 9
314.   10    9.4    0.0    94.6      vcvttss2si	r9d, xmm4
315.   10    15.4   0.1    89.5      vcvtusi2ss	xmm4, xmm17, r9d
316.   10    1.0    1.0    103.0     mov	r10, qword ptr [rdi]
317.   10    19.5   0.0    85.5      vsubss	xmm4, xmm0, xmm4
318.   10    14.4   0.0    89.6      vmovd	xmm5, dword ptr [r10 + 2*r9]
319.   10    19.4   0.0    88.6      vpmovsxwd	xmm5, xmm5
320.   10    20.3   0.0    84.6      vcvtdq2ps	xmm5, xmm5
321.   10    22.5   0.0    81.5      vsubss	xmm16, xmm6, xmm4
322.   10    26.5   0.0    80.5      vinsertps	xmm4, xmm16, xmm4, 16
323.   10    27.5   0.0    76.5      vmulps	xmm4, xmm4, xmm5
324.   10    31.5   0.0    75.5      vmovshdup	xmm5, xmm4
325.   10    1.2    1.2    96.8      vmulss	xmm16, xmm1, dword ptr [r13 + 15202288]
326.   10    31.5   0.0    71.5      vaddss	xmm4, xmm4, xmm5
327.   10    35.5   0.0    67.5      vmulss	xmm5, xmm16, xmm4
328.   10    34.6   0.0    62.5      vaddss	xmm5, xmm5, dword ptr [r12 + 4*r8]
329.   10    43.5   0.0    61.5      vmovss	dword ptr [r12 + 4*r8], xmm5
330.   10    1.0    1.0    103.1     vmovshdup	xmm5, xmm1
331.   10    1.2    0.2    94.9      vmulss	xmm5, xmm5, dword ptr [r13 + 15202292]
332.   10    33.7   1.0    66.5      vmulss	xmm4, xmm5, xmm4
333.   10    34.5   0.9    60.6      vaddss	xmm4, xmm4, dword ptr [r15 + 4*r8]
334.   10    43.5   0.0    59.6      vmovss	dword ptr [r15 + 4*r8], xmm4
335.   10    1.2    1.2    98.9      vaddps	xmm1, xmm2, xmm1
336.   10    1.3    1.3    97.9      vaddss	xmm0, xmm3, xmm0
337.   10    1.0    1.0    11.2      add	r8, 1
338.   10    2.0    0.0    10.2      cmp	rcx, r8
339.   10    3.0    0.0    9.2       jne	.LBB3_34
340.   10    1.0    1.0    11.2      vmovlps	qword ptr [rbx + 8], xmm1
341.   10    1.0    1.0    11.2      test	al, al
342.   10    1.0    0.0    10.2      je	.LBB3_36
343.   10    1.0    1.0    6.3       vmovss	xmm1, dword ptr [rbx + 24]
344.   10    6.0    0.0    5.4       vmovss	dword ptr [rbx + 8], xmm1
345.   10    7.0    1.0    4.5       mov	dword ptr [rbx + 16], 0
346.   10    1.0    1.0    10.5      test	dl, dl
347.   10    1.0    0.0    9.5       jne	.LBB3_39
348.   10    7.0    1.0    3.6       vmovss	dword ptr [rbx + 40], xmm0
349.   10    1.0    1.0    4.6       vcvttss2usi	eax, xmm0
350.   10    1.0    0.0    3.6       cmp	dword ptr [rdi + 16], eax
351.   10    7.0    0.0    2.7       jne	.LBB3_14
352.   10    1.0    1.0    8.7       jmp	.LBB3_40
353.   10    1.0    1.0    8.7       test	dl, dl
354.   10    2.0    0.0    7.7       je	.LBB3_37
355.   10    1.0    1.0    3.7       vmovss	xmm1, dword ptr [rbx + 28]
356.   10    6.0    0.0    2.7       vmovss	dword ptr [rbx + 12], xmm1
357.   10    7.0    1.0    1.8       mov	dword ptr [rbx + 20], 0
358.   10    8.0    1.0    0.9       vmovss	dword ptr [rbx + 40], xmm0
359.   10    1.0    1.0    1.9       vcvttss2usi	eax, xmm0
360.   10    2.0    0.0    0.9       cmp	dword ptr [rdi + 16], eax
361.   10    8.0    0.0    0.0       jne	.LBB3_14
362.   10    1.0    1.0    3.0       mov	eax, dword ptr [r14]
363.   10    5.0    0.0    2.0       test	eax, eax
364.   10    6.0    0.0    1.0       je	.LBB3_50
365.   10    7.0    1.0    0.0       mov	dword ptr [rbx + 36], eax
366.   10    8.0    1.0    0.0       mov	dword ptr [rbx + 40], 0
367.   10    1.0    1.0    7.0       jmp	.LBB3_14
368.   10    5.0    0.0    3.0       test	rax, rax
369.   10    5.0    0.0    2.0       je	.LBB3_13
370.   10    0.0    0.0    8.0       xor	eax, eax
371.   10    7.0    1.0    0.0       lock		cmpxchg	byte ptr [rcx + rdx + 8], r11b
372.   10    1.0    1.0    8.0       mov	rdi, qword ptr [rsp + 32]
373.   10    14.0   0.0    0.0       jne	.LBB3_52
374.   10    1.0    1.0    9.0       mov	rax, qword ptr [rbp]
375.   10    6.0    0.0    3.0       cmp	byte ptr [rax + 80], 1
376.   10    12.0   0.0    2.0       jne	.LBB3_55
377.   10    6.0    1.0    2.0       cmp	byte ptr [rax + 136], 1
378.   10    12.0   0.0    1.0       jne	.LBB3_56
379.   10    6.0    1.0    2.0       cmp	byte ptr [rax + 192], 1
380.   10    12.0   0.0    1.0       jne	.LBB3_57
381.   10    6.0    2.0    1.0       cmp	byte ptr [rax + 248], 0
382.   10    12.0   0.0    0.0       jne	.LBB3_53
383.   10    5.0    1.0    7.0       lea	rcx, [rax + 248]
384.   10    1.0    1.0    11.0      mov	edx, 3
385.   10    2.0    2.0    10.0      jmp	.LBB3_58
386.   10    1.0    1.0    6.0       mov	rax, qword ptr [rbx]
387.   10    2.0    2.0    5.0       mov	rcx, qword ptr [rsp + 40]
388.   10    7.0    0.0    4.0       mov	qword ptr [rcx], rax
389.   10    2.0    2.0    5.0       mov	rax, qword ptr [r13 + 15202280]
390.   10    8.0    1.0    3.0       mov	qword ptr [rbx], rax
391.   10    9.0    1.0    2.0       mov	qword ptr [r13 + 15202280], rbx
392.   10    6.0    0.0    4.0       mov	rbx, rcx
393.   10    1.0    1.0    9.0       jmp	.LBB3_13
394.   10    7.0    0.0    0.0       mov	eax, dword ptr [rbx + 36]
395.   10    4.0    4.0    3.0       mov	rcx, qword ptr [rbp + 88]
396.   10    12.0   0.0    0.0       shl	rax, 4
397.   10    13.0   0.0    0.0       mov	byte ptr [rcx + rax + 8], 0
398.   10    6.0    0.0    2.0       mov	rax, qword ptr [rbx]
399.   10    11.0   0.0    1.0       test	rax, rax
400.   10    12.0   0.0    0.0       jne	.LBB3_54
401.   10    4.0    3.0    4.0       mov	eax, dword ptr [rdi + 12]
402.   10    9.0    0.0    3.0       test	rax, rax
403.   10    10.0   0.0    2.0       je	.LBB3_80
404.   10    3.0    3.0    4.0       mov	rcx, qword ptr [rdi]
405.   10    8.0    0.0    3.0       cmp	eax, 8
406.   10    9.0    0.0    2.0       jae	.LBB3_63
407.   10    0.0    0.0    12.0      xor	edx, edx
408.   10    2.0    2.0    9.0       jmp	.LBB3_75
409.   10    9.0    1.0    2.0       lea	rdx, [rcx + 4*rax]
410.   10    8.0    1.0    2.0       lea	r8, [r12 + 4*rax]
411.   10    9.0    0.0    1.0       cmp	rcx, r8
412.   10    10.0   0.0    0.0       setb	r10b
413.   10    9.0    0.0    1.0       cmp	rdx, r12
414.   10    11.0   1.0    0.0       seta	r11b
415.   10    9.0    3.0    2.0       lea	r8, [r15 + 4*rax]
416.   10    10.0   0.0    1.0       cmp	rcx, r8
417.   10    11.0   0.0    0.0       setb	r8b
418.   10    9.0    1.0    2.0       cmp	rdx, r15
419.   10    12.0   2.0    0.0       seta	r9b
420.   10    0.0    0.0    13.0      xor	edx, edx
421.   10    11.0   0.0    1.0       test	r10b, r11b
422.   10    12.0   0.0    0.0       jne	.LBB3_75
423.   10    13.0   0.0    0.0       and	r8b, r9b
424.   10    14.0   0.0    0.0       jne	.LBB3_75
425.   10    9.0    4.0    5.0       cmp	eax, 16
426.   10    12.0   3.0    1.0       jae	.LBB3_71
427.   10    0.0    0.0    14.0      xor	edx, edx
428.   10    1.0    1.0    12.0      mov	r8, rdx
429.   10    8.0    4.0    5.0       mov	edx, eax
430.   10    9.0    0.0    4.0       and	edx, -8
431.   10    2.0    2.0    5.0       vbroadcastss	ymm0, dword ptr [rip + .LCPI3_3]
432.   10    1.0    0.0    1.0       vaddps	ymm1, ymm0, ymmword ptr [r12 + 4*r8]
433.   10    12.0   0.0    0.0       vcvttps2dq	ymm1, ymm1
434.   10    15.0   0.0    0.0       vpmovdw	xmm1, ymm1
435.   10    1.0    1.0    6.0       vaddps	ymm2, ymm0, ymmword ptr [r15 + 4*r8]
436.   10    12.0   0.0    3.0       vcvttps2dq	ymm2, ymm2
437.   10    16.0   1.0    0.0       vpmovdw	xmm2, ymm2
438.   10    20.0   0.0    0.0       vpunpcklwd	xmm3, xmm1, xmm2
439.   10    19.0   0.0    0.0       vpunpckhwd	xmm1, xmm1, xmm2
440.   10    20.0   0.0    0.0       vmovdqu	xmmword ptr [rcx + 4*r8 + 16], xmm1
441.   10    21.0   1.0    0.0       vmovdqu	xmmword ptr [rcx + 4*r8], xmm3
442.   10    6.0    6.0    15.0      add	r8, 8
443.   10    6.0    0.0    14.0      cmp	rdx, r8
444.   10    9.0    2.0    11.0      jne	.LBB3_68
445.   10    6.0    0.0    14.0      cmp	rdx, rax
446.   10    10.0   3.0    10.0      jne	.LBB3_75
447.   10    10.0   10.0   10.0      jmp	.LBB3_80
448.   10    7.0    7.0    13.0      mov	r8d, 16
449.   10    6.0    1.0    13.0      test	dl, 1
450.   10    10.0   3.0    9.0       jne	.LBB3_7
451.   10    10.0   10.0   9.0       jmp	.LBB3_8
452.   10    7.0    7.0    12.0      lea	rdx, [4*rax]
453.   10    8.0    0.0    11.0      and	rdx, -64
454.   10    0.0    0.0    20.0      xor	r8d, r8d
455.   10    6.0    6.0    5.0       vbroadcastss	zmm0, dword ptr [rip + .LCPI3_3]
456.   10    8.0    8.0    3.0       vmovdqa64	zmm1, zmmword ptr [rip + .LCPI3_4]
457.   10    9.0    2.0    0.0       vaddps	zmm2, zmm0, zmmword ptr [r12 + r8]
458.   10    19.0   0.0    0.0       vcvttps2dq	zmm2, zmm2
459.   10    23.0   0.0    0.0       vpmovdw	ymm2, zmm2
460.   10    9.0    3.0    7.0       vaddps	zmm3, zmm0, zmmword ptr [r15 + r8]
461.   10    20.0   0.0    3.0       vcvttps2dq	zmm3, zmm3
462.   10    24.0   1.0    0.0       vpmovdw	ymm3, zmm3
463.   10    28.0   0.0    0.0       vinserti64x4	zmm3, zmm3, ymm3, 1
464.   10    26.0   0.0    2.0       vinserti64x4	zmm2, zmm2, ymm2, 1
465.   10    30.0   0.0    0.0       vpermt2w	zmm2, zmm1, zmm3
466.   10    37.0   0.0    0.0       vmovdqu64	zmmword ptr [rcx + r8], zmm2
467.   10    6.0    6.0    31.0      add	r8, 64
468.   10    6.0    0.0    30.0      cmp	rdx, r8
469.   10    7.0    0.0    29.0      jne	.LBB3_72
470.   10    6.0    6.0    30.0      mov	edx, eax
471.   10    7.0    0.0    29.0      and	edx, -16
472.   10    8.0    0.0    28.0      cmp	rdx, rax
473.   10    9.0    0.0    27.0      je	.LBB3_80
474.   10    6.0    6.0    29.0      test	al, 8
475.   10    7.0    0.0    28.0      jne	.LBB3_67
476.   10    7.0    0.0    28.0      mov	r8, rdx
477.   10    8.0    0.0    27.0      not	r8
478.   10    8.0    8.0    27.0      test	al, 1
479.   10    9.0    0.0    26.0      je	.LBB3_77
480.   10    1.0    1.0    29.0      vmovss	xmm0, dword ptr [rip + .LCPI3_3]
481.   10    8.0    2.0    18.0      vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx]
482.   10    17.0   0.0    12.0      vcvttss2si	r9d, xmm1
483.   10    35.0   1.0    0.0       mov	word ptr [rcx + 4*rdx], r9w
484.   10    8.0    3.0    18.0      vaddss	xmm0, xmm0, dword ptr [r15 + 4*rdx]
485.   10    17.0   0.0    12.0      vcvttss2si	r9d, xmm0
486.   10    35.0   1.0    0.0       mov	word ptr [rcx + 4*rdx + 2], r9w
487.   10    7.0    2.0    28.0      or	rdx, 1
488.   10    6.0    0.0    28.0      add	r8, rax
489.   10    7.0    0.0    27.0      je	.LBB3_80
490.   10    7.0    7.0    27.0      add	r15, 4
491.   10    1.0    1.0    29.0      vmovss	xmm0, dword ptr [rip + .LCPI3_3]
492.   10    8.0    1.0    18.0      vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx]
493.   10    16.0   0.0    12.0      vcvttss2si	r8d, xmm1
494.   10    34.0   1.0    0.0       mov	word ptr [rcx + 4*rdx], r8w
495.   10    8.0    1.0    18.0      vaddss	xmm1, xmm0, dword ptr [r15 + 4*rdx - 4]
496.   10    16.0   0.0    12.0      vcvttss2si	r8d, xmm1
497.   10    34.0   1.0    0.0       mov	word ptr [rcx + 4*rdx + 2], r8w
498.   10    7.0    2.0    19.0      vaddss	xmm1, xmm0, dword ptr [r12 + 4*rdx + 4]
499.   10    16.0   1.0    12.0      vcvttss2si	r8d, xmm1
500.   10    34.0   1.0    0.0       mov	word ptr [rcx + 4*rdx + 4], r8w
501.   10    7.0    2.0    19.0      vaddss	xmm1, xmm0, dword ptr [r15 + 4*rdx]
502.   10    16.0   1.0    12.0      vcvttss2si	r8d, xmm1
503.   10    34.0   1.0    0.0       mov	word ptr [rcx + 4*rdx + 6], r8w
504.   10    3.0    0.0    31.0      add	rdx, 2
505.   10    4.0    0.0    30.0      cmp	rax, rdx
506.   10    5.0    0.0    29.0      jne	.LBB3_79
       10    12.8   1.1    43.3      <total>

[1] Code Region - ProcessPixel

Iterations:        100
Instructions:      17600
Total Cycles:      8898
Total uOps:        20000

Dispatch Width:    6
uOps Per Cycle:    2.25
IPC:               1.98
Block RThroughput: 59.5


Cycles with backend pressure increase [ 91.49% ]
Throughput Bottlenecks: 
  Resource Pressure       [ 65.50% ]
  - ICXPort0  [ 57.07% ]
  - ICXPort1  [ 52.57% ]
  - ICXPort2  [ 1.15% ]
  - ICXPort3  [ 1.15% ]
  - ICXPort5  [ 24.11% ]
  - ICXPort6  [ 1.65% ]
  Data Dependencies:      [ 54.46% ]
  - Register Dependencies [ 54.46% ]
  - Memory Dependencies   [ 0.00% ]

Critical sequence based on the simulation:

              Instruction                                 Dependency Information
 +----< 140.  vmulps	xmm0, xmm0, xmm0
 |
 |    < loop carried > 
 |
 +----> 0.    vmaxps	xmm0, xmm15, xmm6                 ## RESOURCE interference:  ICXPort1 [ probability: 97% ]
 |      1.    vminps	xmm0, xmm0, xmm28
 |      2.    vmulps	xmm0, xmm24, xmm0
 +----> 3.    vmaxps	xmm1, xmm4, xmm6                  ## RESOURCE interference:  ICXPort1 [ probability: 50% ]
 +----> 4.    vminps	xmm1, xmm1, xmm28                 ## REGISTER dependency:  xmm1
 +----> 5.    vmulps	xmm1, xmm25, xmm1                 ## REGISTER dependency:  xmm1
 |      6.    vaddps	xmm0, xmm0, xmm29
 +----> 7.    vaddps	xmm1, xmm1, xmm29                 ## REGISTER dependency:  xmm1
 |      8.    vcvttps2dq	xmm2, xmm0
 |      9.    vcvtdq2ps	xmm3, xmm2
 |      10.   vsubps	xmm5, xmm0, xmm3
 +----> 11.   vcvttps2dq	xmm0, xmm1                        ## REGISTER dependency:  xmm1
 +----> 12.   vcvtdq2ps	xmm3, xmm0                        ## REGISTER dependency:  xmm0
 |      13.   vsubps	xmm16, xmm1, xmm3
 +----> 14.   vpslld	xmm1, xmm2, 2                     ## RESOURCE interference:  ICXPort1 [ probability: 49% ]
 +----> 15.   vpmulld	xmm0, xmm23, xmm0                 ## RESOURCE interference:  ICXPort0 [ probability: 49% ]
 +----> 16.   vpaddd	xmm7, xmm1, xmm0                  ## REGISTER dependency:  xmm0
 +----> 17.   vpmovsxdq	ymm0, xmm7                        ## REGISTER dependency:  xmm7
 |      18.   vpaddq	ymm0, ymm27, ymm0
 |      19.   vpextrq	r8, xmm0, 1
 |      20.   vmovq	rax, xmm0
 |      21.   vextracti128	xmm0, ymm0, 1
 |      22.   vpextrq	rdx, xmm0, 1
 |      23.   vmovq	rcx, xmm0
 |      24.   vmovd	xmm0, dword ptr [rax + 4]
 |      25.   vpinsrd	xmm0, xmm0, dword ptr [r8 + 4], 1
 |      26.   vpinsrd	xmm0, xmm0, dword ptr [rcx + 4], 2
 |      27.   vpinsrd	xmm0, xmm0, dword ptr [rdx + 4], 3
 |      28.   kxnorw	k3, k0, k0
 |      29.   vmovd	xmm1, dword ptr [rax + r12]
 |      30.   vpinsrd	xmm1, xmm1, dword ptr [r8 + r12], 1
 |      31.   vpinsrd	xmm1, xmm1, dword ptr [rcx + r12], 2
 |      32.   vpinsrd	xmm1, xmm1, dword ptr [rdx + r12], 3
 |      33.   vxorps	xmm3, xmm3, xmm3
 |      34.   vmovd	xmm2, dword ptr [rax + r12 + 4]
 |      35.   vpinsrd	xmm2, xmm2, dword ptr [r8 + r12 + 4], 1
 |      36.   vpinsrd	xmm2, xmm2, dword ptr [rcx + r12 + 4], 2
 |      37.   vpinsrd	xmm2, xmm2, dword ptr [rdx + r12 + 4], 3
 +----> 38.   vpgatherdd	xmm3 {k3}, xmmword ptr [rsi + xmm7] ## RESOURCE interference:  ICXPort5 [ probability: 98% ]
 +----> 39.   vpandq	xmm7, xmm3, xmm30                 ## REGISTER dependency:  xmm3
 +----> 40.   vpmullw	xmm7, xmm7, xmm7                  ## REGISTER dependency:  xmm7
 +----> 41.   vpsrld	xmm26, xmm7, 16                   ## REGISTER dependency:  xmm7
 +----> 42.   vcvtdq2ps	xmm26, xmm26                      ## REGISTER dependency:  xmm26
 |      43.   vsubps	xmm8, xmm28, xmm5
 |      44.   vsubps	xmm17, xmm28, xmm16
 |      45.   vmulps	xmm18, xmm17, xmm8
 |      46.   vmulps	xmm17, xmm5, xmm17
 |      47.   vmulps	xmm8, xmm16, xmm8
 |      48.   vmulps	xmm5, xmm16, xmm5
 +----> 49.   vmulps	xmm16, xmm18, xmm26               ## REGISTER dependency:  xmm26
 |      50.   vmulps	xmm19, xmm17, xmm26
 |      51.   vaddps	xmm16, xmm16, xmm19
 +----> 52.   vmulps	xmm19, xmm8, xmm26                ## RESOURCE interference:  ICXPort1 [ probability: 99% ]
 |      53.   vaddps	xmm16, xmm19, xmm16
 |      54.   vpsrlw	xmm19, xmm3, 8
 |      55.   vpmullw	xmm10, xmm19, xmm19
 +----> 56.   vmulps	xmm19, xmm5, xmm26                ## RESOURCE interference:  ICXPort1 [ probability: 99% ]
 |      57.   vaddps	xmm16, xmm19, xmm16
 |      58.   vpsrlw	xmm19, xmm0, 8
 |      59.   vpmullw	xmm11, xmm19, xmm19
 |      60.   vpblendw	xmm10, xmm10, xmm6, 170
 |      61.   vcvtdq2ps	xmm19, xmm10
 |      62.   vpblendw	xmm10, xmm11, xmm6, 170
 |      63.   vcvtdq2ps	xmm26, xmm10
 +----> 64.   vmulps	xmm19, xmm18, xmm19               ## RESOURCE interference:  ICXPort0 [ probability: 99% ]
 |      65.   vmulps	xmm26, xmm17, xmm26
 |      66.   vaddps	xmm19, xmm19, xmm26
 |      67.   vpsrlw	xmm26, xmm1, 8
 |      68.   vpmullw	xmm10, xmm26, xmm26
 |      69.   vpblendw	xmm10, xmm10, xmm6, 170
 +----> 70.   vcvtdq2ps	xmm26, xmm10                      ## RESOURCE interference:  ICXPort0 [ probability: 1% ]
 +----> 71.   vmulps	xmm26, xmm8, xmm26                ## REGISTER dependency:  xmm26
 |      72.   vaddps	xmm19, xmm19, xmm26
 |      73.   vpsrlw	xmm26, xmm2, 8
 |      74.   vpmullw	xmm10, xmm26, xmm26
 |      75.   vpblendw	xmm10, xmm10, xmm6, 170
 +----> 76.   vcvtdq2ps	xmm26, xmm10                      ## RESOURCE interference:  ICXPort1 [ probability: 49% ]
 |      77.   vmulps	xmm26, xmm5, xmm26
 |      78.   vaddps	xmm19, xmm19, xmm26
 |      79.   vpandq	xmm26, xmm0, xmm30
 |      80.   vpmullw	xmm10, xmm26, xmm26
 |      81.   vpblendw	xmm7, xmm7, xmm6, 170
 |      82.   vcvtdq2ps	xmm26, xmm7
 |      83.   vpblendw	xmm7, xmm10, xmm6, 170
 +----> 84.   vcvtdq2ps	xmm7, xmm7                        ## RESOURCE interference:  ICXPort0 [ probability: 98% ]
 +----> 85.   vmulps	xmm26, xmm18, xmm26               ## RESOURCE interference:  ICXPort0 [ probability: 99% ]
 |      86.   vmulps	xmm7, xmm17, xmm7
 |      87.   vaddps	xmm26, xmm26, xmm7
 |      88.   vpandq	xmm7, xmm1, xmm30
 |      89.   vpmullw	xmm7, xmm7, xmm7
 |      90.   vpblendw	xmm7, xmm7, xmm6, 170
 +----> 91.   vcvtdq2ps	xmm7, xmm7                        ## RESOURCE interference:  ICXPort1 [ probability: 98% ]
 |      92.   vmulps	xmm7, xmm8, xmm7
 |      93.   vaddps	xmm26, xmm26, xmm7
 |      94.   vpandq	xmm7, xmm2, xmm30
 |      95.   vpmullw	xmm7, xmm7, xmm7
 |      96.   vpblendw	xmm7, xmm7, xmm6, 170
 +----> 97.   vcvtdq2ps	xmm7, xmm7                        ## RESOURCE interference:  ICXPort0 [ probability: 98% ]
 +----> 98.   vmulps	xmm7, xmm5, xmm7                  ## REGISTER dependency:  xmm7
 |      99.   vaddps	xmm26, xmm26, xmm7
 |      100.  vpsrld	xmm3, xmm3, 24
 |      101.  vcvtdq2ps	xmm3, xmm3
 |      102.  vmulps	xmm3, xmm18, xmm3
 |      103.  vpsrld	xmm0, xmm0, 24
 |      104.  vcvtdq2ps	xmm0, xmm0
 |      105.  vmulps	xmm0, xmm17, xmm0
 |      106.  vaddps	xmm0, xmm3, xmm0
 +----> 107.  vpsrld	xmm1, xmm1, 24                    ## RESOURCE interference:  ICXPort0 [ probability: 98% ]
 +----> 108.  vcvtdq2ps	xmm1, xmm1                        ## REGISTER dependency:  xmm1
 |      109.  vmulps	xmm1, xmm8, xmm1
 |      110.  vaddps	xmm0, xmm0, xmm1
 |      111.  vmovdqu64	xmm17, xmmword ptr [r13]
 +----> 112.  vpsrld	xmm1, xmm2, 24                    ## RESOURCE interference:  ICXPort0 [ probability: 50% ]
 +----> 113.  vcvtdq2ps	xmm1, xmm1                        ## REGISTER dependency:  xmm1
 |      114.  vmulps	xmm1, xmm5, xmm1
 |      115.  vpshufb	xmm2, xmm17, xmmword ptr [rip + .LCPI9_9]
 +----> 116.  vcvtdq2ps	xmm2, xmm2                        ## RESOURCE interference:  ICXPort1 [ probability: 50% ]
 +----> 117.  vmulps	xmm3, xmm16, xmmword ptr [rsp + 144] ## RESOURCE interference:  ICXPort0 [ probability: 50% ]
 |      118.  vaddps	xmm0, xmm0, xmm1
 |      119.  vmulps	xmm5, xmm0, xmmword ptr [rsp + 96]
 |      120.  vmaxps	xmm0, xmm3, xmm6
 |      121.  vminps	xmm0, xmm0, xmm9
 |      122.  vmulps	xmm1, xmm2, xmm2
 |      123.  vmulps	xmm2, xmm5, xmm20
 |      124.  vaddps	xmm16, xmm2, xmm28
 |      125.  vmulps	xmm1, xmm1, xmm16
 |      126.  vaddps	xmm1, xmm0, xmm1
 |      127.  vpshufb	xmm0, xmm17, xmmword ptr [rip + .LCPI9_8]
 +----> 128.  vcvtdq2ps	xmm0, xmm0                        ## RESOURCE interference:  ICXPort0 [ probability: 49% ]
 +----> 129.  vmulps	xmm2, xmm19, xmmword ptr [rsp + 128] ## RESOURCE interference:  ICXPort1 [ probability: 49% ]
 |      130.  vmaxps	xmm2, xmm2, xmm6
 |      131.  vminps	xmm2, xmm2, xmm9
 |      132.  vmulps	xmm0, xmm0, xmm0
 |      133.  vmulps	xmm0, xmm0, xmm16
 |      134.  vaddps	xmm2, xmm0, xmm2
 |      135.  vpandd	xmm0, xmm17, xmm31
 +----> 136.  vcvtdq2ps	xmm0, xmm0                        ## RESOURCE interference:  ICXPort0 [ probability: 49% ]
 +----> 137.  vmulps	xmm3, xmm26, xmmword ptr [rsp + 112] ## RESOURCE interference:  ICXPort0 [ probability: 49% ]
 |      138.  vmaxps	xmm3, xmm3, xmm6
 |      139.  vminps	xmm3, xmm3, xmm9
 |      140.  vmulps	xmm0, xmm0, xmm0
 |      141.  vmulps	xmm0, xmm0, xmm16
 |      142.  vaddps	xmm3, xmm0, xmm3
 |      143.  vmovaps	xmm0, xmm1
 |      144.  rsqrtps	xmm0, xmm0
 |      145.  vmulps	xmm1, xmm0, xmm1
 |      146.  vmovaps	xmm0, xmm2
 |      147.  rsqrtps	xmm0, xmm0
 |      148.  vmulps	xmm2, xmm0, xmm2
 |      149.  vmovaps	xmm0, xmm3
 |      150.  rsqrtps	xmm0, xmm0
 |      151.  vmulps	xmm3, xmm0, xmm3
 |      152.  vmovaps	xmm0, xmm1
 |      153.  cvtps2dq	xmm0, xmm0
 |      154.  vmovdqa	xmm1, xmm0
 |      155.  vmovaps	xmm0, xmm2
 |      156.  cvtps2dq	xmm0, xmm0
 |      157.  vmovdqa	xmm2, xmm0
 |      158.  vmovaps	xmm0, xmm3
 |      159.  cvtps2dq	xmm0, xmm0
 |      160.  vpslld	xmm1, xmm1, 16
 |      161.  vpslld	xmm2, xmm2, 8
 |      162.  vpternlogd	xmm2, xmm0, xmm1, 254
 |      163.  vcmpleps	k2 {k2}, xmm15, xmm28
 |      164.  vcmpleps	k2 {k2}, xmm6, xmm15
 |      165.  vcmpleps	k2 {k2}, xmm6, xmm4
 |      166.  vcmpleps	k2 {k2}, xmm4, xmm28
 +----> 167.  vpsrld	xmm0, xmm17, 24                   ## RESOURCE interference:  ICXPort0 [ probability: 99% ]
 +----> 168.  vcvtdq2ps	xmm0, xmm0                        ## REGISTER dependency:  xmm0
 +----> 169.  vmulps	xmm0, xmm16, xmm0                 ## REGISTER dependency:  xmm0
 +----> 170.  vaddps	xmm0, xmm5, xmm0                  ## REGISTER dependency:  xmm0
 +----> 171.  cvtps2dq	xmm0, xmm0                        ## REGISTER dependency:  xmm0
 +----> 172.  vpslld	xmm0, xmm0, 24                    ## REGISTER dependency:  xmm0
 +----> 173.  vpord	xmm17 {k2}, xmm2, xmm0            ## REGISTER dependency:  xmm0
 +----> 174.  vmovdqa64	xmmword ptr [r13], xmm17          ## REGISTER dependency:  xmm17
        175.  kxnorw	k2, k0, k0


Instruction Info:
[1]: #uOps
[2]: Latency
[3]: RThroughput
[4]: MayLoad
[5]: MayStore
[6]: HasSideEffects (U)

[1]    [2]    [3]    [4]    [5]    [6]    Instructions:
 1      4     0.50                        vmaxps	xmm0, xmm15, xmm6
 1      4     0.50                        vminps	xmm0, xmm0, xmm28
 1      4     0.50                        vmulps	xmm0, xmm24, xmm0
 1      4     0.50                        vmaxps	xmm1, xmm4, xmm6
 1      4     0.50                        vminps	xmm1, xmm1, xmm28
 1      4     0.50                        vmulps	xmm1, xmm25, xmm1
 1      4     0.50                        vaddps	xmm0, xmm0, xmm29
 1      4     0.50                        vaddps	xmm1, xmm1, xmm29
 1      4     0.50                        vcvttps2dq	xmm2, xmm0
 1      4     0.50                        vcvtdq2ps	xmm3, xmm2
 1      4     0.50                        vsubps	xmm5, xmm0, xmm3
 1      4     0.50                        vcvttps2dq	xmm0, xmm1
 1      4     0.50                        vcvtdq2ps	xmm3, xmm0
 1      4     0.50                        vsubps	xmm16, xmm1, xmm3
 1      1     0.50                        vpslld	xmm1, xmm2, 2
 2      10    1.00                        vpmulld	xmm0, xmm23, xmm0
 1      1     0.33                        vpaddd	xmm7, xmm1, xmm0
 1      3     1.00                        vpmovsxdq	ymm0, xmm7
 1      1     0.33                        vpaddq	ymm0, ymm27, ymm0
 2      3     1.00                        vpextrq	r8, xmm0, 1
 1      2     1.00                        vmovq	rax, xmm0
 1      3     1.00                        vextracti128	xmm0, ymm0, 1
 2      3     1.00                        vpextrq	rdx, xmm0, 1
 1      2     1.00                        vmovq	rcx, xmm0
 1      5     0.50    *                   vmovd	xmm0, dword ptr [rax + 4]
 2      6     1.00    *                   vpinsrd	xmm0, xmm0, dword ptr [r8 + 4], 1
 2      6     1.00    *                   vpinsrd	xmm0, xmm0, dword ptr [rcx + 4], 2
 2      6     1.00    *                   vpinsrd	xmm0, xmm0, dword ptr [rdx + 4], 3
 1      1     1.00                        kxnorw	k3, k0, k0
 1      5     0.50    *                   vmovd	xmm1, dword ptr [rax + r12]
 2      6     1.00    *                   vpinsrd	xmm1, xmm1, dword ptr [r8 + r12], 1
 2      6     1.00    *                   vpinsrd	xmm1, xmm1, dword ptr [rcx + r12], 2
 2      6     1.00    *                   vpinsrd	xmm1, xmm1, dword ptr [rdx + r12], 3
 1      0     0.17                        vxorps	xmm3, xmm3, xmm3
 1      5     0.50    *                   vmovd	xmm2, dword ptr [rax + r12 + 4]
 2      6     1.00    *                   vpinsrd	xmm2, xmm2, dword ptr [r8 + r12 + 4], 1
 2      6     1.00    *                   vpinsrd	xmm2, xmm2, dword ptr [rcx + r12 + 4], 2
 2      6     1.00    *                   vpinsrd	xmm2, xmm2, dword ptr [rdx + r12 + 4], 3
 5      19    2.00    *                   vpgatherdd	xmm3 {k3}, xmmword ptr [rsi + xmm7]
 1      1     0.33                        vpandq	xmm7, xmm3, xmm30
 1      5     0.50                        vpmullw	xmm7, xmm7, xmm7
 1      1     0.50                        vpsrld	xmm26, xmm7, 16
 1      4     0.50                        vcvtdq2ps	xmm26, xmm26
 1      4     0.50                        vsubps	xmm8, xmm28, xmm5
 1      4     0.50                        vsubps	xmm17, xmm28, xmm16
 1      4     0.50                        vmulps	xmm18, xmm17, xmm8
 1      4     0.50                        vmulps	xmm17, xmm5, xmm17
 1      4     0.50                        vmulps	xmm8, xmm16, xmm8
 1      4     0.50                        vmulps	xmm5, xmm16, xmm5
 1      4     0.50                        vmulps	xmm16, xmm18, xmm26
 1      4     0.50                        vmulps	xmm19, xmm17, xmm26
 1      4     0.50                        vaddps	xmm16, xmm16, xmm19
 1      4     0.50                        vmulps	xmm19, xmm8, xmm26
 1      4     0.50                        vaddps	xmm16, xmm19, xmm16
 1      1     0.50                        vpsrlw	xmm19, xmm3, 8
 1      5     0.50                        vpmullw	xmm10, xmm19, xmm19
 1      4     0.50                        vmulps	xmm19, xmm5, xmm26
 1      4     0.50                        vaddps	xmm16, xmm19, xmm16
 1      1     0.50                        vpsrlw	xmm19, xmm0, 8
 1      5     0.50                        vpmullw	xmm11, xmm19, xmm19
 1      1     1.00                        vpblendw	xmm10, xmm10, xmm6, 170
 1      4     0.50                        vcvtdq2ps	xmm19, xmm10
 1      1     1.00                        vpblendw	xmm10, xmm11, xmm6, 170
 1      4     0.50                        vcvtdq2ps	xmm26, xmm10
 1      4     0.50                        vmulps	xmm19, xmm18, xmm19
 1      4     0.50                        vmulps	xmm26, xmm17, xmm26
 1      4     0.50                        vaddps	xmm19, xmm19, xmm26
 1      1     0.50                        vpsrlw	xmm26, xmm1, 8
 1      5     0.50                        vpmullw	xmm10, xmm26, xmm26
 1      1     1.00                        vpblendw	xmm10, xmm10, xmm6, 170
 1      4     0.50                        vcvtdq2ps	xmm26, xmm10
 1      4     0.50                        vmulps	xmm26, xmm8, xmm26
 1      4     0.50                        vaddps	xmm19, xmm19, xmm26
 1      1     0.50                        vpsrlw	xmm26, xmm2, 8
 1      5     0.50                        vpmullw	xmm10, xmm26, xmm26
 1      1     1.00                        vpblendw	xmm10, xmm10, xmm6, 170
 1      4     0.50                        vcvtdq2ps	xmm26, xmm10
 1      4     0.50                        vmulps	xmm26, xmm5, xmm26
 1      4     0.50                        vaddps	xmm19, xmm19, xmm26
 1      1     0.33                        vpandq	xmm26, xmm0, xmm30
 1      5     0.50                        vpmullw	xmm10, xmm26, xmm26
 1      1     1.00                        vpblendw	xmm7, xmm7, xmm6, 170
 1      4     0.50                        vcvtdq2ps	xmm26, xmm7
 1      1     1.00                        vpblendw	xmm7, xmm10, xmm6, 170
 1      4     0.50                        vcvtdq2ps	xmm7, xmm7
 1      4     0.50                        vmulps	xmm26, xmm18, xmm26
 1      4     0.50                        vmulps	xmm7, xmm17, xmm7
 1      4     0.50                        vaddps	xmm26, xmm26, xmm7
 1      1     0.33                        vpandq	xmm7, xmm1, xmm30
 1      5     0.50                        vpmullw	xmm7, xmm7, xmm7
 1      1     1.00                        vpblendw	xmm7, xmm7, xmm6, 170
 1      4     0.50                        vcvtdq2ps	xmm7, xmm7
 1      4     0.50                        vmulps	xmm7, xmm8, xmm7
 1      4     0.50                        vaddps	xmm26, xmm26, xmm7
 1      1     0.33                        vpandq	xmm7, xmm2, xmm30
 1      5     0.50                        vpmullw	xmm7, xmm7, xmm7
 1      1     1.00                        vpblendw	xmm7, xmm7, xmm6, 170
 1      4     0.50                        vcvtdq2ps	xmm7, xmm7
 1      4     0.50                        vmulps	xmm7, xmm5, xmm7
 1      4     0.50                        vaddps	xmm26, xmm26, xmm7
 1      1     0.50                        vpsrld	xmm3, xmm3, 24
 1      4     0.50                        vcvtdq2ps	xmm3, xmm3
 1      4     0.50                        vmulps	xmm3, xmm18, xmm3
 1      1     0.50                        vpsrld	xmm0, xmm0, 24
 1      4     0.50                        vcvtdq2ps	xmm0, xmm0
 1      4     0.50                        vmulps	xmm0, xmm17, xmm0
 1      4     0.50                        vaddps	xmm0, xmm3, xmm0
 1      1     0.50                        vpsrld	xmm1, xmm1, 24
 1      4     0.50                        vcvtdq2ps	xmm1, xmm1
 1      4     0.50                        vmulps	xmm1, xmm8, xmm1
 1      4     0.50                        vaddps	xmm0, xmm0, xmm1
 2      7     0.50    *                   vmovdqu64	xmm17, xmmword ptr [r13]
 1      1     0.50                        vpsrld	xmm1, xmm2, 24
 1      4     0.50                        vcvtdq2ps	xmm1, xmm1
 1      4     0.50                        vmulps	xmm1, xmm5, xmm1
 2      7     0.50    *                   vpshufb	xmm2, xmm17, xmmword ptr [rip + .LCPI9_9]
 1      4     0.50                        vcvtdq2ps	xmm2, xmm2
 2      10    0.50    *                   vmulps	xmm3, xmm16, xmmword ptr [rsp + 144]
 1      4     0.50                        vaddps	xmm0, xmm0, xmm1
 2      10    0.50    *                   vmulps	xmm5, xmm0, xmmword ptr [rsp + 96]
 1      4     0.50                        vmaxps	xmm0, xmm3, xmm6
 1      4     0.50                        vminps	xmm0, xmm0, xmm9
 1      4     0.50                        vmulps	xmm1, xmm2, xmm2
 1      4     0.50                        vmulps	xmm2, xmm5, xmm20
 1      4     0.50                        vaddps	xmm16, xmm2, xmm28
 1      4     0.50                        vmulps	xmm1, xmm1, xmm16
 1      4     0.50                        vaddps	xmm1, xmm0, xmm1
 2      7     0.50    *                   vpshufb	xmm0, xmm17, xmmword ptr [rip + .LCPI9_8]
 1      4     0.50                        vcvtdq2ps	xmm0, xmm0
 2      10    0.50    *                   vmulps	xmm2, xmm19, xmmword ptr [rsp + 128]
 1      4     0.50                        vmaxps	xmm2, xmm2, xmm6
 1      4     0.50                        vminps	xmm2, xmm2, xmm9
 1      4     0.50                        vmulps	xmm0, xmm0, xmm0
 1      4     0.50                        vmulps	xmm0, xmm0, xmm16
 1      4     0.50                        vaddps	xmm2, xmm0, xmm2
 1      1     0.33                        vpandd	xmm0, xmm17, xmm31
 1      4     0.50                        vcvtdq2ps	xmm0, xmm0
 2      10    0.50    *                   vmulps	xmm3, xmm26, xmmword ptr [rsp + 112]
 1      4     0.50                        vmaxps	xmm3, xmm3, xmm6
 1      4     0.50                        vminps	xmm3, xmm3, xmm9
 1      4     0.50                        vmulps	xmm0, xmm0, xmm0
 1      4     0.50                        vmulps	xmm0, xmm0, xmm16
 1      4     0.50                        vaddps	xmm3, xmm0, xmm3
 1      1     0.33                        vmovaps	xmm0, xmm1
 1      4     1.00                        rsqrtps	xmm0, xmm0
 1      4     0.50                        vmulps	xmm1, xmm0, xmm1
 1      1     0.33                        vmovaps	xmm0, xmm2
 1      4     1.00                        rsqrtps	xmm0, xmm0
 1      4     0.50                        vmulps	xmm2, xmm0, xmm2
 1      1     0.33                        vmovaps	xmm0, xmm3
 1      4     1.00                        rsqrtps	xmm0, xmm0
 1      4     0.50                        vmulps	xmm3, xmm0, xmm3
 1      1     0.33                        vmovaps	xmm0, xmm1
 1      4     0.50                        cvtps2dq	xmm0, xmm0
 1      1     0.33                        vmovdqa	xmm1, xmm0
 1      1     0.33                        vmovaps	xmm0, xmm2
 1      4     0.50                        cvtps2dq	xmm0, xmm0
 1      1     0.33                        vmovdqa	xmm2, xmm0
 1      1     0.33                        vmovaps	xmm0, xmm3
 1      4     0.50                        cvtps2dq	xmm0, xmm0
 1      1     0.50                        vpslld	xmm1, xmm1, 16
 1      1     0.50                        vpslld	xmm2, xmm2, 8
 1      1     0.33                        vpternlogd	xmm2, xmm0, xmm1, 254
 1      4     1.00                        vcmpleps	k2 {k2}, xmm15, xmm28
 1      4     1.00                        vcmpleps	k2 {k2}, xmm6, xmm15
 1      4     1.00                        vcmpleps	k2 {k2}, xmm6, xmm4
 1      4     1.00                        vcmpleps	k2 {k2}, xmm4, xmm28
 1      1     0.50                        vpsrld	xmm0, xmm17, 24
 1      4     0.50                        vcvtdq2ps	xmm0, xmm0
 1      4     0.50                        vmulps	xmm0, xmm16, xmm0
 1      4     0.50                        vaddps	xmm0, xmm5, xmm0
 1      4     0.50                        cvtps2dq	xmm0, xmm0
 1      1     0.50                        vpslld	xmm0, xmm0, 24
 1      1     0.33                        vpord	xmm17 {k2}, xmm2, xmm0
 2      1     1.00           *            vmovdqa64	xmmword ptr [r13], xmm17
 1      1     1.00                        kxnorw	k2, k0, k0


Dynamic Dispatch Stall Cycles:
RAT     - Register unavailable:                      0
RCU     - Retire tokens unavailable:                 0
SCHEDQ  - Scheduler full:                            8725  (98.1%)
LQ      - Load queue full:                           0
SQ      - Store queue full:                          0
GROUP   - Static restrictions on the dispatch group: 0
USH     - Uncategorised Structural Hazard:           0


Dispatch Logic - number of cycles where we saw N micro opcodes dispatched:
[# dispatched], [# cycles]
 0,              522  (5.9%)
 1,              1098  (12.3%)
 2,              4222  (47.4%)
 3,              1992  (22.4%)
 4,              853  (9.6%)
 5,              196  (2.2%)
 6,              15  (0.2%)


Schedulers - number of cycles where we saw N micro opcodes issued:
[# issued], [# cycles]
 0,          494  (5.6%)
 1,          1202  (13.5%)
 2,          3758  (42.2%)
 3,          2695  (30.3%)
 4,          648  (7.3%)
 5,          1  (0.0%)
 6,          100  (1.1%)

Scheduler's queue usage:
[1] Resource name.
[2] Average number of used buffer entries.
[3] Maximum number of used buffer entries.
[4] Total number of buffer entries.

 [1]            [2]        [3]        [4]
ICXPortAny       59         60         60


Retire Control Unit - number of cycles where we saw N instructions retired:
[# retired], [# cycles]
 0,           5185  (58.3%)
 1,           1508  (16.9%)
 2,           308  (3.5%)
 3,           449  (5.0%)
 4,           451  (5.1%)
 5,           2  (0.0%)
 6,           99  (1.1%)
 7,           149  (1.7%)
 8,           148  (1.7%)
 10,          98  (1.1%)
 11,          199  (2.2%)
 15,          99  (1.1%)
 16,          2  (0.0%)
 18,          1  (0.0%)
 21,          101  (1.1%)
 23,          1  (0.0%)
 27,          98  (1.1%)

Total ROB Entries:                224
Max Used ROB Entries:             131  ( 58.5% )
Average Used ROB Entries per cy:  107  ( 47.8% )


Register File statistics:
Total number of mappings created:    17500
Max number of mappings used:         122


Resources:
[0]   - ICXDivider
[1]   - ICXFPDivider
[2]   - ICXPort0
[3]   - ICXPort1
[4]   - ICXPort2
[5]   - ICXPort3
[6]   - ICXPort4
[7]   - ICXPort5
[8]   - ICXPort6
[9]   - ICXPort7
[10]  - ICXPort8
[11]  - ICXPort9


Resource pressure per iteration:
[0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]   
 -      -     68.02  67.95  10.00  13.00  1.00   39.03  1.00   1.00    -      -     

Resource pressure by instruction:
[0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]   Instructions:
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     vmaxps	xmm0, xmm15, xmm6
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vminps	xmm0, xmm0, xmm28
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     vmulps	xmm0, xmm24, xmm0
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vmaxps	xmm1, xmm4, xmm6
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vminps	xmm1, xmm1, xmm28
 -      -     0.03   0.97    -      -      -      -      -      -      -      -     vmulps	xmm1, xmm25, xmm1
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     vaddps	xmm0, xmm0, xmm29
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vaddps	xmm1, xmm1, xmm29
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vcvttps2dq	xmm2, xmm0
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm3, xmm2
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vsubps	xmm5, xmm0, xmm3
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vcvttps2dq	xmm0, xmm1
 -      -     0.02   0.98    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm3, xmm0
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vsubps	xmm16, xmm1, xmm3
 -      -     0.98   0.02    -      -      -      -      -      -      -      -     vpslld	xmm1, xmm2, 2
 -      -     1.00   1.00    -      -      -      -      -      -      -      -     vpmulld	xmm0, xmm23, xmm0
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpaddd	xmm7, xmm1, xmm0
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpmovsxdq	ymm0, xmm7
 -      -     0.50   0.49    -      -      -     0.01    -      -      -      -     vpaddq	ymm0, ymm27, ymm0
 -      -     1.00    -      -      -      -     1.00    -      -      -      -     vpextrq	r8, xmm0, 1
 -      -     1.00    -      -      -      -      -      -      -      -      -     vmovq	rax, xmm0
 -      -      -      -      -      -      -     1.00    -      -      -      -     vextracti128	xmm0, ymm0, 1
 -      -     1.00    -      -      -      -     1.00    -      -      -      -     vpextrq	rdx, xmm0, 1
 -      -     1.00    -      -      -      -      -      -      -      -      -     vmovq	rcx, xmm0
 -      -      -      -     1.00    -      -      -      -      -      -      -     vmovd	xmm0, dword ptr [rax + 4]
 -      -      -      -      -     1.00    -     1.00    -      -      -      -     vpinsrd	xmm0, xmm0, dword ptr [r8 + 4], 1
 -      -      -      -     1.00    -      -     1.00    -      -      -      -     vpinsrd	xmm0, xmm0, dword ptr [rcx + 4], 2
 -      -      -      -      -     1.00    -     1.00    -      -      -      -     vpinsrd	xmm0, xmm0, dword ptr [rdx + 4], 3
 -      -     1.00    -      -      -      -      -      -      -      -      -     kxnorw	k3, k0, k0
 -      -      -      -     0.02   0.98    -      -      -      -      -      -     vmovd	xmm1, dword ptr [rax + r12]
 -      -      -      -     0.99   0.01    -     1.00    -      -      -      -     vpinsrd	xmm1, xmm1, dword ptr [r8 + r12], 1
 -      -      -      -     0.51   0.49    -     1.00    -      -      -      -     vpinsrd	xmm1, xmm1, dword ptr [rcx + r12], 2
 -      -      -      -     0.49   0.51    -     1.00    -      -      -      -     vpinsrd	xmm1, xmm1, dword ptr [rdx + r12], 3
 -      -      -      -      -      -      -      -      -      -      -      -     vxorps	xmm3, xmm3, xmm3
 -      -      -      -     0.99   0.01    -      -      -      -      -      -     vmovd	xmm2, dword ptr [rax + r12 + 4]
 -      -      -      -      -     1.00    -     1.00    -      -      -      -     vpinsrd	xmm2, xmm2, dword ptr [r8 + r12 + 4], 1
 -      -      -      -     1.00    -      -     1.00    -      -      -      -     vpinsrd	xmm2, xmm2, dword ptr [rcx + r12 + 4], 2
 -      -      -      -      -     1.00    -     1.00    -      -      -      -     vpinsrd	xmm2, xmm2, dword ptr [rdx + r12 + 4], 3
 -      -     1.00   0.02    -     4.00    -     0.98   1.00    -      -      -     vpgatherdd	xmm3 {k3}, xmmword ptr [rsi + xmm7]
 -      -      -     0.99    -      -      -     0.01    -      -      -      -     vpandq	xmm7, xmm3, xmm30
 -      -      -     1.00    -      -      -      -      -      -      -      -     vpmullw	xmm7, xmm7, xmm7
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vpsrld	xmm26, xmm7, 16
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm26, xmm26
 -      -      -     1.00    -      -      -      -      -      -      -      -     vsubps	xmm8, xmm28, xmm5
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vsubps	xmm17, xmm28, xmm16
 -      -     0.02   0.98    -      -      -      -      -      -      -      -     vmulps	xmm18, xmm17, xmm8
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vmulps	xmm17, xmm5, xmm17
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vmulps	xmm8, xmm16, xmm8
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vmulps	xmm5, xmm16, xmm5
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vmulps	xmm16, xmm18, xmm26
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vmulps	xmm19, xmm17, xmm26
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vaddps	xmm16, xmm16, xmm19
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vmulps	xmm19, xmm8, xmm26
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vaddps	xmm16, xmm19, xmm16
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vpsrlw	xmm19, xmm3, 8
 -      -     1.00    -      -      -      -      -      -      -      -      -     vpmullw	xmm10, xmm19, xmm19
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vmulps	xmm19, xmm5, xmm26
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vaddps	xmm16, xmm19, xmm16
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vpsrlw	xmm19, xmm0, 8
 -      -     0.02   0.98    -      -      -      -      -      -      -      -     vpmullw	xmm11, xmm19, xmm19
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpblendw	xmm10, xmm10, xmm6, 170
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm19, xmm10
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpblendw	xmm10, xmm11, xmm6, 170
 -      -     0.02   0.98    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm26, xmm10
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vmulps	xmm19, xmm18, xmm19
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vmulps	xmm26, xmm17, xmm26
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vaddps	xmm19, xmm19, xmm26
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vpsrlw	xmm26, xmm1, 8
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     vpmullw	xmm10, xmm26, xmm26
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpblendw	xmm10, xmm10, xmm6, 170
 -      -      -     1.00    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm26, xmm10
 -      -     0.02   0.98    -      -      -      -      -      -      -      -     vmulps	xmm26, xmm8, xmm26
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vaddps	xmm19, xmm19, xmm26
 -      -     0.51   0.49    -      -      -      -      -      -      -      -     vpsrlw	xmm26, xmm2, 8
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vpmullw	xmm10, xmm26, xmm26
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpblendw	xmm10, xmm10, xmm6, 170
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm26, xmm10
 -      -      -     1.00    -      -      -      -      -      -      -      -     vmulps	xmm26, xmm5, xmm26
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vaddps	xmm19, xmm19, xmm26
 -      -     0.01    -      -      -      -     0.99    -      -      -      -     vpandq	xmm26, xmm0, xmm30
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vpmullw	xmm10, xmm26, xmm26
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpblendw	xmm7, xmm7, xmm6, 170
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm26, xmm7
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpblendw	xmm7, xmm10, xmm6, 170
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm7, xmm7
 -      -     0.02   0.98    -      -      -      -      -      -      -      -     vmulps	xmm26, xmm18, xmm26
 -      -     0.98   0.02    -      -      -      -      -      -      -      -     vmulps	xmm7, xmm17, xmm7
 -      -     0.98   0.02    -      -      -      -      -      -      -      -     vaddps	xmm26, xmm26, xmm7
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpandq	xmm7, xmm1, xmm30
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vpmullw	xmm7, xmm7, xmm7
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpblendw	xmm7, xmm7, xmm6, 170
 -      -     0.98   0.02    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm7, xmm7
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vmulps	xmm7, xmm8, xmm7
 -      -      -     1.00    -      -      -      -      -      -      -      -     vaddps	xmm26, xmm26, xmm7
 -      -     0.49    -      -      -      -     0.51    -      -      -      -     vpandq	xmm7, xmm2, xmm30
 -      -     0.98   0.02    -      -      -      -      -      -      -      -     vpmullw	xmm7, xmm7, xmm7
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpblendw	xmm7, xmm7, xmm6, 170
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm7, xmm7
 -      -     1.00    -      -      -      -      -      -      -      -      -     vmulps	xmm7, xmm5, xmm7
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vaddps	xmm26, xmm26, xmm7
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vpsrld	xmm3, xmm3, 24
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm3, xmm3
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vmulps	xmm3, xmm18, xmm3
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vpsrld	xmm0, xmm0, 24
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm0, xmm0
 -      -     0.02   0.98    -      -      -      -      -      -      -      -     vmulps	xmm0, xmm17, xmm0
 -      -     0.02   0.98    -      -      -      -      -      -      -      -     vaddps	xmm0, xmm3, xmm0
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vpsrld	xmm1, xmm1, 24
 -      -     1.00    -      -      -      -      -      -      -      -      -     vcvtdq2ps	xmm1, xmm1
 -      -     1.00    -      -      -      -      -      -      -      -      -     vmulps	xmm1, xmm8, xmm1
 -      -     0.02   0.98    -      -      -      -      -      -      -      -     vaddps	xmm0, xmm0, xmm1
 -      -      -      -     1.00    -      -     1.00    -      -      -      -     vmovdqu64	xmm17, xmmword ptr [r13]
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vpsrld	xmm1, xmm2, 24
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm1, xmm1
 -      -      -     1.00    -      -      -      -      -      -      -      -     vmulps	xmm1, xmm5, xmm1
 -      -      -      -      -     1.00    -     1.00    -      -      -      -     vpshufb	xmm2, xmm17, xmmword ptr [rip + .LCPI9_9]
 -      -     0.51   0.49    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm2, xmm2
 -      -     0.98   0.02    -     1.00    -      -      -      -      -      -     vmulps	xmm3, xmm16, xmmword ptr [rsp + 144]
 -      -      -     1.00    -      -      -      -      -      -      -      -     vaddps	xmm0, xmm0, xmm1
 -      -     1.00    -     1.00    -      -      -      -      -      -      -     vmulps	xmm5, xmm0, xmmword ptr [rsp + 96]
 -      -      -     1.00    -      -      -      -      -      -      -      -     vmaxps	xmm0, xmm3, xmm6
 -      -      -     1.00    -      -      -      -      -      -      -      -     vminps	xmm0, xmm0, xmm9
 -      -     0.51   0.49    -      -      -      -      -      -      -      -     vmulps	xmm1, xmm2, xmm2
 -      -     0.51   0.49    -      -      -      -      -      -      -      -     vmulps	xmm2, xmm5, xmm20
 -      -     0.51   0.49    -      -      -      -      -      -      -      -     vaddps	xmm16, xmm2, xmm28
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     vmulps	xmm1, xmm1, xmm16
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vaddps	xmm1, xmm0, xmm1
 -      -      -      -     1.00    -      -     1.00    -      -      -      -     vpshufb	xmm0, xmm17, xmmword ptr [rip + .LCPI9_8]
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm0, xmm0
 -      -     0.98   0.02   1.00    -      -      -      -      -      -      -     vmulps	xmm2, xmm19, xmmword ptr [rsp + 128]
 -      -     0.51   0.49    -      -      -      -      -      -      -      -     vmaxps	xmm2, xmm2, xmm6
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     vminps	xmm2, xmm2, xmm9
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vmulps	xmm0, xmm0, xmm0
 -      -     0.51   0.49    -      -      -      -      -      -      -      -     vmulps	xmm0, xmm0, xmm16
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vaddps	xmm2, xmm0, xmm2
 -      -      -      -      -      -      -     1.00    -      -      -      -     vpandd	xmm0, xmm17, xmm31
 -      -     0.99   0.01    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm0, xmm0
 -      -     0.99   0.01    -     1.00    -      -      -      -      -      -     vmulps	xmm3, xmm26, xmmword ptr [rsp + 112]
 -      -     0.51   0.49    -      -      -      -      -      -      -      -     vmaxps	xmm3, xmm3, xmm6
 -      -     0.48   0.52    -      -      -      -      -      -      -      -     vminps	xmm3, xmm3, xmm9
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     vmulps	xmm0, xmm0, xmm0
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     vmulps	xmm0, xmm0, xmm16
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vaddps	xmm3, xmm0, xmm3
 -      -      -      -      -      -      -     1.00    -      -      -      -     vmovaps	xmm0, xmm1
 -      -     1.00    -      -      -      -      -      -      -      -      -     rsqrtps	xmm0, xmm0
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vmulps	xmm1, xmm0, xmm1
 -      -      -     0.02    -      -      -     0.98    -      -      -      -     vmovaps	xmm0, xmm2
 -      -     1.00    -      -      -      -      -      -      -      -      -     rsqrtps	xmm0, xmm0
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vmulps	xmm2, xmm0, xmm2
 -      -      -     0.98    -      -      -     0.02    -      -      -      -     vmovaps	xmm0, xmm3
 -      -     1.00    -      -      -      -      -      -      -      -      -     rsqrtps	xmm0, xmm0
 -      -     0.51   0.49    -      -      -      -      -      -      -      -     vmulps	xmm3, xmm0, xmm3
 -      -      -      -      -      -      -     1.00    -      -      -      -     vmovaps	xmm0, xmm1
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     cvtps2dq	xmm0, xmm0
 -      -     0.02   0.98    -      -      -      -      -      -      -      -     vmovdqa	xmm1, xmm0
 -      -      -      -      -      -      -     1.00    -      -      -      -     vmovaps	xmm0, xmm2
 -      -     0.01   0.99    -      -      -      -      -      -      -      -     cvtps2dq	xmm0, xmm0
 -      -     0.49   0.49    -      -      -     0.02    -      -      -      -     vmovdqa	xmm2, xmm0
 -      -      -      -      -      -      -     1.00    -      -      -      -     vmovaps	xmm0, xmm3
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     cvtps2dq	xmm0, xmm0
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     vpslld	xmm1, xmm1, 16
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vpslld	xmm2, xmm2, 8
 -      -      -     0.49    -      -      -     0.51    -      -      -      -     vpternlogd	xmm2, xmm0, xmm1, 254
 -      -      -      -      -      -      -     1.00    -      -      -      -     vcmpleps	k2 {k2}, xmm15, xmm28
 -      -      -      -      -      -      -     1.00    -      -      -      -     vcmpleps	k2 {k2}, xmm6, xmm15
 -      -      -      -      -      -      -     1.00    -      -      -      -     vcmpleps	k2 {k2}, xmm6, xmm4
 -      -      -      -      -      -      -     1.00    -      -      -      -     vcmpleps	k2 {k2}, xmm4, xmm28
 -      -     0.49   0.51    -      -      -      -      -      -      -      -     vpsrld	xmm0, xmm17, 24
 -      -     0.51   0.49    -      -      -      -      -      -      -      -     vcvtdq2ps	xmm0, xmm0
 -      -     0.51   0.49    -      -      -      -      -      -      -      -     vmulps	xmm0, xmm16, xmm0
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vaddps	xmm0, xmm5, xmm0
 -      -      -     1.00    -      -      -      -      -      -      -      -     cvtps2dq	xmm0, xmm0
 -      -     0.50   0.50    -      -      -      -      -      -      -      -     vpslld	xmm0, xmm0, 24
 -      -      -     1.00    -      -      -      -      -      -      -      -     vpord	xmm17 {k2}, xmm2, xmm0
 -      -      -      -      -      -     1.00    -      -     1.00    -      -     vmovdqa64	xmmword ptr [r13], xmm17
 -      -     1.00    -      -      -      -      -      -      -      -      -     kxnorw	k2, k0, k0


Timeline view:
                    0123456789          0123456789          0123456789          0123456789
Index     0123456789          0123456789          0123456789          0123456789          

[0,0]     DeeeeER   .    .    .    .    .    .    .    .    .    .    .    .    .    .   .   vmaxps	xmm0, xmm15, xmm6
[0,1]     D====eeeeER    .    .    .    .    .    .    .    .    .    .    .    .    .   .   vminps	xmm0, xmm0, xmm28
[0,2]     D========eeeeER.    .    .    .    .    .    .    .    .    .    .    .    .   .   vmulps	xmm0, xmm24, xmm0
[0,3]     DeeeeE--------R.    .    .    .    .    .    .    .    .    .    .    .    .   .   vmaxps	xmm1, xmm4, xmm6
[0,4]     D====eeeeE----R.    .    .    .    .    .    .    .    .    .    .    .    .   .   vminps	xmm1, xmm1, xmm28
[0,5]     D========eeeeER.    .    .    .    .    .    .    .    .    .    .    .    .   .   vmulps	xmm1, xmm25, xmm1
[0,6]     .D===========eeeeER .    .    .    .    .    .    .    .    .    .    .    .   .   vaddps	xmm0, xmm0, xmm29
[0,7]     .D===========eeeeER .    .    .    .    .    .    .    .    .    .    .    .   .   vaddps	xmm1, xmm1, xmm29
[0,8]     .D===============eeeeER  .    .    .    .    .    .    .    .    .    .    .   .   vcvttps2dq	xmm2, xmm0
[0,9]     .D===================eeeeER   .    .    .    .    .    .    .    .    .    .   .   vcvtdq2ps	xmm3, xmm2
[0,10]    .D=======================eeeeER    .    .    .    .    .    .    .    .    .   .   vsubps	xmm5, xmm0, xmm3
[0,11]    .D===============eeeeE--------R    .    .    .    .    .    .    .    .    .   .   vcvttps2dq	xmm0, xmm1
[0,12]    . D==================eeeeE----R    .    .    .    .    .    .    .    .    .   .   vcvtdq2ps	xmm3, xmm0
[0,13]    . D======================eeeeER    .    .    .    .    .    .    .    .    .   .   vsubps	xmm16, xmm1, xmm3
[0,14]    . D===================eE------R    .    .    .    .    .    .    .    .    .   .   vpslld	xmm1, xmm2, 2
[0,15]    . D===================eeeeeeeeeeER .    .    .    .    .    .    .    .    .   .   vpmulld	xmm0, xmm23, xmm0
[0,16]    . D=============================eER.    .    .    .    .    .    .    .    .   .   vpaddd	xmm7, xmm1, xmm0
[0,17]    .  D=============================eeeER  .    .    .    .    .    .    .    .   .   vpmovsxdq	ymm0, xmm7
[0,18]    .  D================================eER .    .    .    .    .    .    .    .   .   vpaddq	ymm0, ymm27, ymm0
[0,19]    .  D=================================eeeER   .    .    .    .    .    .    .   .   vpextrq	r8, xmm0, 1
[0,20]    .  D==================================eeER   .    .    .    .    .    .    .   .   vmovq	rax, xmm0
[0,21]    .  D==================================eeeER  .    .    .    .    .    .    .   .   vextracti128	xmm0, ymm0, 1
[0,22]    .   D====================================eeeER    .    .    .    .    .    .   .   vpextrq	rdx, xmm0, 1
[0,23]    .   D=====================================eeER    .    .    .    .    .    .   .   vmovq	rcx, xmm0
[0,24]    .   D===================================eeeeeER   .    .    .    .    .    .   .   vmovd	xmm0, dword ptr [rax + 4]
[0,25]    .   D===================================eeeeeeER  .    .    .    .    .    .   .   vpinsrd	xmm0, xmm0, dword ptr [r8 + 4], 1
[0,26]    .    D======================================eeeeeeER   .    .    .    .    .   .   vpinsrd	xmm0, xmm0, dword ptr [rcx + 4], 2
[0,27]    .    D=======================================eeeeeeER  .    .    .    .    .   .   vpinsrd	xmm0, xmm0, dword ptr [rdx + 4], 3
[0,28]    .    DeE--------------------------------------------R  .    .    .    .    .   .   kxnorw	k3, k0, k0
[0,29]    .    D===================================eeeeeE-----R  .    .    .    .    .   .   vmovd	xmm1, dword ptr [rax + r12]
[0,30]    .    .D===================================eeeeeeE---R  .    .    .    .    .   .   vpinsrd	xmm1, xmm1, dword ptr [r8 + r12], 1
[0,31]    .    .D=======================================eeeeeeER .    .    .    .    .   .   vpinsrd	xmm1, xmm1, dword ptr [rcx + r12], 2
[0,32]    .    .D========================================eeeeeeER.    .    .    .    .   .   vpinsrd	xmm1, xmm1, dword ptr [rdx + r12], 3
[0,33]    .    . D----------------------------------------------R.    .    .    .    .   .   vxorps	xmm3, xmm3, xmm3
[0,34]    .    . D=================================eeeeeE-------R.    .    .    .    .   .   vmovd	xmm2, dword ptr [rax + r12 + 4]
[0,35]    .    . D===================================eeeeeeE----R.    .    .    .    .   .   vpinsrd	xmm2, xmm2, dword ptr [r8 + r12 + 4], 1
[0,36]    .    . D========================================eeeeeeER    .    .    .    .   .   vpinsrd	xmm2, xmm2, dword ptr [rcx + r12 + 4], 2
[0,37]    .    .  D========================================eeeeeeER   .    .    .    .   .   vpinsrd	xmm2, xmm2, dword ptr [rdx + r12 + 4], 3
[0,38]    .    .   D=======================eeeeeeeeeeeeeeeeeeeE---R   .    .    .    .   .   vpgatherdd	xmm3 {k3}, xmmword ptr [rsi + xmm7]
[0,39]    .    .   D==========================================eE--R   .    .    .    .   .   vpandq	xmm7, xmm3, xmm30
[0,40]    .    .    D==========================================eeeeeER.    .    .    .   .   vpmullw	xmm7, xmm7, xmm7
[0,41]    .    .    D===============================================eER    .    .    .   .   vpsrld	xmm26, xmm7, 16
[0,42]    .    .    D================================================eeeeER.    .    .   .   vcvtdq2ps	xmm26, xmm26
[0,43]    .    .    D==================eeeeE------------------------------R.    .    .   .   vsubps	xmm8, xmm28, xmm5
[0,44]    .    .    D==================eeeeE------------------------------R.    .    .   .   vsubps	xmm17, xmm28, xmm16
[0,45]    .    .    D=======================eeeeE-------------------------R.    .    .   .   vmulps	xmm18, xmm17, xmm8
[0,46]    .    .    .D======================eeeeE-------------------------R.    .    .   .   vmulps	xmm17, xmm5, xmm17
[0,47]    .    .    .D=======================eeeeE------------------------R.    .    .   .   vmulps	xmm8, xmm16, xmm8
[0,48]    .    .    .D==================eeeeE-----------------------------R.    .    .   .   vmulps	xmm5, xmm16, xmm5
[0,49]    .    .    .D===================================================eeeeER .    .   .   vmulps	xmm16, xmm18, xmm26
[0,50]    .    .    .D===================================================eeeeER .    .   .   vmulps	xmm19, xmm17, xmm26
[0,51]    .    .    .D=======================================================eeeeER  .   .   vaddps	xmm16, xmm16, xmm19
[0,52]    .    .    . D===================================================eeeeE---R  .   .   vmulps	xmm19, xmm8, xmm26
[0,53]    .    .    . D==========================================================eeeeER  .   vaddps	xmm16, xmm19, xmm16
[0,54]    .    .    . D=======================================eE----------------------R  .   vpsrlw	xmm19, xmm3, 8
[0,55]    .    .    . D========================================eeeeeE-----------------R  .   vpmullw	xmm10, xmm19, xmm19
[0,56]    .    .    . D===================================================eeeeE-------R  .   vmulps	xmm19, xmm5, xmm26
Truncated display due to cycle limit


Average Wait times (based on the timeline view):
[0]: Executions
[1]: Average time spent waiting in a scheduler's queue
[2]: Average time spent waiting in a scheduler's queue while ready
[3]: Average time elapsed from WB until retire stage

      [0]    [1]    [2]    [3]
0.     10    7.3    7.3    38.7      vmaxps	xmm0, xmm15, xmm6
1.     10    10.8   0.0    35.1      vminps	xmm0, xmm0, xmm28
2.     10    14.5   0.1    31.4      vmulps	xmm0, xmm24, xmm0
3.     10    6.8    6.8    38.6      vmaxps	xmm1, xmm4, xmm6
4.     10    10.8   0.4    34.2      vminps	xmm1, xmm1, xmm28
5.     10    14.3   0.0    30.2      vmulps	xmm1, xmm25, xmm1
6.     10    16.6   0.0    27.8      vaddps	xmm0, xmm0, xmm29
7.     10    17.4   0.1    26.5      vaddps	xmm1, xmm1, xmm29
8.     10    20.1   0.0    24.2      vcvttps2dq	xmm2, xmm0
9.     10    24.6   0.9    19.7      vcvtdq2ps	xmm3, xmm2
10.    10    28.1   0.0    16.1      vsubps	xmm5, xmm0, xmm3
11.    10    20.3   0.2    23.5      vcvttps2dq	xmm0, xmm1
12.    10    23.8   0.1    19.4      vcvtdq2ps	xmm3, xmm0
13.    10    27.8   0.4    15.0      vsubps	xmm16, xmm1, xmm3
14.    10    22.7   1.4    22.6      vpslld	xmm1, xmm2, 2
15.    10    23.0   0.6    13.2      vpmulld	xmm0, xmm23, xmm0
16.    10    32.5   0.0    12.3      vpaddd	xmm7, xmm1, xmm0
17.    10    33.7   0.3    9.3       vpmovsxdq	ymm0, xmm7
18.    10    36.3   0.0    8.4       vpaddq	ymm0, ymm27, ymm0
19.    10    38.8   2.0    3.7       vpextrq	r8, xmm0, 1
20.    10    36.9   0.6    6.1       vmovq	rax, xmm0
21.    10    38.2   2.3    3.6       vextracti128	xmm0, ymm0, 1
22.    10    41.3   0.8    0.4       vpextrq	rdx, xmm0, 1
23.    10    40.7   1.8    0.4       vmovq	rcx, xmm0
24.    10    36.1   0.0    2.0       vmovd	xmm0, dword ptr [rax + 4]
25.    10    38.0   0.8    0.0       vpinsrd	xmm0, xmm0, dword ptr [r8 + 4], 1
26.    10    40.6   0.0    0.0       vpinsrd	xmm0, xmm0, dword ptr [rcx + 4], 2
27.    10    40.9   0.0    0.0       vpinsrd	xmm0, xmm0, dword ptr [rdx + 4], 3
28.    10    1.1    1.1    43.8      kxnorw	k3, k0, k0
29.    10    32.6   0.2    8.3       vmovd	xmm1, dword ptr [rax + r12]
30.    10    36.5   2.5    2.8       vpinsrd	xmm1, xmm1, dword ptr [r8 + r12], 1
31.    10    39.9   1.2    0.0       vpinsrd	xmm1, xmm1, dword ptr [rcx + r12], 2
32.    10    39.6   0.0    0.0       vpinsrd	xmm1, xmm1, dword ptr [rdx + r12], 3
33.    10    0.0    0.0    45.5      vxorps	xmm3, xmm3, xmm3
34.    10    30.6   1.1    9.8       vmovd	xmm2, dword ptr [rax + r12 + 4]
35.    10    36.0   4.7    2.9       vpinsrd	xmm2, xmm2, dword ptr [r8 + r12 + 4], 1
36.    10    38.6   2.4    0.0       vpinsrd	xmm2, xmm2, dword ptr [rcx + r12 + 4], 2
37.    10    38.2   0.0    0.0       vpinsrd	xmm2, xmm2, dword ptr [rdx + r12 + 4], 3
38.    10    19.0   1.2    5.0       vpgatherdd	xmm3 {k3}, xmmword ptr [rsi + xmm7]
39.    10    36.8   0.0    4.0       vpandq	xmm7, xmm3, xmm30
40.    10    36.4   0.0    0.1       vpmullw	xmm7, xmm7, xmm7
41.    10    41.3   0.0    0.0       vpsrld	xmm26, xmm7, 16
42.    10    41.5   0.0    0.0       vcvtdq2ps	xmm26, xmm26
43.    10    10.8   0.8    30.6      vsubps	xmm8, xmm28, xmm5
44.    10    11.0   0.8    29.5      vsubps	xmm17, xmm28, xmm16
45.    10    15.1   0.1    25.4      vmulps	xmm18, xmm17, xmm8
46.    10    14.6   0.6    24.9      vmulps	xmm17, xmm5, xmm17
47.    10    13.9   1.0    25.6      vmulps	xmm8, xmm16, xmm8
48.    10    9.4    1.1    29.2      vmulps	xmm5, xmm16, xmm5
49.    10    41.8   0.0    0.0       vmulps	xmm16, xmm18, xmm26
50.    10    41.7   0.0    0.0       vmulps	xmm19, xmm17, xmm26
51.    10    44.9   0.0    0.0       vaddps	xmm16, xmm16, xmm19
52.    10    41.7   1.0    3.0       vmulps	xmm19, xmm8, xmm26
53.    10    47.8   0.0    0.0       vaddps	xmm16, xmm19, xmm16
54.    10    28.0   0.0    22.0      vpsrlw	xmm19, xmm3, 8
55.    10    28.1   0.0    17.0      vpmullw	xmm10, xmm19, xmm19
56.    10    39.1   1.0    7.0       vmulps	xmm19, xmm5, xmm26
57.    10    50.1   0.0    0.0       vaddps	xmm16, xmm19, xmm16
58.    10    27.9   1.6    24.2      vpsrlw	xmm19, xmm0, 8
59.    10    28.9   0.0    19.2      vpmullw	xmm11, xmm19, xmm19
60.    10    31.2   0.0    20.0      vpblendw	xmm10, xmm10, xmm6, 170
61.    10    32.2   0.0    16.0      vcvtdq2ps	xmm19, xmm10
62.    10    32.0   0.0    18.2      vpblendw	xmm10, xmm11, xmm6, 170
63.    10    33.0   0.0    14.2      vcvtdq2ps	xmm26, xmm10
64.    10    36.2   2.0    10.0      vmulps	xmm19, xmm18, xmm19
65.    10    36.0   0.0    10.2      vmulps	xmm26, xmm17, xmm26
66.    10    39.4   0.0    5.9       vaddps	xmm19, xmm19, xmm26
67.    10    25.0   0.1    23.3      vpsrlw	xmm26, xmm1, 8
68.    10    25.9   0.0    18.3      vpmullw	xmm10, xmm26, xmm26
69.    10    30.5   0.4    16.9      vpblendw	xmm10, xmm10, xmm6, 170
70.    10    31.2   0.1    12.8      vcvtdq2ps	xmm26, xmm10
71.    10    34.4   0.0    8.8       vmulps	xmm26, xmm8, xmm26
72.    10    40.8   0.0    1.9       vaddps	xmm19, xmm19, xmm26
73.    10    24.0   0.1    20.9      vpsrlw	xmm26, xmm2, 8
74.    10    25.3   0.4    15.5      vpmullw	xmm10, xmm26, xmm26
75.    10    30.2   0.0    14.5      vpblendw	xmm10, xmm10, xmm6, 170
76.    10    31.3   1.2    9.3       vcvtdq2ps	xmm26, xmm10
77.    10    35.3   0.0    5.3       vmulps	xmm26, xmm5, xmm26
78.    10    41.8   0.0    0.0       vaddps	xmm19, xmm19, xmm26
79.    10    16.9   0.4    27.5      vpandq	xmm26, xmm0, xmm30
80.    10    19.0   1.4    21.1      vpmullw	xmm10, xmm26, xmm26
81.    10    21.9   1.0    21.1      vpblendw	xmm7, xmm7, xmm6, 170
82.    10    22.8   0.0    17.1      vcvtdq2ps	xmm26, xmm7
83.    10    24.8   2.4    17.7      vpblendw	xmm7, xmm10, xmm6, 170
84.    10    29.0   3.4    10.3      vcvtdq2ps	xmm7, xmm7
85.    10    29.7   3.9    9.2       vmulps	xmm26, xmm18, xmm26
86.    10    32.0   0.0    6.3       vmulps	xmm7, xmm17, xmm7
87.    10    35.5   0.0    2.3       vaddps	xmm26, xmm26, xmm7
88.    10    14.3   0.0    25.5      vpandq	xmm7, xmm1, xmm30
89.    10    16.5   1.3    19.2      vpmullw	xmm7, xmm7, xmm7
90.    10    22.9   1.9    16.3      vpblendw	xmm7, xmm7, xmm6, 170
91.    10    26.5   3.2    9.1       vcvtdq2ps	xmm7, xmm7
92.    10    30.1   0.0    5.1       vmulps	xmm7, xmm8, xmm7
93.    10    36.3   0.0    0.0       vaddps	xmm26, xmm26, xmm7
94.    10    15.4   1.3    23.5      vpandq	xmm7, xmm2, xmm30
95.    10    16.5   0.6    17.9      vpmullw	xmm7, xmm7, xmm7
96.    10    22.1   1.1    15.8      vpblendw	xmm7, xmm7, xmm6, 170
97.    10    24.9   1.9    9.9       vcvtdq2ps	xmm7, xmm7
98.    10    28.0   0.0    5.9       vmulps	xmm7, xmm5, xmm7
99.    10    36.8   0.0    0.0       vaddps	xmm26, xmm26, xmm7
100.   10    10.9   5.9    27.9      vpsrld	xmm3, xmm3, 24
101.   10    15.9   5.0    18.9      vcvtdq2ps	xmm3, xmm3
102.   10    22.7   3.8    11.1      vmulps	xmm3, xmm18, xmm3
103.   10    9.4    7.2    26.4      vpsrld	xmm0, xmm0, 24
104.   10    21.0   11.5   10.9      vcvtdq2ps	xmm0, xmm0
105.   10    24.0   0.0    6.9       vmulps	xmm0, xmm17, xmm0
106.   10    27.9   0.0    2.9       vaddps	xmm0, xmm3, xmm0
107.   10    21.3   19.2   12.0      vpsrld	xmm1, xmm1, 24
108.   10    22.8   0.9    7.1       vcvtdq2ps	xmm1, xmm1
109.   10    26.7   0.0    3.1       vmulps	xmm1, xmm8, xmm1
110.   10    29.9   0.0    0.0       vaddps	xmm0, xmm0, xmm1
111.   10    1.4    1.4    25.5      vmovdqu64	xmm17, xmmword ptr [r13]
112.   10    21.1   18.5   11.4      vpsrld	xmm1, xmm2, 24
113.   10    22.3   0.8    6.6       vcvtdq2ps	xmm1, xmm1
114.   10    26.3   0.0    2.6       vmulps	xmm1, xmm5, xmm1
115.   10    2.2    1.2    23.3      vpshufb	xmm2, xmm17, xmmword ptr [rip + .LCPI9_9]
116.   10    21.9   13.3   6.0       vcvtdq2ps	xmm2, xmm2
117.   10    22.6   3.6    0.0       vmulps	xmm3, xmm16, xmmword ptr [rsp + 144]
118.   10    31.5   0.0    0.0       vaddps	xmm0, xmm0, xmm1
119.   10    30.9   0.0    0.0       vmulps	xmm5, xmm0, xmmword ptr [rsp + 96]
120.   10    32.1   0.5    4.8       vmaxps	xmm0, xmm3, xmm6
121.   10    35.7   0.0    0.9       vminps	xmm0, xmm0, xmm9
122.   10    23.9   0.0    12.1      vmulps	xmm1, xmm2, xmm2
123.   10    39.9   0.0    0.0       vmulps	xmm2, xmm5, xmm20
124.   10    43.5   0.0    0.0       vaddps	xmm16, xmm2, xmm28
125.   10    46.9   0.0    0.0       vmulps	xmm1, xmm1, xmm16
126.   10    50.9   0.0    0.0       vaddps	xmm1, xmm0, xmm1
127.   10    5.6    5.6    41.9      vpshufb	xmm0, xmm17, xmmword ptr [rip + .LCPI9_8]
128.   10    19.9   7.9    30.0      vcvtdq2ps	xmm0, xmm0
129.   10    21.1   4.0    22.8      vmulps	xmm2, xmm19, xmmword ptr [rsp + 128]
130.   10    30.7   0.0    18.8      vmaxps	xmm2, xmm2, xmm6
131.   10    34.1   0.0    14.8      vminps	xmm2, xmm2, xmm9
132.   10    22.9   0.0    26.0      vmulps	xmm0, xmm0, xmm0
133.   10    44.5   0.0    4.0       vmulps	xmm0, xmm0, xmm16
134.   10    48.8   0.9    0.0       vaddps	xmm2, xmm0, xmm2
135.   10    4.7    4.3    47.1      vpandd	xmm0, xmm17, xmm31
136.   10    20.0   14.7   28.4      vcvtdq2ps	xmm0, xmm0
137.   10    20.9   1.1    20.9      vmulps	xmm3, xmm26, xmmword ptr [rsp + 112]
138.   10    30.9   0.0    16.9      vmaxps	xmm3, xmm3, xmm6
139.   10    34.5   0.0    12.9      vminps	xmm3, xmm3, xmm9
140.   10    22.4   0.0    24.4      vmulps	xmm0, xmm0, xmm0
141.   10    42.9   1.0    3.9       vmulps	xmm0, xmm0, xmm16
142.   10    46.5   0.0    0.0       vaddps	xmm3, xmm0, xmm3
143.   10    48.9   0.0    0.0       vmovaps	xmm0, xmm1
144.   10    49.9   0.0    0.0       rsqrtps	xmm0, xmm0
145.   10    53.5   0.0    0.0       vmulps	xmm1, xmm0, xmm1
146.   10    48.8   0.0    7.1       vmovaps	xmm0, xmm2
147.   10    49.9   0.1    3.0       rsqrtps	xmm0, xmm0
148.   10    53.5   0.0    0.0       vmulps	xmm2, xmm0, xmm2
149.   10    47.9   0.0    8.0       vmovaps	xmm0, xmm3
150.   10    49.9   1.0    3.0       rsqrtps	xmm0, xmm0
151.   10    53.5   0.0    0.0       vmulps	xmm3, xmm0, xmm3
152.   10    54.9   0.0    1.0       vmovaps	xmm0, xmm1
153.   10    55.5   0.0    0.0       cvtps2dq	xmm0, xmm0
154.   10    59.0   0.0    0.0       vmovdqa	xmm1, xmm0
155.   10    54.5   0.0    4.0       vmovaps	xmm0, xmm2
156.   10    55.0   0.0    0.0       cvtps2dq	xmm0, xmm0
157.   10    58.5   0.0    0.0       vmovdqa	xmm2, xmm0
158.   10    54.0   0.0    4.0       vmovaps	xmm0, xmm3
159.   10    54.5   0.0    0.0       cvtps2dq	xmm0, xmm0
160.   10    57.0   0.0    0.0       vpslld	xmm1, xmm1, 16
161.   10    57.5   0.0    0.0       vpslld	xmm2, xmm2, 8
162.   10    58.0   0.0    0.0       vpternlogd	xmm2, xmm0, xmm1, 254
163.   10    1.0    1.0    53.5      vcmpleps	k2 {k2}, xmm15, xmm28
164.   10    4.5    0.0    49.5      vcmpleps	k2 {k2}, xmm6, xmm15
165.   10    8.0    0.0    45.5      vcmpleps	k2 {k2}, xmm6, xmm4
166.   10    12.0   0.0    41.5      vcmpleps	k2 {k2}, xmm4, xmm28
167.   10    10.0   10.0   46.0      vpsrld	xmm0, xmm17, 24
168.   10    10.5   0.0    42.0      vcvtdq2ps	xmm0, xmm0
169.   10    31.0   1.0    21.0      vmulps	xmm0, xmm16, xmm0
170.   10    35.4   0.9    16.1      vaddps	xmm0, xmm5, xmm0
171.   10    38.9   0.0    12.1      cvtps2dq	xmm0, xmm0
172.   10    42.4   0.0    11.1      vpslld	xmm0, xmm0, 24
173.   10    54.0   0.0    0.0       vpord	xmm17 {k2}, xmm2, xmm0
174.   10    54.5   0.0    0.0       vmovdqa64	xmmword ptr [r13], xmm17
175.   10    7.2    7.2    47.3      kxnorw	k2, k0, k0
       10    30.5   1.3    13.1      <total>
